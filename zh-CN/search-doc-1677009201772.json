[{"title":"安装方式","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"如何为 Google Chrome 浏览器或使用 Chromium 内核的浏览器安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-google-chrome-浏览器或使用-chromium-内核的浏览器安装-adguard-浏览器扩展","content":"在 Chrome Web Store 中打开本扩展的页面然后点击「添加至 Chrome」（Add to Chrome）。  在打开的对话框中，点击「添加此扩展」（Add extension）。  "},{"title":"如何为 Opera 浏览器安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-opera-浏览器安装-adguard-浏览器扩展","content":"打开 addons.opera.com 页面。  点击「添加至 Opera」（Add to Opera）。 "},{"title":"如何为 Firefox 浏览器安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-firefox-浏览器安装-adguard-浏览器扩展","content":"打开 addons.mozilla.org 网页。  点击「添加至 Firefox」（Add to Firefox）。 "},{"title":"如何为 Yandex 浏览器安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-yandex-浏览器安装-adguard-浏览器扩展","content":"点击浏览器右上角浏览器设置按钮，然后在下拉菜单中选择「扩展」（Add-ons）。 向下滚动找到 AdGuard，然后点击「安装」（Install）。  "},{"title":"如何为 Microsoft Edge 安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-microsoft-edge-安装-adguard-浏览器扩展","content":"在 Edge 浏览器插件商店中找到 AdGuard 浏览器扩展，然后点击「获取」（Get）。  在打开的对话框中，按下「添加扩展」（Add extension）。  或者，您可以从 Chrome 网上应用店安装适用于 Edge 的 AdGuard 浏览器扩展。 在 Edge 浏览器中打开 Chrome 的网页，在页面顶部的横幅上选择「允许来自其他应用商店的扩展程序」（Allow extensions from other stores）。  在弹出的对话框中，点击「允许」（Allow）。  点击「添加到 Chrome」（Add to Chrome）。  在打开的对话窗口中，点击「添加扩展」（Add extension）安装 AdGuard 浏览器扩展。  "},{"title":"如何为 Safari 浏览器安装 AdGuard 浏览器扩展​","type":1,"pageTitle":"安装方式","url":"adguard-browser-extension/installation/#如何为-safari-浏览器安装-adguard-浏览器扩展","content":"适用于 Safari 的 AdGuard 不是一般意义上的浏览器扩展。 您可以在知识库中阅读更多相关信息， 或者您可以直接从本网页下载安装文件。 "},{"title":"整合模式（旧版）","type":0,"sectionRef":"#","url":"adguard-browser-extension/integration-mode/","content":"","keywords":""},{"title":"什么是整合模式?​","type":1,"pageTitle":"整合模式（旧版）","url":"adguard-browser-extension/integration-mode/#什么是整合模式","content":"在旧版本的 AdGuard 浏览器扩展中，如果您将它与一个 AdGuard 桌面应用程序（AdGuard for Windows 或 AdGuard for Mac）一起安装，则该扩展会自行承担 AdGuard 助手的功能 —— 一种帮助直接从网页管理过滤的工具。 同时，广告拦截本身完全在桌面应用程序的控制之下，扩展及其设置对此没有任何作用。 问题是，在某些情况下，应用程序和扩展程序会彼此妨碍对方的工作。 一些网站将不再受到桌面程序的保护，并且仅由能力较小的扩展程序支持。 因此，从 AdGuard 浏览器扩展 v3.5 版本开始，整合模式被删除。 取而代之的是，新的 AdGuard 浏览器助手已开始使用。 "},{"title":"AdGuard 浏览器助手​","type":1,"pageTitle":"整合模式（旧版）","url":"adguard-browser-extension/integration-mode/#adguard-浏览器助手","content":" AdGuard 浏览器助手是一个新的浏览器扩展，其工作方式和整合模式一样，但更轻，没有冗赘功能，并且不会干扰桌面应用程序。 您可以阅读有关 Windows 浏览器助手 或 Mac 浏览器助手的更多信息，或 从我们的网站下载它。 AdGuard 浏览器助手可在所有主流浏览器中下载。 "},{"title":"安装","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"安装 该应用程序可在五个商店购买：Google Play、三星 Galaxy 商店、华为商店、Aptoide 和 F-Droid。 要从 Google Play 安装 AdGuard 内容拦截程序，请搜索 AdGuard 内容拦截程序并点击「安装」。 注意：AdGuard 内容拦截程序可在两种浏览器中使用： Yandex 浏览器和三星浏览器。 安装完成后，点击「打开」运行应用程序。 如果用户在设备上已安装适当的浏览器，应用程序将要求您启用 AdGuard。 如果您没有一个适当的浏览器，用户会被提示选择并安装一个。 安装浏览器后，用户可以启动 AdGuard 内容拦截程序，并在浏览器里拦截广告和跟踪器。","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"Features overview AdGuard has two Android apps: AdGuard for Android and AdGuard Content Blocker. AdGuard for Android has a much wider range of functionality: it blocks ads, trackers, and annoyances in browsers and apps, uses filters as well as domain-level ad blocking, and supports user rules. AdGuard Content Blocker is limited by its functionality. Full-fledged ad blockers can’t be introduced to Google Play due to the policy of the store. Google Play has banned &quot;apps that block or interfere with another app displaying ads&quot;. Thus, AdGuard for Android can be downloaded on AdGuard's official website only. As an alternative, Google offers to developers the Content blocking API. The API has strict limitations and is currently supported by two browsers: Yandex Browser and Samsung Internet browser. Many complex filtering rules supported in other AdGuard products don't work with this API. AdGuard Content Blocker was designed to fit the Google Play policy framework. Compared to other AdGuard products, AdGuard Content Blocker has less ad blocking capabilities: AdGuard Content Blocker works only in browsers that support the content blocking technology. Currently, there are two: Yandex Browser and Samsung Internet browser.Within the existing technology, the functionality of AdGuard Content Blocker is limited: for example it cannot block ads and trackers in apps or other browsers, has no filtering log and doesn't support filtering at the domain level. However, AdGuard Content Blocker has 35 filters that allow you to block ads, trackers, and annoyances in two supported browsers. You can also customize ad blocking by selecting appropriate language-specific filters or adding user rules. AdGuard Content Blocker is a free open-source software. Its source code is available on GitHub. For a better and more customizable ad blocking experience, try using the full-fledged Android app. AdGuard for Android can be downloaded from our website.","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-browser-extension/overview/","content":"","keywords":""},{"title":"Availability​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#br-extension","content":"AdGuard Browser extension is available for most major browsers. You can easily find it in your browser’s online store or on our official website.  We have a standalone extension for Safari. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why. "},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#adblocker","content":"Blocking ads is clearly the key functionality of any ad blocker, and AdGuard is not an exception. The extension will successfully block ads on any page in your browser. Ad blocking is based on so-called filter lists, or simply filters. Filters can be enabled or disabled in your extension's settings. You can customize ad blocking by activating specific filters. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#filters","content":"In essence, filter lists are sets of rules written in a special language. Your ad blocker interpretes the rules and implements them. As a result, you stop seeing ads on your webpages.  All filters are grouped according to their role. For example, there are categories for ad-blocking filters, privacy protection filters, social media-related filters, etc. You can enable either individual filters or the entire group at once.  Custom filters​ While the features of other filter groups are more or less predictable, there is a group called Custom that may raise additional questions.  In this tab, you can add filters that are not present in the extension by default. There are plenty of publicly available filters on the Internet. Moreover, you can create and add your own filters. In fact, you can build any set of filters and customize ad blocking the way you like. To add a filter, just click Add custom filter, enter the URL or the file path of the filter you want to be added and click Next.  "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#user-rules","content":"User rules is another tool that helps you customize the blocking of ads.  There are several ways to add new rules. The most straightforward is to just type a rule in, but it requires some knowledge of the rule syntax. You can import a ready-to-use filter list from a text file as well. Make sure that different rules are separated by line breaks. Note that importing a ready-to-use filter list is better done in the Custom filters tab. Besides, you can export your own filtering rules. This option is good for transferring your list of rules between browsers or devices. When you add a website to the Allowlist (more on that below) or use the Assistant tool for hiding an element on the page, a corresponding rule is also saved in User rules. "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#allowlist","content":"The allowlist is used to exclude certain websites from filtering. Blocking rules are not applied to the websites on the list.  The allowlist can be inverted, too: you can unblock ads everywhere except on the websites added to this list. To do that, activate the Invert allowlist option.  You can also import and export existing allowlists. It is useful, for instance, if you want to apply the same allowing rules in each of your browsers. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#stealth-mode","content":"Stealth Mode aims to ensure the protection of sensitive personal data from online trackers and fraudsters.  In Stealth Mode, you can prevent a website from seeing the search queries from you used to find it on the Internet, automatically delete third-party and website’s own cookies, etc. A separate article is devoted to all these features. Note that some of the Stealth Mode options available in full-fledged apps are not present in the browser extensions due to technical restrictions. "},{"title":"Other features and options​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#other","content":"Apart from the large key modules of AdGuard Browser extension, there are several more specific features that can be configured in the General and Additional settings tabs of the extension settings. "},{"title":"常规​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#general","content":"In the General tab, you can allow search ads and the self-promotion of websites, enable the automatic activation of language-specific filters, indicate the filters update interval, etc.  Besides, here you can enable Phishing and malware protection. You can save your settings configuration by clicking the Export settings button. The settings will be saved as a .json file. To upload the previously saved settings configuration, use the Import settings function. You can even use it to quickly switch between different settings profiles or even to transfer settings configurations between different browsers. "},{"title":"Additional settings​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#misc","content":"The Additional settings section contains a range of various settings that are related to the ad blocking process and application usability.  From this tab, you can activate optimized filters, enable notifications about extension updates, open the Filtering log, or clear the statistics of blocked ads and trackers. Besides, you can opt to help us with the development of filters by sending the statistics on applied rules: which ones are triggered, on which websites, and how often. All data is strictly anonymized; this option is disabled by default. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#about","content":"In the About section, you can find infos about the current version, links to the EULA and Privacy policy, and to the repository of the Browser extension on GitHub.  "},{"title":"Extension’s main menu​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#main-menu","content":"The extension's main page can be accessed by clicking on the extension's icon on the toolbar of your browser.  On the main page, you can hide any element on any page manually (a corresponding rule will be added to the User rules), open the Filtering log to view the complete information about your browser's traffic and block requests on the go, or look at a website’s security report. Besides, you can submit a complaint about any website (for example, if there are missed ads on the page, our filter engineers will review the report and fix the problem) and see the statistics on applied blocking rules. All web requests made by the browser are displayed in the Filtering log, along with detailed information about each request. The Filtering log makes it easy, for example, to monitor requests blocked by AdGuard Browser extension. Besides, it allows you to block any request or add a previously blocked request to Allowlist in two clicks. The Filtering log also offers you a wide variety of options for sorting web requests, which can be helpful when creating your own filtering rules. You can open the Filtering log by selecting the corresponding item in the main menu, or from the settings page (in the &quot;Additional settings&quot; tab). By clicking the icons in the top right corner of the extension's main menu, you can open the extension settings or pause the protection. "},{"title":"AdGuard Browser extension vs. standalone apps​","type":1,"pageTitle":"Features overview","url":"adguard-browser-extension/overview/#comparison","content":"The main advantage of AdGuard standalone programs over browser extensions is that the programs can block ads in every browser and in almost all apps. You may use different browsers at the same time, the app will filter ads and online threats in all of them equally well. The second difference is that the possibilities of extension-based ad blockers are strictly limited by browser guidelines. The browser extensions have to conform to the policies of the browsers, where ad blocking might be restricted. Thus, some types of filtering rules are not supported by the extensions. The functionality of the desktop apps is not limited, so they have a better filtering quality. Whereas AdGuard Browser extension is free and easy to install, and has filters to block ads and fight online threats, the full-fledged apps are more powerful and have a list of advanced features. See all the differences in the comparative table below.  1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. If a malicious or tracking extension sends a request to its server to show you ads or track your activity, AdGuard Browser extension will not be able to block that request; 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser restrictions. Some elements may get to the page and slow down the loading process. Besides, unlike browser-based ad blockers, the AdGuard app blocks ads before they are loaded to the browser. This saves traffic and speeds up page loading. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#系统需求","content":"操作系统版本： 安卓 5.0 以上。 RAM： 至少 2 GB。 可用磁盘空间： 120MB。 "},{"title":"Installation​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#installation","content":"虽然大部分用于安卓系统的应用程序可以通过谷歌商店分发，但是 AdGuard 不在里面。谷歌禁止通过谷歌商店分发网络层的广告拦截程序，即，在其他应用程序里屏蔽商业广告的应用程序。 在我们的博客上可以了解更多关于谷歌限制性政策的相关信息。 由于上述原因，您只可以手动安装适用于安卓的 AdGuard。 为了在移动设备上使用该应用程序，您需要执行以下操作。 首先，请在操作系统设置里允许安装未知来源的应用程序。 以执行此操作请您： 对于 Android 8+：开始下载 AdGuard apk 文件（请参阅下一步），系统会提示您允许访问权限。 在打开的窗口点击设置并启用允许此来源。 然后继续安装。安卓 6 和 7：打开设置，在系统和设备部分选择其他设置。 启用未知来源并在系统警示窗口上点击OK。  安卓 5：打开设置，在个人设置部分选择安全。 启用未知来源并在系统警示窗口上点击OK。  现在您就可以在您的设备上安装应用程序了。 打开浏览器并输入以下的网址：https://adguard.com/apk，或扫 QR 码：  您将会看到确认下载文件的提示。 点击下载。  下载完成后，系统将会确认您是否想安装 AdGuard 应用程序。 点击安装。  点击安装后，您将会看到阅读许可协议和 AdGuard 隐私政策的页面。 您还可以参与应用程序的改进过程。 如您想要参加，请您勾选自动发送崩溃报告和发送技术和交互数据。 点击接受即可。  现在您要选择快速或完全设置方式。  点击完全设置方式后，屏幕上将会出现几个显示设置选项，以让您按自己需求设置 AdGuard。 首先，我们会问您是否想要启用搜索广告的过滤器：  下一个是，是否要拦截社交媒体小工具（比如，“赞”按钮）：  下一个是恼人元素，包括 Cookie 通知、支持窗口等等：  您不必在这个屏幕上选择任何设置：只要注意到关于如何观看没有广告的 YouTube 视频的信息：  下一个是隐私设置。 请选择您所想使用的保护水平：  在下一个屏幕上，选择您是否想收到关于危险网站的通知：  下一步很重要，就是关于 HTTPS 过滤。 我们推荐您启用该选项，以让广告拦截更强：  最后一步是启用本地 VPN：  现在 AdGuard 安装成功完成。 "},{"title":"卸载/重新安装 AdGuard​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#卸载重新安装-adguard","content":"如您想要在您的设备上重新安装 AdGuard，请您先删除应用程序，前往设置 → 已安装的应用程序（安卓 6）、应用程序（安卓 5 和 7）或应用程序和通知（安卓 8+）。 在已安装的应用程序列表内找到 AdGuard 并点击卸载。  为了重新安装应用程序，请执行上述“安装过程”部分讲述的步骤。 "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-android/overview/","content":"","keywords":""},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#ad-blocking","content":"Any ad blocker's main purpose is to block ads, and for the majority of AdGuard software ad-blocking algorithms are mostly the same. The mechanism of filtering ads is described here.  The ad-blocking feature is pretty obvious in its concept, but there are some points worthy of a separate mention. Most importantly, AdGuard works as a universal filter sifting through your apps traffic and deciding what to do with this or that web request. The whole process is managed by filters — lists of special rules. The program has a default and constantly updated set of filters but you can also add your own filtering rules and filters to this set. Most mobile ad blockers for Android use this principle, but what is pretty much the whole app in their case is only one of the many features for AdGuard. Read this comparative article to learn the differences between AdGuard and other ad blockers. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filters","content":"The program uses a lot of different filters, our own and third-party ones, sorted by language and their purpose. For example, filters in the Annoyances category are very different from the language-specific ones.  Find out more about all the filters available for AdGuard products by reading their descriptions in the app or this comprehensive article. "},{"title":"Custom filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#custom-filters","content":" AdGuard allows you to create your own custom filters, using the same type of rules that we have in our filters. If you want to try your hand at this, we would recommend studying the article on creating your own ad filters which describes the AdGuard rules syntax in detail and provides plenty of examples. Tip: use the Import feature to transfer your rules to a different device. "},{"title":"HTTPS 过滤​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#https-过滤","content":"Nowadays almost all websites work via HTTPS, the web protocol where the last S letter stands for &quot;secure&quot;. It happened so that most advertisers use this protocol as well, this is why HTTPS filtering is really crucial for a modern ad blocker.  To be able to filter HTTPS traffic, AdGuard needs to install a certificate into your device's user storage. On older versions of Android OS this was done automatically during the onboarding process or later via AdGuard settings, and it only required a couple of taps. On Android 11 and later automatic certificate installation is no longer available. Now you need to install the certificate manually. Here is the installation instruction: Go to the app's main screen and tap Turn on next to the HTTPS filtering is off message (it will be highlighted in orange if the AdGuard certificate is not installed yet). A new screen will appear, tap Next, Next and Save it now when prompted to download the AdGuard certificate. After the certificate is downloaded, you will see a new screen. Tap Open security settings. This will bring up system settings. Scroll down to Advanced, open it and then tap Encryption &amp; credentials (these settings may be called variously on different devices — the main thing is to choose advanced security settings). Tap Install certificate and then CA certificate. A warning message will appear. Read through it and tap Install anyway to proceed. Select the recently downloaded AdGuard certificate. A CA certificate installed toast message should show up. The AdGuard certificate is successfully installed and HTTPS filtering is working now! If you update from Android 10 to Android 11, there's a chance that the already installed certificate will still be accepted. Otherwise, the HTTPS filtering is off warning will appear on the main screen, highlighted in orange. So you'll need to go through the same process of reinstalling the certificate manually. In case you have problems with the certificate installation, read this article or contact our support team at support@adguard.com. We want to emphasize that AdGuard Ad Blocker will function without HTTPS filtering. However, it won't be able to properly filter ads on sites that use the HTTPS protocol (most of sites do that). So if you want to use the full functionality of the app and get the best ad filtering quality and processing speed, we strongly recommend you to activate HTTPS-filtering. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems. You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn all the main features and options you can manage in the Stealth mode settings, read this article.  "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#browsing-security","content":"Phishing is a fraudulent online practice aimed at obtaining sensitive information like usernames, passwords, credit card details and such from internet users. This form of fraud, effected through spoof emailing and fake websites posing as trusted mediums like banks, social services etc., is causing more financial damage every year. As for malware (malicious software), it is as the name suggests — any type of software designed with the intent to damage the personal computer or other device it gets into. What once began as a prank now is a tool to steal confidential information from users and businesses.  Fortunately, AdGuard's Browsing Security module protects you from visiting phishing and malicious websites. It also warns you about malware being downloaded onto your device. In case you want to learn more about Browsing Security, read this article. But note that AdGuard for Android is not an antivirus. It will neither stop the actual download of a virus nor delete the already existing ones. For the complete protection of your device, we recommend using AdGuard in tandem with a dedicated AV tool.  At the same time, we'd like to emphasize that your personal data is not transferred anywhere, and AdGuard does not know which websites you are visiting. The security check is not performed against an open web address (URL) but through hash prefixes (hash is a certain data structure that renders unambiguous each address added to the base). However, you can send us information on the websites you visit to improve the database, if you opt to. Learn more about AdGuard's phishing and malware protection. Control your apps One of the main stated purposes of AdGuard for Android is to give users back the full control over their devices. With AdGuard, you can see comprehensive information about all web requests coming through your device. No app will be able to go online without you knowing. "},{"title":"Apps management​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#apps-management","content":"In the Apps Management module you can choose which apps should have Wi-Fi or mobile data access, which will be filtered by AdGuard and which not. You can also change the background Internet access rules for your apps when the screen is locked. These settings can be applied to all installed apps at once or on the individual basis.  You can find extra settings in the upper right corner of the Apps Management screen. They will help you fine-tune AdGuard for Android to your preference. For example, you can make the common settings applicable to each and every app, or select the apps which need a more detailed approach.  By tapping the icons, you will see a screen showing app-specific traffic to help you make more informed decisions. AdGuard is of help not only with ad filtering and privacy protection, it can aid your device function better, saving battery life and traffic as well. "},{"title":"Filtering log​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filtering-log","content":"In the Filtering Log, you can directly observe all web requests made by browsers and apps. Thanks to this feature, you have full control over all processes on your device.  You can block each request right there in one tap (or unblock it, if the request is already blocked). There's also detailed information about each request, although it is mostly aimed at the advanced users, particularly those who create their own filtering rules. We will be elaborating on it just a bit further below. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#user-rules","content":"As mentioned above, AdGuard for Android uses a set of filters to block ads. And then there is the User rules section that allows you to create and adjust your own filtering rules. It is located in the Settings tab of the AdGuard menu.  When you first install AdGuard, the User rules section is empty. To fill it with rules, you will need to understand the basics of the rules syntax. Don't worry if you are not familiar with it, here's a good place to start should you feel an urge to delve deeper into custom rules creation. By the way, whenever you use Filtering Log to block anything, a corresponding rule will appear in User rules, so use it if you ever want to undo the blocking. And generally speaking, Filtering Log and User rules go together particularly well: you can use the former to monitor requests in order to build a correct rule for the User rules. "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-filtering","content":"The DNS Filtering module allows to configure DNS settings on the user's device, including the chosen DNS server, DNS protocol, and DNS filters that block ads and trackers.  A bit of a theory refresher: DNS stands for &quot;Domain name system&quot;, and its purpose is to translate domain names into something browsers can understand, i.e. IP addresses. So, each time you go to a website, your browser sends a DNS request to a server, usually determined by your ISP. That server either redirects the request to another (upstream) server or replies with an IP address. If you use a special DNS server instead of a default one, it can send unsafe and potentially dangerous requests to the &quot;void&quot;. Thus, the responses with the IP addresses won't be received and &quot;bad requests&quot; will be nipped in the bud. DNS filtering has its own separate tab within the AdGuard for Android app home screen. Here you can choose which type of DNS you wish to use (it can be either regular DNS or high-security DNS — we will get to that later on) as well as enable DNS-level blocking. "},{"title":"DNS blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-blocking","content":"DNS blocking is a standalone feature that complements AdGuard protection suite.  There are two methods of DNS blocking: Some DNS servers can block DNS requests to potentially harmful domains.There is built-in DNS filtering that works right on your device and can block DNS requests, in addition to what's blocked by the selected DNS server. How exactly does DNS filtering work? It has a special DNS filter which contains a large list of ad and tracker domains, which it uses in conjunction with User rules to recognize 'bad' requests. Every request is checked against this filter, and if there's a hit, instead of forwarding it to the DNS server, it is being rerouted to a 'blackhole'. The simplicity of this approach is both a benefit and a disadvantage. The main advantage of this approach is that it's both battery life friendly and traffic-saving. Once a domain is blocked, it won't be requested again within an hour. The disadvantage would be the &quot;roughness&quot; of this method: specific URLs can't be blocked, only whole domains. Sometimes the only way to block ads by DNS is to add a rule that will break something at the same time. In this case, we just don't add this rule and the ad remains unblocked — because the alternative where the website does not work at all is even worse. "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-servers","content":"But AdGuard for Android &quot;DNS package&quot; does not end just there. One of the useful perks is an option to select absolutely any DNS server to use. At your service is a list consisting of dozens of servers to choose from, from our own AdGuard DNS servers to other popular providers like Google DNS, Cloudflare and others. On top of that, if your favorite server is not in the default list, you still can enter its address manually and use it anyway. See the comprehensive list of popular DNS providers — you can find many DNS servers there and any to AdGuard with a tap of a finger. There are several reasons to use a custom DNS server instead of one offered by your ISP by default. Some servers are faster, some provide ad blocking or parental control solutions, some enhance your privacy etc. But DNS servers not only vary by function. Besides, they can also differ by supported protocol types. There are three main types of protocols that DNS servers work over: HTTPS, TLS, and QUIC. Correspondingly, there are DNS-over-HTTPS (DoH), DNS-over-TLS (DoT) and DNS-over-QUIC (DoQ). While the first two are standard protocols, the third (DoQ) is experimental, yet the most outstanding one. We'll describe it later. Choosing a DNS server from a trusted provider is essential to protect DNS traffic. When user's DNS traffic is safe, their privacy and security are increased, and it's easier to prevent eavesdropping and manipulation of DNS data via man-in-the-middle attacks (MITMs). "},{"title":"DNS-over-QUIC​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-over-quic","content":"DNS-over-QUIC (DoQ) is a rather new encryption protocol and AdGuard DNS is the first public resolver that supports it. Unlike DoH and DoT, it uses QUIC as a transport protocol and finally brings DNS back to its roots — working over UDP. It brings all the good things that QUIC has to offer — out-of-the-box encryption, reduced connection times, better performance when data packets are lost. Also, QUIC is supposed to be a transport-level protocol and there are no risks of metadata leaks that could happen with DoH. To learn more about DNS-over-QUIC, check out this article dedicated entirely to it. To enable DoQ in AdGuard for Android, perform the following steps: Open the app, then open the side menuGo to Settings &gt; DNS Filtering and enable itSelect any of AdGuard DNS servers from the list of available serversUnder Server type choose DNS-over-QUIC "},{"title":"DNS user filter​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-user-filter","content":"It is very much like the regular User filter, but for DNS requests.  You'll find DNS user filter at Settings &gt; DNS Filtering &gt; DNS Requests blocking. DNS User filter supports two types of syntax: a limited portion of AdGuard syntax and &quot;hosts&quot; syntax. You can read more about it in our Knowledge Base. "},{"title":"Custom DNS filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#custom-dns-filters","content":"You can add any custom DNS filters or custom hosts lists. A useful feature considering how popular hosts lists are among Internet users.  This option is available on the Settings &gt; DNS Filtering &gt; DNS Requests blocking screen. "},{"title":"Proxy and TOR​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#proxy-and-tor","content":"A proxy server is basically another computer serving as a hub that processes your internet requests. You can set up AdGuard to route all your device's traffic through any proxy — and you'll be able to configure the whole thing right inside the app. And here is an instruction on how to set up a proxy. Some popular VPN providers offer an alternative way to use their service as a proxy. This can be used to run them alongside AdGuard in local VPN mode.  Contrary to a popular opinion, using a proxy server is not just about bypassing access restriction to geoblocked resources. It is about security! If you are using a proxy server, intruders won't know what websites you visit. You can also use AdGuard along with the anonymity network TOR (we have already integrated AdGuard with Tor for your convenience!). Here is a Wiki article where the whole concept of TOR network is nicely explained in case you wish to find out more. "},{"title":"Extensions support​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#extensions-support","content":"Userscripts (we also call them extensions) are basically mini-programs written in JavaScript that extend the functionality of one or more websites. Usually, you'd need some special userscript manager to add them, and it's traditionally more of a desktop thing. But with AdGuard everything is possible! Now you can add any userscripts by URL or load them from a file, and AdGuard will serve as a userscript manager and take care of the rest. Go to Settings &gt; Extensions to enable some of the pre-installed extensions or to add custom userscripts.  By the way, you can tap any added userscript to see more details, and to reinstall or delete it. "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#compatibility-with-adguard-vpn","content":"The best kind of compatibility is when you install two apps and they just start working together. Presuming you already have AdGuard Ad Blocker installed, just download AdGuard VPN from Play Store (you can get there right from the ad blocker app, there's an item in General settings).  Both apps will detect each other and do everything that's needed for smooth joint work. All that will be left for you is to enjoy both ad-free Internet and the benefits of a VPN. It also works the other way around just as well: install AdGuard Ad Blocker on top of an already-running AdGuard VPN and you're good. If you'd like to disable Compatibility Mode for any reason, it's very simple to do so from AdGuard Ad Blocker settings, just toggle the switch. Additionally, you can add AdGuard Ad Blocker and AdGuard VPN tiles to your device's notification bar and toggle them in one tap at your own will — thanks to Compatibility Mode the configuration will change immediately and silently. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#许可证","content":"While some ot the features in AdGuard for Android are free, others require purchasing a license. There are Personal (up to three devices) and Family (up to 9 devices), Yearly and Lifetime license keys. The premium version offers the following features to its users: Stealth ModeBrowsing securityExtensionsAd blocking in all apps (not only browsers)Custom filters Read this article to learn how to activate the license key. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#other-features","content":"There are too many features to describe them all in detail, so let us simply list them here: When you visit certain screens for the first time, there will appear tooltips that describe the purpose of that screen and its main featuresYou can export or import AdGuard settings (for a faster switch between the settings profiles or to transfer your profile between different devices)Select an update channel, i.e. the mode in which the application receives its updates (stable release channel, less stable beta channel and raw &quot;nightly&quot; channelBy tapping a little battery icon on the main screen of the app you will get to the &quot;Battery Usage&quot; screen. System battery stats are often wrong, so we decided to have our own, one that would reflect the real state of thingsYou can change the app's language in the General Settings tab "},{"title":"使用的流量与电池消耗的问题","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"电池使用情况​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#电池使用情况","content":"以减轻大家对该问题的误解，我们设计了新屏幕称为“电池使用率”。 您可以在主屏幕的右上角上点击「电池」图标以查看。  这里可以查看最近24小时内 AdGuard 电池的使用量。点击图标上的绿线可以按每一个小时查看关于流量使用的更详细信息。 除此之外，还有相关数据的信息以及简短技术说明。 "},{"title":"举个例子​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#举个例子","content":"在以下的截图上您可以看到夜间和早间电池使用量的统计：   在以上的截图中可以发现: AdGuard 不出乎意料地出现在图标的顶部。 这对于手机来说是很正常的（而与不支持 4G 的平板电脑不同，因为使用 WiFi 对电池的消耗要小得多）。 请注意截图二，发送移动和 WiFi 包的数量，都归于 AdGuard 使用的流量（“Mobile data sent” 和 “Wi-Fi packets sent”）。 截图三是真实消耗流量的软件，Yandex.Browser。 它几乎没有被分类到任何流量中，而实际上它消耗了总流量的 70％。 "},{"title":"AdGuard 真实电池消耗是多少？​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#adguard-真实电池消耗是多少","content":"首先，我们从理论角度看该问题并附上必要数据的链接。 安卓使用自带的 Power Profile 来计算流量使用量：https://source.android.com/devices/tech/power/values.html Power Profile 的主要部分是一组以mAh为单位的值，这些值定义设备每个组件的电池消耗：https://source.android.com/devices/tech/power/values.html 比如说，从链接的表格中我们可以看到： wifi.active= 31m 是指 WiFi 数据交换导致的额外消耗（使用的单位：毫安） radio.active= 100-300mA 是指经过移动交换数据导致的额外消耗 （使用的单位：毫安） cpu.active= 100-200mA 是指中央处理器（CPU） 运行导致的额外消耗 （使用的单位：毫安） AdGuard 几乎没有消耗任何流量，因此，我们来去除“移动/WiFi 包”以评价电池消耗，而把重心放在 “CPU”（中央处理器）上。 以下是计算消耗量的公式： &quot;CPU TIME (ms)&quot; X &quot;cpu.active&quot; / (60 60 1000) = &quot;POWER USE mAh&quot; 我们将实数写入公式中。 来将第二张截图上的 CPU total 转换为毫秒：506000 2GHz 的 cpu.active 系数大约等于 225mAh 最后结果 506000 225 / (60 60 * 1000) = 31,625mAh "},{"title":"结论​","type":1,"pageTitle":"使用的流量与电池消耗的问题","url":"adguard-for-android/solving-problems/battery/#结论","content":"事实上的消耗量比安卓统计上的消耗量小很多倍。 消耗量为 31-40mAh，而非 220mAh。 从另一方面来看的话，浏览器流量使用量为 ~200mAh，而不是 66mAh。 "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: 1) Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend 2) Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to &quot;On&quot;.  Scroll down to Battery saver, tap it, and set to &quot;No restrictions&quot;.  In Other Permissions, set all possible permissions to &quot;On&quot; Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to &quot;On&quot;Set all possible permissions in Other Permissions to &quot;On&quot;Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a special menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to &quot;On&quot;  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps – AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to &quot;Off&quot;Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot):  Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this:  Go to Battery Select battery saver app Find and select AdGuard Set up the following Background settings:  Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard:  "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after the app update or the OS update, the settings also often revert back to the defaults, so you have to turn them off again every time. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage  In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off).  On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care  Tap Battery  Tap the 3-dot menu → Settings  Tap Sleeping apps  Wake up AdGuard using the trashcan icon  "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background work, but if in your case the AdGuard application is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap on the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troubled on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch  Turn off Manage all automatically  Set AdGuard to Manage manually and enable all toggles.  Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"Note: On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to fix proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source: XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices):​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps – set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus:​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro:​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch&gt; then set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10:​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch and then set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Advanced Settings → then open Battery Manager → Set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and click on AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → then open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and click on AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing bacground processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Uninstall the com.evenwell.emm package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid to automatic DuraSpeed's disabling. 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS 6) Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0  NOTE: You need both Global and System type settings. The screenshot shows only Global as an example. "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and Force close. It will remain stopped for a while, but will restart itself eventually. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Uninstall the com.evenwell.powersaving.g3 package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) every time you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s &quot;startup manager&quot; and &quot;floating app list&quot; (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"Oneplus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard application:  On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the &quot;normal&quot; mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​&gt; Apps &amp; Notifications ​&gt; Advanced ​&gt; Special app access ​&gt; Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusessential","content":"Android stock OS normally does not conflict with applications working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"Other VPN apps are incompatible with AdGuard running in the Local VPN filtering mode since you cannot have two active VPNs at the same time. To solve this problem we suggest you: use AdGuard VPN — it has Integrated mode that allows two apps to operate seamlesslyuse AdGuard in Local HTTP Proxy mode. Please note that 'manual' HTTP Proxy mode is not supported on devices since Android 10if you use a third-party VPN app, figure out whether it supports SOCKS4/SOCKS5 mode. If it does, you can configure your VPN app to work as outbound proxy and set up local outbound proxy with params from the third-party app. For instance, AdGuard can be automatically configured with 'Orbot: Proxy with Tor' "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to install a certificate into the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. Solution Requires root access. To solve this problem, move the certificate to the system certificate store. "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. Solution There is no solution at this moment. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in Manual proxy mode because this browser ignores system proxy settings. Solution Use Local VPN filtering mode. "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. Solution There is no solution at this moment. "},{"title":"如何收集 HAR 文件","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"什么是 HAR 文件？​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#什么是-har-文件","content":"HAR（HTTP ARchive）格式是 JSON 格式的存档文件，用于记录 Web 浏览器与站点的交互。 HAR 格式的规范定义了 HTTP 交易的存档数据，浏览器使用该数据来导出其加载的网页的详细信息。 您可以在 softwareishard.com 网站上找到有关 HAR 文件格式及其使用规范的更详细说明。 "},{"title":"如何收集 HAR 文件?​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#如何收集-har-文件","content":"有时我们需要对文件进行分析以拦截由于某种原因难以再现的特定广告。 要获取 HAR 文件，请执行以下步骤： 打开 AdGuard ，前往「设置」在菜单中选择「高级」选择「低级设置」激活 “pref.har.capture”（您必须重新启动保护）重试导致问题的操作：打开应用程序，执行必要的操作以使广告出现。现在再次关闭 “pref.har.capture”。返回，然后点击「导出日志和系统信息」&gt;「保存」 请将导出的日志记录发送给 AdGuard 客服支持。 注意：如果你在信息中指定 HelpDesk 号或 GitHub 问题号，我们的支持团队会更快地处理您的问题。 "},{"title":"如何分析 HAR 文件?​","type":1,"pageTitle":"如何收集 HAR 文件","url":"adguard-for-android/solving-problems/har/#如何分析-har-文件","content":"以下是我们可以推荐用于分析 HAR 文件的一些资源： HTTP Archive Viewer master 是一个 HAR 分析工具，可视化由 HTTP 跟踪工具创建的 HTTP Archive（HAR）日志文件。Fiddler 是一个 Web 调试代理，可让您捕获、检查、监控计算机和 Internet 之间的所有 HTTP(S) 流量、模拟请求和诊断网络问题。 "},{"title":"手动将安全证书安装到火狐浏览器中","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"Method 1​","type":1,"pageTitle":"手动将安全证书安装到火狐浏览器中","url":"adguard-for-android/solving-problems/firefox-certificates/#method-1","content":"改方法在安卓版火狐浏览器 90.0 及以上的版本可用。 为了让 AdGuard 证书在火狐浏览器中受信任，请执行以下操作： 打开浏览器前往「设置」&gt;「关于 Firefox Nightly」  点击 Firefox 徽标五次前往「设置」&gt;「Secret Settings」  开启使用第三方 CA 证书（Use third party CA certificates） "},{"title":"Method 2​","type":1,"pageTitle":"手动将安全证书安装到火狐浏览器中","url":"adguard-for-android/solving-problems/firefox-certificates/#method-2","content":"此方法仅在有 Root 权限的设备上有效。 安装以及配置 ADB； 在 Windows 平台上，三星用户最可能需要安装此实用程序（Utility）。 启用「开发者模式」以及开启「USB 调试」： 在手机上打开「设置」；前往系统部分（设置中最后一项选项）。 这里前往关于手机；点击版本号7次。 之后您将会收到通知说明现在您是开发人员（如需要的话，输入解锁密码）；前往系统设置 &gt; 开发人员选项 &gt; 向下移动，启用 USB 调试 &gt; 在是否允许 USB 调试提示中仔细阅读警告后，确定允许调试。 安装火狐浏览器（发布版本）；打开 AdGuard 设置 &gt; 「网络」 &gt; 「HTTPS 过滤」 &gt;「安装证书至 Firefox 浏览器」&gt; 「为旧版本安装」；使用 adb shell su 和 cd data/data/... 打开 data/data/org.mozilla.firefox/files/mozilla 文件夹，找 xxxxxxx.default 文件并记住其名称；在指定文件夹里我们需要两个文件： cert9.dbkey4.db 我们需要将这些文件移到发生安全证书问题的浏览器的一个文件夹中： data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default。 完整命令如下所示： adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default 如您收到权限不足的系统提示，请您先将指定文件移动至无权限目录。 然后再将它们移动至火狐浏览器中特定的文件夹里。 完整命令的样式大体如下： adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default 如果 adb shell su 不起作用，请先尝试使用 adb shell，然后再使用 su。 "},{"title":"Moving CA certificate to System store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's Certificate to System store (on a rooted device)​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-system-store-on-a-rooted-device","content":"Enable HTTPS filtering in AdGuard for Android and save AdGuard's certificate to the User store (use this instruction if needed)Go to AdGuard app → Menu (≡) → Settings → Network → HTTPS filtering → Security certificate → tap “Copy to the system store” That is enough for older versions of Magisk. However, if you have a newer version, you will get this message: Unable to copy the certificate to the system store. Try using “AdGuard Certificate” module. In that case, proceed to steps below: Go to Magisk -&gt; Settings  Enable Zygisk   Download the .zip file (of “AdGuard Certificate” module) from the latest release on GitHub Go to Magisk → Modules → Install from storage and select the downloaded .zip file    Reboot  If a new version of &quot;AdGuard certificate&quot; module comes out, repeat steps 3-7 to update the module. The module does its work during the system boot. If your AdGuard certificate changes, you'll have to reboot the device for the new certificate to be copied to the system store. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"Please note that in order for Bromite browser to work properly, in addition to the steps mentioned above, you need to set &quot;Allow user certificates&quot; in chrome://flags to &quot;Enabled&quot; state. "},{"title":"Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#chrome-and-chromium-based-browsers","content":"Long story short, you will have no problems with HTTPS filtering in Chrome and Chromium-based browsers on rooted devices, if you use &quot;AdGuard Certificate&quot; module. Here is a bit more detailed explanation: Chrome (and subsequently many other Chromium-based browsers) has recently started requiring CT logs for CA certs found in the System store. &quot;AdGuard Certificate&quot; module copies AdGuard's CA certificate from the User store to the System store. It also contains a Zygisk module that reverts any modifications done by Magisk for certain browsers. This way the browsers only find AdGuard’s certificate in the User store and don’t complain about the missing CT log, while other apps continue to use the same certificate from the System store. "},{"title":"如何收集和发送日志记录","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"如何收集和发送日志记录","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"为了收集调试日志并将其转发给我们，您要完成以下操作步骤： 打开 AdGuard 后，前往「设置」。 选择「高级」。 将「日志纪录级别」设置为「纪录全部」。 操作时，建议将所有后台应用关闭。 重试导致问题的操作步骤后，将日志记录级别改回「默认」。 请您记录将设置改回为默认的准确时间。 在菜单中选择「支持」&gt;「发送反馈」，通过软件将信息发送给我们。 请您不要忘记勾选「发送详细的系统信息」，并写入第四步骤描述的准确时间。 您亦可以将日志（包含系统信息和有关 AdGuard 设置信息的 state.txt 文件）直接导出到本地文件中。 该操作十分方便，例如，如果您与开发人员正在 GitHub 、论坛或其他平台上谈论时，就可以直接转发日志内容。 您要前往「设置」 — 「高级」并点击「导出日志和系统信息」，以将日志和系统信息导出至文件。 选择目标文件夹，点击「保存」。 "},{"title":"Collecting web requests log​","type":1,"pageTitle":"如何收集和发送日志记录","url":"adguard-for-android/solving-problems/log/#collecting-web-requests-log","content":"为了收集网络请求记录并将其转发给我们，您要完成以下操作步骤： 打开 AdGuard ，前往「设置」。 选择「高级」。 将「日志记录级别」设置为「记录网络请求」。 操作时，建议将所有后台应用关闭。 重试导致问题的操作步骤后，将日志记录级别改回「默认」。 请您记录将设置改回为默认的准确时间。 在菜单中选择「支持」&gt;「发送反馈」，通过软件将信息发送给我们。 请您不要忘记勾选「发送详细的系统信息」，并写入第四步骤描述的准确时间。 您亦可以将日志（包含系统信息和有关 AdGuard 设置信息的 state.txt 文件）直接导出到本地文件中。 该操作十分方便，例如，如果您与开发人员正在 GitHub 、论坛或其他平台上谈论时，就可以直接转发日志内容。 您要前往「设置」 — 「高级」并点击「导出日志和系统信息」，以将日志和系统信息导出至文件。 选择目标文件夹，点击「保存」。 "},{"title":"How to get Logcat log","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"General Instruction​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#general-instruction","content":"For troubleshooting problems with crashes a regular log is almost always not enough. In such cases to identify the origin of the problem we need the system log. Below is the instruction how to collect and get it. "},{"title":"Capture a bug report from a device​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-from-a-device","content":"To get a bug report directly from your device, do the following: Be sure you have Developer Options enabled. In Developer options, tap Take bug report.  Select the type of bug report you want and tap Report. &gt;After a moment you get a notification that the bug report is ready (see figure 2).  To share the bug report, tap the notification.  Send this log to our support team. Note: Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Additional Instruction (for old Android versions)​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#additional-instruction-for-old-android-versions","content":"On old Android devices there is no such option to take a bug report automatically. It has to be done manually by following this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings &gt; About &gt; tap on Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4MB per log buffer. 4MB should be enough for storing the logs we need until you're able to do the second part (getting log from the device); Important: you need to reproduce the problem after you've done with the first part! Part #2: get the log Connect your device to PC with USB cable. Download and install Minimal ADB: http://forum.xda-developers.com/showthread.php?t=2317790 Direct download link: https://www.androidfilehost.com/?fid=24052804347803384 Run this command in the console (it will be opened after install): adb logcat -v threadtime -d &gt; C:\\logcat.txt Send this log to us by contacting support or by any other way. Alternative way for ROOT users: Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. Note: Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Low Level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, open the main menu, tap Settings, choose Advanced and find Low-Level Settings at the bottom of the screen. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"pref.boot.startup.delay Here you can set AdGuard’s startup delay after device boot-up (in seconds). This setting is only relevant if AdGuard autostart is enabled (Settings → General → AdGuard autostart). pref.dns.blocking.type Here you can select the way AdGuard will respond to blocked DNS queries: 0 — means block requests with Refused response code for Network filtering rules and with Unspecified IP for Host rules. 1 — means block requests with NXDomain for all kinds of filtering rules. 2 — means block requests with Unspecified IP for all kinds of filtering rules. 3 — means block requests with Unspecified IP for all kinds of filtering rules. 4 — means block requests with Refused response code for all kinds of filtering rules. 1 is used by default if the entered value is not valid. pref.dns.bootstrap Bootstrap DNS for DoH, DoT, and DoQ servers. The System DNS server is used by default. pref.dns.detect.search.domains If enabled AdGuard detects search domains and automatically forwards them to the fallback upstreams if they exist. pref.dns.fallback Here you can specify a fallback DNS resolver that will be used when the configured server is not available. If not specified, the system default DNS is used as a fallback. A string &quot;none&quot; means no fallback at all. pref.dns.fallback.domains Here you can list domains that will be directly forwarded to the fallback upstreams (if they exist). pref.dns.timeout Here you can specify a timeout in milliseconds to be used for each DNS request. Please note that if you are using multiple upstreams, the fallback DNS resolver will only be used after all the timeouts of each upstream. pref.enforce.https.filtering Here are already listed package names of apps for which AdGuard enforces HTTPS filtering. You can add this list with any app even if it targets Android 7+. But before check if the application trusts the AdGuard’s HTTPS certificate, which is located in the User storage, or the developers have not provided such an option. pref.enforce.paused.notification Enforce notification about paused protection even when the notification icon is set to Disabled (for Android below Oreo). pref.excluded.packages Here you can list the packages and UIDs you want to exclude from filtering. pref.filtered.ports Here you can list the ports connections to which will be filtered. pref.har.capture Here you can enable HAR file capture. Use it only for debugging purposes! If the setting is enabled, AdGuard will create a directory named &quot;har&quot; inside the app cache directory. It contains information about all filtered HTTP requests in HAR 1.2 format and can be analyzed with the Fiddler program. pref.https.ignored.errors For the domains and package names listed here, notifications that they do not trust AdGuard's HTTPS certificate will be disabled. pref.https.opportunistic If enabled, AdGuard will bypass the traffic of any app that does not trust our certificate. It is enabled by default. pref.ipv4.routs.excluded Here you can find the list of IPv4 ranges excluded from filtering. For instance, we don’t filter connections to the private IP ranges. You can add this list if required. pref.ipv6.routs.excluded Here you can list the IPv6 ranges which you want to exclude from filtering. pref.notify.on.unknown.ca If enabled, AdGuard shows you a notification if any app doesn’t trust our HTTPS certificate. pref.proxy.block.ipv6 If enabled, AdGuard blocks all Internet connections through IPv6 when working in &quot;Proxy with automatic setup&quot; mode. pref.proxy.disable.reconfigure Here you can disable AdGuard automatic root proxy reconfiguration when network connectivity changes. pref.quic.bypass.packages Here you can list packages for which AdGuard will bypass QUIC traffic. pref.removed.html.log If enabled, AdGuard shows information about blocked HTML elements in the filtering log. pref.root.clear.youtube If enabled, AdGuard clears YouTube app data on booting to block YouTube ads. Root access is required. pref.root.set.oom_adj If enabled, AdGuard sets the minimum oom_score_adj for its own process to stay alive all the time. Requires root access. pref.samsungpay.autopause.enable If enabled, AdGuard pauses protection when you open the Samsung Pay app. Requires usage access. pref.vpn.android10.mitigate If enabled, AdGuard applies a workaround solution that mitigates the soft reboots issue caused by an Android 10 bug. pref.vpn.capture If enabled, AdGuard will create the special file name &quot;tun.pcap&quot;. It contains all network packets transferred through the VPN. This file is located in the app cache directory and can be analyzed with the Wireshark program. pref.vpn.disable.pause This feature disables automatic VPN pause in case of network absence, tethering, or power-saving mode. pref.vpn.disable.reconfigure This feature disables VPN automatic reconfiguration in case of network absence, tethering, or power-saving mode. pref.vpn.ipv4.address TUN interface IPv4 address. pref.vpn.ipv4.bypass If enabled, VPN will be configured to bypass all the IPv4 traffic. In this case, IPv4 will work, but it will not be filtered. pref.vpn.ipv4.force.complex If enabled, VPN will bypass the LAN when possible. However, for complex networks, the LAN is not excluded and connections will be filtered, including local ones. pref.vpn.ipv4.force.default This feature disables the routes we use to exclude LAN from filtering. pref.vpn.ipv6.address TUN interface IPv6 address. pref.vpn.ipv6.bypass If enabled, VPN will be configured to bypass all the IPv6 traffic. In this case, IPv6 will work, but it will not be filtered. pref.vpn.ipv6.disable This feature forcibly disables filtering for IPv6 networks. In this case, IPv6 will not work at all. pref.vpn.ipv6.force This feature forcibly enables filtering for IPv6 networks. The app doesn’t filter IPv6 on Lollipop and some cell carriers by default. pref.vpn.tun.mtu Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended interval for the experiments is from 1500 to 9000. Reset You always can reset Low-level settings to default. "},{"title":"Сertificate installation issues on devices with Android 11+","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"","keywords":""},{"title":"Certificate installation in a Secure folder​","type":1,"pageTitle":"Сertificate installation issues on devices with Android 11+","url":"adguard-for-android/solving-problems/manual-certificate/#certificate-installation-in-a-secure-folder","content":"If you use the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is that the Secure folder has its own storage where the certificates are stored. However, in case you do everything according to the instructions described here, the certificate is installed into the main storage and plays no role for your ad blocker in the Secure folder. So, in order to resolve this issue and install the certificate for your AdGuard for Android into the Secure folder's storage, follow this instruction: After installing the application and connecting to VPN tap Turn on next to the HTTPS filtering is off message.Tap Next &gt; Next &gt; Save it now &gt; Allow.Save the certificate (at this stage, you can rename it to make it easier to find).After the How to install a certificate? screen appears, DO NOT tap Open Settings.Minimize the application and go to the secure folder.Tap the three-dot menu and go to additional security settings.Tap Install from memory &gt; CA certificate &gt; Install anyway &gt; Enter a graphic key/password/fingerprint &gt; Find the saved certificate and select it.Return to the AdGuard application and close the screen &quot;How to install a certificate?&quot; by tapping the cross button.Done! The certificate has been installed. "},{"title":"如何设置外出代理","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-profiles-issue/","content":"Problems caused by multiple user profiles On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. It happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message &quot;You can't install the app on your device&quot;. To solve this problem, you need to uninstall the application for all users: go to Settings &gt; All apps &gt; AdGuard. Tap three dots at the upper right corner and select Uninstall for all users.","keywords":""},{"title":"如何同时使用 AdGuard 和 Tor​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-tor","content":"请您打开 AdGuard 并前往「设置」&gt; 「网路」&gt;「代理設置」。 打开谷歌商店，或者点击「配置 Tor® 整合」以下载 &quot;Orbot: Proxy with Tor&quot;。 打开 Orbot 并在应用程序的首页点击「开启」按钮。 返回 AdGuard 的代理设置页面。 点击「配置 Tor® 整合」按钮。 所有必填的字符串将会被预填写： 字符串\t数值代理分类\tSOCKS4 或 SOCKS5 代理主机\t127.0.0.1 代理端口\t9050 或您可以点击「添加代理」并手动输入数值。然后设置 Orbot 代理为默认代理。 开启 AdGuard 保护。 现在 AdGuard 会将所有流量通过 Orbot 代理发送。 如您禁用 Orbot 代理，那么您在 AdGuard 设置中禁用外出代理设置前，互联网连接将不可用。 "},{"title":"如何同时使用 AdGuard 和 PIA（Private Internet Access）​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-piaprivate-internet-access","content":"假设您已是 PIA VPN 的客户，且已将它安装在您的设备上。 请您打开 AdGuard 并前往「设置」&gt; 「网路」&gt;「代理設置」。 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\tproxy-nl.privateinternetaccess.com 代理端口\t1080 您还需要输入「用户名/密码」字符串。 以完成操作，请您在 PIA 官网上登录客户管理面板。 在生成 PPTP/L2TP/SOCKS 密码部分下面点击「生成密码」按钮。 您将会看到一串开始于 &quot;x&quot; 的用户名和随机密码。 将它们输入到 AdGuard「用户名」和「密码」相应的字段。 勾选此代理以设置它为默认代理。然后点击「保存」。 开启 AdGuard 保护。 "},{"title":"如何同时使用 AdGuard 和 TorGuard​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-torguard","content":"假设您已是 TorGuard 的客户，且已将它安装在您的设备上。 请您打开 AdGuard 并前往「设置」&gt; 「网路」&gt;「代理設置」。 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\tproxy.torguard.org 或 proxy.torguard.io 代理端口\t1080 或 1085 或 1090 请在「用户名」和「密码」的相应空白处输入您的代理名称，以及您在 TorGuard 注册选择的代理密码。 勾选此代理以设置它为默认代理。然后点击「保存」。 开启 AdGuard 保护。 "},{"title":"如何同时使用 AdGuard 和 NordVPN​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-nordvpn","content":"请您打开 AdGuard 并前往「设置」&gt; 「网路」&gt;「代理設置」。 点击「添加代理」按钮并输入以下的数据： 字符串\t数值代理分类\tSOCKS5 代理主机\t除了“混淆服务器”以外，任何一个列表内的服务器 代理端口\t1080 在「用户名」和「密码」处输入您的 NordVPN 的用户名和密码。 勾选此代理以设置它为默认代理。然后点击「保存」。 开启 AdGuard 保护。 "},{"title":"如何同时使用 Adguard 和 Shadowsocks​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#如何同时使用-adguard-和-shadowsocks","content":"假设您已是 Shadowsocks 的客户，且已将它安装在您的设备上。 请注意：在您开始设置前，请将 Shadowsocks 应用程序从过滤的应用程序列表移除（「AdGuard」--&gt; 「应用管理」--&gt; 「Shadowsocks」--&gt; 「禁用保护」）以避免运行错误。 打开 AdGuard 并前往「设置」&gt; 「网路」&gt;「代理色设置」。 点击「添加代理」按钮并输入以下数据： 字符串\t数值代理分类\tSOCKS5 代理主机\t127.0.0.1 代理端口\t1080 点击「选择并保存」 "},{"title":"限制​","type":1,"pageTitle":"如何设置外出代理","url":"adguard-for-android/solving-problems/outbound-proxy/#限制","content":"请注意，有个因素可能会阻止一些特定的流量通过外出代理路由。 AdGuard 只重新发送经过它的流量。 基本上，也就是在「应用管理」里开启广告拦截的应用程序的流量。 "},{"title":"受限模式导致的一些问题","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/restricted-profile/","content":"","keywords":""},{"title":"解决方法​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#解决方法","content":"解决该问题有三种方法： "},{"title":"方案 1：允许 AdGuard 使用 ADB​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#方案-1允许-adguard-使用-adb","content":"请注意！该方法仅由 AdGuard v3.5 nightly 6 起可用。 如您仍在使用旧版本，您可以在此处下载 nightly 版本。 激活开发人员模式以及启用 USB 调试： 在手机上前往设置；前往系统部分（设置中最后一项选项）。 这里前往关于手机；点击版本号7次。 之后您将会收到通知说明现在您是开发人员（如需要的话，输入解锁密码）；前往系统设置 &gt; 开发人员选项 &gt; 向下移动，启用 USB 调试 &gt; 在是否允许 USB 调试提示中仔细阅读警告后，确定允许调试。 如您遇到任何困难或其他问题，在此处可查看完整说明。 安装以及配置 adb; 在 Windows 平台中，三星用户需要安装此工具。 使用 USB 电缆将您的设备连接至您已安装 ADB 的电脑或笔记本等设备上;在您的 PC 上打开命令行： 如您使用的是 Windows，打开 Cmd.exe；如您使用的是 macOS，打开 Terminal ； 输入 adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS 的命令并点击回车键。 "},{"title":"方案 2：移除受限用户帐户​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#方案-2移除受限用户帐户","content":"在此可以查看如何在安卓设备上管理用户帐户的相关信息。 请注意！ 在一些情况下，受限用户帐户是自动创建，因而无法被删除。 例如，您在安卓或 LG 设备上使用应用分身或双开应用功能时，将会自动创建受限用户帐户。 您可以阅读以下内容以查看，在上面描述的情况下该如何解决问题。 "},{"title":"方案 3：使用 AdGuard 的本地 HTTP 代理模式（需要 root 权限）​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#方案-3使用-adguard-的本地-http-代理模式需要-root-权限","content":"开启该模式需要打开 AdGuard 设置 &gt; 网络 &gt; 过滤方式 &gt; 本地 HTTP 代理 "},{"title":"LG 和三星设备​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#lg-和三星设备","content":"LG 或三星手机的用户也可能会遇到相同的问题。 这可能是由双开应用/双 Messenger 账户功能（其本质是隐式创建了受限账户）引起的。 为了解决该问题，您需要禁用该功能。 "},{"title":"三星​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#三星","content":"前往设置；点击高级功能；向下移动，点击双 Messenger 账户；禁用所有应用使用应用分身；锁定您的设备5分钟；解锁屏幕并重新试图创建 VPN 账号。 "},{"title":"LG​","type":1,"pageTitle":"受限模式导致的一些问题","url":"adguard-for-android/solving-problems/restricted-profile/#lg","content":"前往设置；选择常规标签钮；向下移动，点击双开应用；移除应用分身列表中所有的应用；重启您的设备。 "},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea This problem occurs almost exclusively on devices registered in South Korea. Samsung Pay occasionally doesn't work on such devices with running VPN services. However, there is a way to solve this problem. By default, AdGuard uses Local VPN to filter traffic. This was the reason why the South Korean users had to disable AdGuard when making payments with Samsung Pay. Now it is possible to avoid such difficulties. The &quot;pref.samsungpay.autopause.enable&quot; feature was developed specifically for South Korean users. So, what process does it initiate? If the &quot;pref.samsungpay.autopause.enable&quot; option is enabled, the AdGuard app is suspended when a user opens the Samsung Pay app. But once the app is closed, AdGuard resumes operation. Let's see how it works. Note: this feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions.","keywords":""},{"title":"如何在 YouTube 上拦截广告","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"通过 AdGuard 应用程序观看 YouTube 影片​","type":1,"pageTitle":"如何在 YouTube 上拦截广告","url":"adguard-for-android/solving-problems/youtube-ads/#通过-adguard-应用程序观看-youtube-影片","content":" 打开 YouTube 应用并播放您想看的影片。点击「分享」按钮并在应用程序的列表内选择「AdGuard 安卓版」。 完成！ 在新视窗里您就可以观看无广告的视频。 如您已安装并开启了 AdGuard，您也可以在浏览器里享受无广告的 YouTube 影片。 "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called &quot;intent&quot;) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Wouldn't it be a bit dangerous, you might ask — to let some random apps manage what AdGuard does? It would, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"So, ready to get your hands dirty? Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap on it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; Note: the full list of supported provider names can be found inside AdGuard DNS settings under the &quot;Custom DNS settings&quot; server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTP;SOCKS4;SOCKS5;HTTPS_CONNECT. [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example: setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true  Don't forget to include the password as an extra and mention package name and class! You need to do so for every intent! Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receivers.AutomationReceiver "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"系统要求​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#系统要求","content":""},{"title":"iPhone​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#iphone","content":"要求 iOS 11.2 或更高版本。 "},{"title":"iPad​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipad","content":"要求 iPadOS 11.2 或更高版本。 "},{"title":"iPod touch​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipod-touch","content":"要求 iOS 11.2 或更高版本。 "},{"title":"AdGuard iOS版的安装过程​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-ios版的安装过程","content":"AdGuard iOS版是 App Store 中的一款应用程序。 如您想要在您的设备上安装 AdGuard iOS版，请您打开 App Store 并在下面点击搜索图标。  先在搜索栏输入 adguard，然后在搜索结果找到并按 AdGuard 选项。  在 App Store 打开的页面上 AdGuard - adblock&amp;privacy 选项下点击获取按钮，然后点击安装。 为了完成安装过程，您可能会看到要求输入您的苹果 ID 和密码的弹窗。 输入您的 ID 和密码后，请等待安装成功完成。  "},{"title":"AdGuard Pro iOS版的安装过程​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-pro-ios版的安装过程","content":"AdGuard Pro 是 AdGuard iOS版的付费版本。AdGuard Pro 为用户提供更多功能（与启用高级版的 AdGuard 应用程序相同）。 如您想要在您的设备上安装应用程序，请您打开 App Store 并在下面点击搜索图标。  先在搜索栏输入 adguard，然后在搜索结果找到并按 AdGuard pro - adblock 选项。  在打开的 App Store 页面上 AdGuard Pro - adblock 选项下点击显示许可价格的按钮。点击价格后，请您点击购买。 为了完成安装过程，您可能会看到要求输入您的苹果 ID 和密码的弹窗。 输入您的 ID 和密码后，请等待安装成功完成。  您要输入 AdGuard 个人账号的用户身份信息以激活许可。 为执行此操作，用户至少要有一个许可。 "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-ios/overview/","content":"","keywords":""},{"title":"Features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#features","content":"AdGuard and AdGuard Pro for iOS offer lots of features for blocking ads, trackers and creating user rules, both in Safari and on network level. "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#content-blockers","content":"Content blockers serve as 'containers' for filtering rules that do the actual job of blocking ads and tracking. AdGuard for iOS contains six content blockers: General, Privacy, Social, Security, Custom, and Other. Previously Apple only allowed each content blocker to contain a maximum of 50K filtering rules, but with iOS 15 release the upper limit has moved to 150K rules. All content blockers, their statuses, which thematic filters they currently include, and a total number of used filtering rules can be found on the respective screen in Advanced settings (tap the gear icon at the bottom right &gt; General &gt; Advanced settings &gt; Content blockers).  Tip: keep all content blockers enabled for the best filtering quality. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#filters","content":"Content blockers' work is based on filters, also sometimes referred to as filter lists. Each filter is a list of filtering rules. If you have an enabled ad blocker when browsing, it constantly checks the visited pages and elements on them against these filtering rules, and blocks anything that matches. Rules are developed to block ads, trackers, and more. All filters are grouped into thematic categories. To see the full list of these categories (not to be confused with content blockers), open the Protection section by tapping the shield icon, then go to Safari protection &gt; Filters.  There are eight of them, each category unites several filters that serve and share a common purpose, i.e. blocking ads, social media widgets, cookie notices, protecting the user from online scams. To decide which filters suit your needs, read their descriptions and navigate by the labels (ads, privacy, recommended, etc.). More enabled filters does not guarantee that there will be less ads. A large number of various filters enabled simultaneously reduces the quality of ad blocking. Custom filters category is empty by default for users to add there their filters by URL. You can find filters on the Internet or even try to create one by yourself. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#user-rules","content":"Here you can add new rules — either by entering them manually, or by using the AdGuard manual blocking tool in Safari. Use this tool to customize Safari filtering without adding an entire filter list. Learn how to create your own ad filters. But please note that many of them won't work in Safari on iOS.  "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#allowlist","content":"The third section of the Safari protection screen. If you want to disable ad blocking on a certain website, Allowlist will be of help. It allows you to add domains and subdomains to exlcusions. AdGuard for iOS has an Import/Export feature, so the allowlist from one device can be easily transferred to another. "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-protection","content":"DNS protection module *mobile_border enhances your privacy by encrypting your DNS traffic. Unlike with Safari content blocking, DNS protection works system-wide, i.e. beyond Safari, in apps and other browsers. You have to enable this module before you're able to use it. You can do this on the home screen by tapping the shield icon at the top of the screen, or by going to the Protection &gt; DNS protection tab. To be able to manage DNS settings, AdGuard apps require establishing a local VPN. It will not route your traffic through any remote servers. Nevertheless, the system will ask you to confirm permission access. "},{"title":"DNS implementation​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-implementation","content":" This section has two options: AdGuard and Native implementation. Basically, these are two methods of setting up DNS. In Native implementation, the DNS is handled by the system and not the app. This means that AdGuard doesn't have to create a local VPN. Sadly, this will not help you circumvent system restrictions and use AdGuard alongside other VPN-based applications — if any VPN is enabled, native DNS is ignored. Consequently, you won't be able to filter traffic locally or to use our brand new DNS-over-QUIC protocol (DoQ). "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-servers","content":"The first section you'll see on the DNS Protection screen is DNS server. It shows the currently selected DNS server and encryption type. To change either, tap the button to enter the DNS server screen.  Servers differ by their speed, employed protocol, trustworthiness, logging policy, etc. By default, AdGuard will suggest several DNS servers from among the most popular ones (including AdGuard DNS). Tap any to change the encryption type (if such option is provided by the server's owner) or to view the server's homepage. We added labels such as No logging policy, Ad blocking, Security to help you make a choice. In addition, at the bottom of the screen there is an option to add a custom DNS server. It supports regular, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC servers. "},{"title":"Network settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#network-settings","content":" Users can also handle their DNS security on the Network settings screen. Filter mobile data and Filter Wi-Fi enable or disable DNS protection for respective network types. Further down, at Wi-Fi exceptions, you can exclude particular Wi-Fi networks from DNS protection (for example, you might want to exclude your home network if you use AdGuard Home). "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-filtering","content":"To get access to this setting, Advanced mode has to be enabled from the General settings screen. After that, a new section will appear on the DNS protection screen. Tap it to customize your DNS traffic by applying own rules.  DNS filters​ Similar to filters that work in Safari, DNS filters are sets of rules written according to special syntax. AdGuard will monitor your DNS traffic and block requests that match one or more rules. You can use filters such as AdGuard DNS filter or add hosts files as filters. Multiple filters can be added simultaneously. To know how to do it, get acquainted with an exhaustive manual. Allowlist and Blocklist​ On top of DNS filters, you can have targeted impact on DNS filtering by adding single domains to Blocklist or to Allowlist. Blocklist even supports the same DNS syntax, and both of them can be imported and exported, just like Allowlist in Safari content blocking. "},{"title":"Advanced protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#advanced-protection","content":"In iOS 15 Apple has added the support for Safari Web Extensions, and we in turn added a new Advanced protection module to AdGuard for iOS. It allows AdGuard to apply advanced filtering rules, such as CSS rules, CSS selectors, and scriptlets, and therefore to deal even with the complex ads, such as YouTube ads.  To enable Advanced protection, open the Protection tab by tapping the second left icon at the bottom of the screen, select the Advanced protection module, activate the feature by toggling the switch slider, and follow the instructions below. The Advanced protection only works on iOS 15 and later versions. If you are using earlier versions of iOS, you will see the YouTube ad blocking module in the app instead of the Advanced protection.  "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#compatibility","content":"In most cases, the ad blocker and the VPN application cannot work together, simply because there are certain system limitations. Nevertheless we've managed to find a solution to befriend AdGuard VPN and AdGuard Ad Blocker. For your convenience we've added the AdGuard VPN block to the Protection section, so you can easily switch between two apps. "},{"title":"Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#assistant","content":" Assistant is a tool that helps you manage filtering in Safari right from the browser without switching back to the app. To see it, do the following: open Safari and tap the arrow-in-a-box symbol. Then scroll down to AdGuard/AdGuard Pro (depending on the app you use) and tap it to fetch a window with several options: Enable on this page. Turn the switch off to add the current domain to the Allowlist.Block an element on this page. Tap it to enter the 'Element blocking' mode: choose any element on the page, adjust the size by tapping 'plus' or 'minus', preview if necessary and then tap the checkmark icon to confirm. The selected element will be hidden from the page and a corresponding rule will be added to User rules. Remove or disable it there to revert the change.Report an issue on this page. Opens a web reporting tool that will help you send a report to our support team in just a few taps. Use it if you noticed a missed ad or an incorrect blocking on the page. On iOS 15 devices, the Assistant features are available through AdGuard Safari Web Extension, which enhances the capabilities of AdGuard for iOS and allows you to take advantage of iOS 15. With this web extension, AdGuard can apply advanced filter rules and, as a result, block more ads. "},{"title":"Activity​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#activity","content":"This is the 'information hub' of AdGuard's DNS protection suite. You can quickswitch to it by tapping the third icon in the row at the screen bottom. N.b. this screen is only seen when DNS protection is enabled.  Here AdGuard displays stats about device's DNS requests, such as total number, number of encrypted requests and average processing time. AdGuard can display the stats for a day, a week, a month, or in total. Below is the Recent activity feed. AdGuard stores the last 1500 DNS requests that have originated on your device and shows their attributes such as protocol type and target domain. AdGuard does not send this information anywhere. It is 100% local and does not leave your device. Tap any request to view more details. There will also be buttons to add the request to Blocklist/Allowlist in one tap.  Above the activity feed, there are Most active companies. Aggregated data on the last 1500 requests are shown here. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#statistics","content":"Aside from the Activity screen, you can find global statistics on the home screen and on widgets. "},{"title":"Low-level settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#low-level-settings","content":" To open the Low-level settings, go to Settings &gt; General &gt; (Enable Advanced mode if it's off) &gt; Advanced settings &gt; Low-level settings. For the most part, the settings in this section are best left untouched: only use them if you're sure about what you're doing, or if the support team has asked for them. But some settings could be changed without any risk. "},{"title":"Block IPv6​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#blockipv6","content":"For any DNS query sent to get an IPv6 address, our app returns an empty response (as if this IPv6 address does not exist). Now there is an option not to return IPv6 addresses. At this point the description of this function becomes too technical: configuring or disabling IPv6 is the exclusive domain of advanced users. Presumably, if you are one of them, it will be good to know that we now have this feature, if not – there is no need to dive into it. "},{"title":"Bootstrap and Fallback servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#bootstrap-fallback","content":"Fallback is a backup DNS server. If you chose a DNS server and something happened to it, a fallback is needed to set the backup DNS server until the main server responds. With Bootstrap, it’s a little more complicated. For AdGuard for iOS to use a custom secure DNS server, our app needs to get its IP address first. For this purpose, the system DNS is used by default, but sometimes this is not possible for various reasons. In such cases, Bootstrap could be used to get the IP address of the selected secure DNS server. Here are two examples to illustrate when a custom Bootstrap server might help: When a system default DNS server does not return the IP address of a secure DNS server and it is not possible to use a secure one.When our app and third-party VPN are used simultaneously and it is not possible to use System DNS as a Bootstrap. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#other-features","content":"While Safari content blocking and DNS protection are indisputably two major modules of AdGuard/AdGuard Pro, there are some other minor features that don't fall into either of them directly but still can be useful and are worth knowing about. Dark theme   Residing right at the top of Settings → General screen, this setting allows you to switch between dark and light themes. Widgets  AdGuard supports widgets that provide quick access to Safari content blocking and DNS protection switches, and also show global requests stats. Auto-update over Wi-Fi only If this setting is enabled, AdGuard will use only Wi-Fi for background filter updates. Invert the Allowlist An alternative mode for Safari filtering, it unblocks ads everywhere except for the specified websites from the list. Disabled by default. Advanced mode Aside from unlocking DNS filtering, it grants access to Advanced settings. We don't recommend messing with those, unless you know what you're doing or you have consulted with technical support first. Reset statistics Clears all statistical data, such as number of requests, etc. Reset settings This option will reset all your settings. 支持 Use this option to contact support, report a missed ad (although we advise to use the Assistant or AdGuard's Safari Web extension for your own convenience), export logs or to make a feature request. 关于 Contains the current version of the app and an assortment of rarely needed options and links. "},{"title":"如何在 Safari 中拦截 YouTube 广告","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"如何在 Safari 中拦截 YouTube 广告​","type":1,"pageTitle":"如何在 Safari 中拦截 YouTube 广告","url":"adguard-for-ios/solving-problems/block-youtube-ads/#如何在-safari-中拦截-youtube-广告","content":"很遗憾，在技术上其实无法屏蔽 YouTube 应用程序里的广告，但是如您通过 Safari 浏览器打开 YouTube，我们有个解决方案。 为了屏蔽在 Safari 中打开的 YouTube 上的广告，我们发布了 Action 扩展（在 AdGuard iOS 版 v4.2 以上可用）。 升级到 v4.2 以后，您无需执行额外操作，此扩展会自动安装。 除了广告以外，此扩展在 iPad 上移除拦截广告后留下的占位符。 此外，现在又重新可以自动播放 YouTube 影片了，您不需要额外点击。  为了启动扩展并拦截 YouTube 上的广告，请执行以下操作： 在 Safari 中打开 youtube.com点击「分享」按钮点击「拦截 YouTube 的广告（由 AdGuard 创建）」 现在 YouTube 里没有广告了！ 请注意，如您重新加载网页，您要再次执行此扩展。 在一些情况下，AdGuard 扩展不会显示。 如您没看见此扩展，请尝试重覆执行上述的步骤或重启您的设备。 "},{"title":"How to avoid compatibility problem with FaceTime","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"How to avoid compatibility problem with FaceTime It turned out that Full-Tunnel mode might interfere not only with compatibility with other VPN applications, but also with FaceTime. Some users have encountered the problem that FaceTime does not work on the device when the AdGuard app for iOS is in Full-Tunnel mode. It is likely but not guaranteed that FaceTime will work when AdGuard is in Full-Tunnel mode without VPN icon because it is also incompatible with other VPN apps and unstable. If you want to use FaceTime and make sure that video/audio calls don't stop working, use Split-Tunnel mode. To enable it, follow the instructions: Go to AdGuard for iOS Settings &gt; General settings.Enable Advanced mode and go to the Advanced settings section that appears right after.Open Tunnel mode and select Split-Tunnel. Done! Now there should be no problems with FaceTime compatibility.","keywords":""},{"title":"Low-level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, tap the gear icon at the bottom right of the screen to open Settings. Select the General section and then toggle on the Advanced mode switch, after that the Advanced settings section will appear below. Tap Advanced settings to reach the Low-level settings section. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#low-level-settings","content":""},{"title":"Tunnel mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#tunnel-mode","content":"There are two main tunnel modes: Split and Full. Split-Tunnel mode provides compatibility of AdGuard and so-called &quot;Personal VPN&quot; apps. In Full-Tunnel mode no other VPN can work simultaneously with AdGuard. There is a specific feature of Split-Tunnel mode: if DNS proxy does not perform well, for example, if the response from the AdGuard DNS server was not returned in time, iOS will &quot;amerce&quot; it and reroute traffic through DNS server, specified in iOS settings. No ads are blocked at this time and DNS traffic is not encrypted. In Full-Tunnel mode only the DNS server specified in AdGuard settings is used. If it does not respond, the Internet will simply not work. Enabled Full-Tunnel mode may cause the incorrect performance of some programs (for instance, Facetime), and lead to problems with app updates. By default, AdGuard uses Split-Tunnel mode as the most stable option. There is also an additional mode called Full-Tunnel (without VPN icon). This is exactly the same as Full-Tunnel mode, but it is set up so that the VPN icon is not displayed in the system line. "},{"title":"Blocking mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocking-mode","content":"In this module you can select the way AdGuard will respond to DNS queries that should be blocked: REFUSED — respond with REFUSED code NXDOMAIN — respond with NXDOMAIN code Unspecified IP — respond with zero IP address Custom IP — respond with a manually set IP address "},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#block-ipv6","content":"By moving the toggle to the right, you activate IPv6 query blocking (AAAA requests). "},{"title":"Blocked response TTL​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocked-response-ttl","content":"Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. "},{"title":"Bootstrap servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#bootstrap-servers","content":"For DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC a bootstrap server is required for getting the IP address of the main DNS server. If not specified, the DNS server from iOS settings is used as the bootstrap server. "},{"title":"Fallback servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate server to which a request will be rerouted if the main server fails to respond. If not specified, the system DNS server will be used as the fallback. It is also possible to specify none, in this case, there will be no fallback server set and only the main DNS server will be used. "},{"title":"Background app refresh time​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#background-app-refresh-time","content":"Here you can select the frequency at which the application will check for filter updates while in the background. Note that update checks will not be performed more often than the specified period, but the exact intervals may not be respected. "},{"title":"如何在 AdGuard iOS 版设置系统层面的过滤？","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"关于系统层面上的过滤​","type":1,"pageTitle":"如何在 AdGuard iOS 版设置系统层面的过滤？","url":"adguard-for-ios/solving-problems/system-wide-filtering/#关于系统层面上的过滤","content":"系统层面上的过滤是指不仅在 Safari 浏览器里，而且在其它应用程序和浏览器里屏蔽广告及跟踪器。 这篇文章的内容讲述如何在您的 iOS 设备上设置系统层面的广告拦截。 在 iOS 上，仅有一个方式允许我们在系统层面上拦截广告和跟踪器，就是使用 DNS 过滤。 首先，您需要启用 DNS 保护。 To do so, open AdGuard for iOS settings → DNS protection and switch it on.  到了这一步，如您的目标是在系统层面上拦截广告和跟踪器，那么您有两个选择： Enable AdGuard DNS server (Settings → DNS protection → DNS server → AdGuard DNS).添加能够拦截广告和跟踪网域的 DNS 过滤器/hosts 文件，就是 AdGuard DNS 过滤器。 虽然第二个选择需要花更长时间设置，但是这个选择具有以下几个优点： 您可亲自选择任何 DNS 服务器，并不需要使用某一个特定的拦截服务器。您可以同时添加几个 DNS 过滤器和/或 Hosts 文件，但是您不能同时使用几个 DNS 服务器。  "},{"title":"如何添加 DNS 过滤器/Hosts 文件​","type":1,"pageTitle":"如何在 AdGuard iOS 版设置系统层面的过滤？","url":"adguard-for-ios/solving-problems/system-wide-filtering/#如何添加-dns-过滤器hosts-文件","content":"您可以添加任何一个 DNS 过滤器或 Hosts 文件。无论是 DNS 过滤器还是 Hosts 文件，说明的内容都是一样的。 比如，让我们一起尝试添加 AdGuard DNS 过滤器。 AdGuard DNS 过滤器是由几个过滤器（包括 AdGuard 基础过滤器、社交媒体过滤器、防跟踪保护过滤器、移动广告过滤器、EasyList、EasyPrivacy 等等）组成的。为了使该过滤器与 DNS 级广告拦截的兼容性更佳，我们特地简化了它。 Open AdGuard for iOS settings → General.启用高级模式。 「高级设置」标签将出现。 打开它。   温馨提示：我们不推荐您更改其它高级设置标签里的设置，特别是低级设置。 有些设置可能会导致互联网连接中断或会造成您的隐私安全被泄露，因此您要保持警惕。 下面的内容讲述的是，为了添加 AdGuard DNS 过滤器需要进行的步骤。 请复制此链接：https://raw.githubusercontent.com/AdguardTeam/FiltersRegistry/master/filters/filter_15_DnsFilter/filter.txt（这是 AdGuard DNS 过滤器的链接）。Open AdGuard for iOS settings → DNS protection → DNS filtering (available while Advanced mode is enabled) → DNS filters.点击「添加过滤器」按钮,在过滤器的 URL 字段里粘贴上述链接并点击「下一步」。  通过在第三步粘贴另一个链接，您就可以使用同样的方式添加任何其它的 DNS 过滤器。 在这里您可以找到各种过滤器以及它们的链接。 "},{"title":"How to activate premium features","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"How to activate premium features There are two options to activate premium features on AdGuard for iOS app: 1) Purchase a subscription. Just tap on the Get Premium plaque anywhere in the app and follow the on-screen instructions. All you'll need to do is enter your Apple ID password and confirm the purchase. You can choose between a monthly, yearly and lifetime subscriptions. 2) Use an AdGuard license (you can purchase it at AdGuard website). Log into your AdGuard personal account via the app: go to AdGuard app &gt; Settings &gt; License screen and tap on the Login button there. You'll be asked to enter your AdGuard Personal account credentials*. After you do, if you have any valid license key in your account, it will be automatically picked up to activate Premium in your AdGuard for iOS app. As an alternative, you can just enter a valid license key in the e-mail field leaving password field blank to activate Premium features. PS: AdGuard Pro for iOS (our other iOS app) can only be purchased from App Store.","keywords":""},{"title":"Safari Web extension","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"What it does​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#what-it-does","content":"By default, Safari provides only basic tools to content blockers. These tools don't allow the level of performance that can be found in content blockers on other operating systems (Windows, Mac, Android). For example, AdGuard apps on other platforms can use such effective weapons against ads as CSS rules, CSS selectors, and scriptlets. Unfortunately, these instruments are absolutely irreplaceable when dealing with more complex cases such as pre-roll ads on YouTube, for example. AdGuard's Safari Web extension compliments AdGuard by giving it the ability to employ these types of filtering rules. Besides that, AdGuard's Safari Web extension can be used to quickly manage AdGuard for iOS right from the browser. Tap the Extensions button — it's the one with a jigsaw icon, depending on your device type it may be located to the left or to the right of the address bar. Find AdGuard in the list and tap it.  On iPads AdGuard's Safari Web extension is accessible directly by tapping the AdGuard icon in the browser's address bar. You will see the following list of options: Enabling/disabling protection on the website. Turning the switch off will disable AdGuard completely for the current website and add a respective exclusion rule. Turning the switch back on will resume protection for the website and delete the rule. Any such change will require some time to take effect. Blocking elements on the page manually. Tap the Block elements on this page button to prompt a pop-up for element blocking. Select any element on the page you want to hide, adjust the selection zone, then preview changes and confirm the removal. A corresponding filtering rule will be added to AdGuard (that you can later disable or delete to revert the change). Report an issue. Swipe up to bring out the Report an issue button. Use it to report a missed ad or any other problem that you encountered on the current page. "},{"title":"How to enable AdGuard's Safari Web extension​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#how-to-enable-adguards-safari-web-extension","content":""},{"title":"In the iOS settings​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-the-ios-settings","content":"AdGuard's Safari Web extension greatly improves the ad blocking quality, so we recommend enabling it on all sites. Web extension is not a standalone tool and requires AdGuard for iOS. If you don't have AdGuard for iOS installed on your device, please install it first and complete the onboarding process to prepare it for work. Once done, open Settings &gt; Safari &gt; Extensions.   Find ALLOW THESE EXTENSIONS section and then find AdGuard among the available extensions.  Tap it, then turn on the switch. On the same screen make sure that the AdGuard extension has required permissions: All Websites should have the Allow status.  AdGuard's Safari Web extension requires access to the web pages' content to operate, but doesn't use it for any purpose other than blocking ads. "},{"title":"In Safari​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-safari","content":"Alternitavely, you can also turn AdGuard extension on from the Safari browser. Tap the Extensions button (if you don't see it next to the address bar, tap the aA icon).  Then find the Manage Extensions option in the list and tap it. In the opened window turn on the switch next to AdGuard.   If you use this method, you may have to go to Safari settings to grant AdGuard extension the necessary permissions anyway. You should now be able to see AdGuard among the available extensions. Tap it, and then tap on the yellow i icon. Enable Advanced protection by tapping the Turn on button and confirming the action. If you use AdGuard for iOS without Premium subscription, you won't be able to enable Advanced protection. Alternatively, you can enable Advanced protection directly from the app, in the Protection tab (second from the left in the bottom icon row). AdGuard's Safari Web extension only works on iOS versions 15 and later. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-mac/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#independence","content":"AdGuard Browser Assistant is an extension installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Mac, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard ad blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with a desktop AdGuard for Mac, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Smart onboarding​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#smart-onboarding","content":"When AdGuard for Mac is installed for the first time, the thing a user encounters in the first place is the onboarding. During this process the user quickly learns about AdGuard's settings and can customize filtering to their liking. At one stage AdGuard will determine the user's default browser and provide them with a download link for the new Assistant.  On rare occasions, a browser may prove incompatible with the Browser Assistant, and the user will be offered to install the legacy version instead. "},{"title":"Separate tab in settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Mac settings, together with Stealth Mode, Browsing Security, Parental Control and others. Don’t worry if you missed the opportunity to install Browser Assistant during the onboarding, you'll find this option in the app's settings. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: 1) the new Assistant is not available for your browser; 2) you are used to the green shield icon and want to leave things as they were. If you recognize yourself in any of these scenarios, then the legacy version will suit you. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-mac/browser-assistant/#how-to-install-adguard-browser-assistant","content":"Technically, you won’t need to do it on your own: during the onboarding process AdGuard app will determine your default browser and offer to install Browser Assistant for it. Yet, if you missed that step, you can download it yourself. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Safari, Edge, Opera, and Yandex. To install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and then the Install button. That’s it! "},{"title":"安装/卸载","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#系统需求","content":"操作系统版本： macOS 10.12（64 位）或更高版本 RAM： 至少 2 GB 浏览器： Safari、Google Chrome、Opera、Yandex.Browser 和其他在 macOS 上可用的浏览器 可用磁盘空间： 120 MB "},{"title":"安装过程​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#安装过程","content":"为了将 AdGuard macOS 版安装到您的电脑上，请您打开浏览器，在地址栏键入 adguard.com 后，在打开的网页上点击下载即可。  请等待 AdguardInstaller.dmg 下载完成后，在 Dock 栏上已安装的文件列表里双击它的图标。  AdGuard 图标将出现在您的桌面上。 单击它打开安装应用程序，然后在打开的窗口中双击 AdGuard 图标。  当您第一次启用 AdGuard 时，您的操作系统将会提示您：该应用程序是从互联网下载的 App。 点击打开。  在下一步，请点击安装。  请等待安装程序完成安装所需要的文件。  以使用应用程序，需要输入 macOS 账号的用户名和密码。 在弹出的对话框上输入用户名和密码后，点击好。  现在，您将看到一个快速安装向导，您可以在其中根据需要配置保护。 您可以马上开始设置（来试试吧！） 或暂时无设置需求（先保持这样）。  完成啦！AdGuard 已成功安装到您的 Mac！ "},{"title":"卸载​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#卸载","content":""},{"title":"一般卸载方式​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#一般卸载方式","content":"首先，请您点击相应的图标以打开 'Finder'：  前往应用程序。 在列表中找到 AdGuard，右键它并选择移到废纸篓。  "},{"title":"进阶卸载方式​","type":1,"pageTitle":"安装/卸载","url":"adguard-for-mac/installation/#进阶卸载方式","content":"除非您知道如何操作或有我们技术支持专门为您推荐使用进阶方式卸载应用程序，我们不推荐您使用该方式。 另外，先执行「标准卸载」的所有步骤。 之后，删除以下 AdGuard 文件： /Library/Application Support/AdGuard Software/com.adguard.mac.adguard（文件夹）~/Library/Preferences/com.adguard.mac.adguard.plist（文件）~/Library/Group\\Containers/TC3Q7MAJXF.com.adguard.mac（文件夹）/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist（文件）/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist（文件）/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard-pac.daemon.log（文件）。/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log（文件） To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot; rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot; rm $HOME/Library/Preferences/com.adguard.mac.adguard.plist rm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot; find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -delete sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist sudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log sudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log 开启 ’活动监视器’。通过搜索查找 cfprefsd 进程。  退出在用户态下运行的进程（不是在 root 权限运行的）。 为了退出，请点击进程，然后在左上角点击 X。 在对话窗确认要退出。  AdGuard 卸载完成。 "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-mac/overview/","content":"","keywords":""},{"title":"Home panel​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#home-panel","content":" The first thing you see upon startup will be a screen with a big On/Off toggle. Below are shown various stats (ads blocked, trackers blocked, data saved) since the installation or since the last stats reset. To start configuring AdGuard for Mac, you need to click the gear in the upper right corner of the window and select &quot;Preferences&quot;. "},{"title":"General Preferences​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#general-preferences","content":" Descriptions under option titles seem self-explanatory, but still: Activate language-specific filters automatically Enabling this option, you won't have to manually choose all the filters when visiting a foreign website, saving you some time. Launch AdGuard at login A simple and convenient feature with which you don't have to worry whether or not you have your ad blocker turned on, and just be sure that ads are always blocked. Do not block search ads and websites' self-promotion This option might be useful to online shoppers: instead of adding all your favorite e-shops and sites to the Allowlist, you can simply exclude self-promos and search ads from filtering. AdGuard will automatically detect those and let them be, while removing everything else ad-like. Hide menu bar icon If you don't want to see the menu bar icon, there is an option to hide it. But don't worry: even if you remove it from the menu bar, AdGuard will continue to run in the background. From this same window you can access the above-mentioned Allowlist, to which you can add websites you do not wish AdGuard to filter. Just click the corresponding button located at the bottom of the window. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#filters","content":" Filters are the main driving force behind the Ad blocker module. To understand how filtering works, get acquainted with our comprehensive article. But in essence, filter lists are sets of rules written in a special language, and your ad blocker is an interpreter of these rules who then implements them. As a result, you stop seeing ads on your web pages and life gets lots better. Some filter lists (AdGuard’s Base filter, Annoyances filter, EasyList, etc.) are pre-installed, while other specific ones, adapted to your preferences, can be downloaded additionally and added to your program. Aside from the more general and universally applicable filters (like Base filter), AdGuard provides an extensive quantity of filters for every occasion: filters aimed at tracking prevention (like Tracking Protection filter),language-specific ad filters that block content in a selected language,Social media filter that removes &quot;Like&quot; and &quot;Share&quot; buttons,Annoyances filter for cookie warnings, in-page pop-ups and others of the same ilk,and even a filter that unblocks some ads instead of blocking them — Filter for search ads and self-promotions. AdGuard filters are automatically updated. Our developers create them all based on user feedback received. You can always help other AdGuard users (and yourself, in perspective) by sending us reports right from the app's Assistant (it's really handy, we'll tell you more about the Assistant further on), or from the website. If you wish to know more about AdGuard filters, here is some info. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#user-rules","content":" Another vital part of the Ad Blocker module are its User rules. If you have some coding experience and would like to create your own rules that would be a better custom fit than the standard filters already available, then you can try your hand at this. The syntax AdGuard uses for its filtering rules is based on that of any other ad blocking extension, but with considerable additions, extending its possibilities. The whole process of rule-writing in all its nuances is described in these comprehensive instructions, so if you want to write some custom rules and check how much of a coder you are, just follow the steps we described in this article. "},{"title":"DNS​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#dns","content":" DNS filtering is one of the most useful features, thanks to which all your DNS traffic is encrypted. But if you're using the default DNS server provided by your ISP, your DNS traffic is likely not encrypted and vulnerable to snooping and hijacking. In the DNS panel you can select the DNS servers from known DNS providers or even add custom DNS servers. Also you can add domains to DNS blocklist or allowlist and add complicated rules using DNS rules syntax. Finally, you can add DNS filters of your choice. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#stealth-mode","content":" This module is a very useful tool that will help you maintain your privacy from websites that try to retain such info about you as your IP address, computer parameters, browser settings and even the initial page from which you were redirected, not to mention cart contents if we speak of web stores. If this list of info potentially to be shared with shady third parties doesn't make you think twice, then might we add that in most cases they will also get such personal data as your age, yearly income, medical history, physical address and your kids' names. Eliminating such things as unwanted cookies or clandestine insertion of tracking parameters into your browser is what Stealth Mode does best. Stealth Mode contains a wide range of options, which ensure its flexible configuration. They are divided into several categories, and for an unprepared user many of them will seem confusing and maybe even complicated. We provided each option with a hint to make up for the deficiency — hints appear when you hover over the icon with a question mark. If you still wish to know more about the whole concept, we encourage you to proceed to this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browsing-security","content":" Next we have the Security panel, where a module also known as Browsing Security is located. What it does is protection from malicious and phishing websites. Note that AdGuard is not an antivirus, but an entirely different program. It will show you a warning if you are about to go onto an infected domain, but it cannot stop you from downloading anything suspicious or help you deal with already existing viruses. Phishing is a very common web fraud aimed at stealing personal data (passwords, bank account details, etc.). It is carried out using fake web pages mimicking popular websites or real services, such as web stores or social networks. Many phishing websites have URLs that only differ from the real ones in just a few symbols to put you off your guard. If a user enters their details on such a website, they’ll definitely end up in the wrong hands. Browsing Security gives strong protection against such incidents. At the same time, the user’s personal information is not transferred anywhere, and AdGuard servers do not know which websites the user is visiting, because the security check is not performed via open web address (URL) but through hash prefixes (hash is a certain data structure that renders each address added to the base unambiguous). Some web pages are not malicious themselves, but they may contain elements built into their structure by other websites. Unlike browser plug-ins, Browsing Security module checks each object built into any web page, ensuring maximum protection. If you wish to help us in perfecting this module, you can check the lower box on the panel near the &quot;Help us with Browsing Security filters development&quot; phrase. This will enable your computer to send us pertinent info on fraudulent websites you might stumble upon while surfing the web — and our developers will make sure they end up locked at the bottom of your ban list. "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#browser-assistant","content":" AdGuard Browser Assistant’s primary function is to manage filtering directly from the browser. It used to be a mere userscript incorporated into AdGuard for Mac app that then became a full-fledged browser extension. Know more about the benefits it yields.  You will be prompted to install the Browser Assistant for your default browser when you first install AdGuard (during the onboarding process). If you missed it, you can download it for any browser at any time. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#extensions","content":" Extensions are small programs that do exactly what their name implies — they extend functionality. And AdGuard uses several extensions of its own, also called userscripts, to broaden its functions range: 1. AdGuard Assistant (legacy version) This extension assists the user in changing basic AdGuard settings within the browser, without the need to open the app itself. Like Browser Assistant, legacy Assistant works with all macOS compatible browsers. Thanks to this little tool you can do several things without having to leave the browser: add a certain webpage to the &quot;do not block&quot; list, choose and block an especially annoying element on the page, report the website if it still manages to get ads through to you. Note that this version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But legacy Assistant might be of help if there is no Browser Assistant extension for your browser. 2. AdGuard Extra This extension is used to solve the more complicated ad blocking cases you might encounter. We would recommend you to always keep it switched on, unless you have a serious reason not to. 3. AdGuard Popup Blocker Prevents all these annoying popup windows from opening when you view webpages. Blocks popup ads on web pages. One of the important features of AdGuard for Mac is that the application can work as a cross-browser userscript manager. You can easily add any scripts you like and manage existing ones without having to switch browsers every time. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#network","content":" This last panel is dedicated to Network filtering, and you will find extra functionalities here. We do recommend to enable the first two ones: &quot;Automatically filter applications&quot; and &quot;Filter HTTPS protocol&quot;. Those are an important added precaution to better filter your web space. HTTP is the primary protocol for transmitting information over the Internet. Most data including ads is transferred via it, but it has one disadvantage — the connection is unencrypted. Thanks to the HTTPS filtering feature AdGuard has, not only HTTP traffic is filtered, but also HTTPS traffic (S stands for ‘secure’). There are also the options of &quot;Do not filter websites with EV certificates&quot; and &quot;Use AdGuard as an HTTP Proxy&quot;. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. As for the second option — well, yes, in fact you can use AdGuard as a regular HTTP proxy server. All traffic coming through it will be filtered. This proxy will also be available on your local network, so you may use it for traffic filtering on other devices that are able to reach the proxy directly. To filter traffic on another device connected to proxy you will need to install an AdGuard root certificate there. After you configure proxy, open your browser and go to this page. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#许可证","content":"First, there's the License tab that you can open from the dropdown main menu (the one that opens once you click the gear icon on the upper right of the main window). From this tab you can see which license type you are using, check its status and validity period.  In this same tab you can refresh your license status, renew your license or reset the license key using the corresponding buttons. "},{"title":"支持​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#支持","content":"Click the gear icon in the upper right corner, select &quot;Support&quot;, and you will be able to send a bug report or a feature request to our support team. Be sure to add your real actual email though, because without it the message won't be sent.  To report a missed ad or a broken website, please follow the link above the message window, we use a separate reporting tool for those types of issues. It is possible to attach a diagnostic report to your message, you only need to check the box in the lower part of the tab. "},{"title":"Updates check​","type":1,"pageTitle":"Features overview","url":"adguard-for-mac/overview/#updates-check","content":"Last but not least. You can check for filter and program updates by clicking the corresponding menu options in the dropdown menu (click the gear icon and you'll see it). "},{"title":"Advanced Settings guide","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"How to reach the Advanced settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#how-to-reach-the-advanced-settings","content":"Changing Low-level settings can cause problems with the performance of AdGuard, may break the Internet connection or compromise your security and privacy. You should only open this section if you are sure of what you are doing or our support team has asked you to do it. To go to Advanced settings, follow this route: the AdGuard icon at the tray menu → the gear icon → Advanced → Advanced settings. "},{"title":"Advanced settings​","type":1,"pageTitle":"Advanced Settings guide","url":"adguard-for-mac/solving-problems/advanced-settings/#advanced-settings","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in Network Extension mode. Use a comma or line break to separate values. network.extension.exclude.ports The listed ports will be excluded from filtering in Network Extension mode. Use a comma or line break to separate values. network.extension.route.exclude The listed routes will be excluded from filtering in Network Extension mode. Set routes using an IP address or destination CIDR. Separate values with commas or line breaks. network.extension.http.downgrade.bundleids Here you can specify a list of applications for which the HTTP/2 protocol will be downgraded to HTTP/1.1 in the Network Extension filtering mode. The bundle ID should be separated by a comma or a line break. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, because it cannot work with them simultaneously. You will find more information about the problem in this article. network.extension.dns.redirect.exclude.bundleids Here you can specify a list of applications that make DNS queries directly not via system DNS resolver (for example, some VPN clients or DNS filtering applications). DNS filtering will be disabled for them in the Network Extension mode. The bundle IDs should be separated by a comma or line break. network.https.ocsp.check By setting true, you enable HTTPS certificate revocation checking. network.filtering.localnetwork By setting true, you enable local network filtering. network.filtering.localhost By setting true, you enable LoopBack filtering. upstream.proxy In this string, you can specify a proxy server for upstream connections. For example: SOCKS5 proxy with authentication — socks5://username:password@proxy.example.org:1080Local HTTP proxy without authentication — http://localhost:3128 upstream.proxy.socks5udp By setting true, you enable redirection of UDP traffic through the local server in SOCKS5 mode. Note: If your SOCKS5 server does not support the UDP protocol, enabling this setting will cause your Internet connection to fail. dns.proxy.bootstrap.ips Here you can enter the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server. dns.proxy.fallback.ips Here you can specify a list of IP addresses of DNS servers that will be used as backups in case the encrypted DNS server fails to respond. dns.proxy.detect.search.domains This option enables automatic detection of the local network domain, which will be automatically redirected to the fallback DNS server instead of the main DNS server. dns.proxy.fallback.domains Here you can list domains for which the fallback DNS server will be used instead of the main DNS server. dns.proxy.adblockrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to ad-blocker-style rules. 0 — respond with REFUSED 1 — respond with NXDOMAIN 2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Here you can specify the type of DNS server response to blocked requests, corresponding to hosts rules: 0 — respond with REFUSED 1 — respond with NXDOMAIN 2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Here you can specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.blocking.response.IPv6.address Here you can specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests when dns.proxy.adblockrules.blocking.mode or dns.proxy.hostrules.blocking.mode is set to the response type &quot;ADDRESS&quot;. dns.proxy.block.AAAA.requests Here you can enable IPv6 DNS query blocking. dns.proxy.blocked.response.TTL.in.seconds Here you can specify the TTL (time to live) value that will be returned in response to a blocked request. subscription.link.interception.userscript Activate this feature if you want AdGuard to automatically intercept the URLs of userscripts and open the installation window. subscription.link.interception.filter Activate this feature if you want AdGuard to automatically intercept subscription URLs (for example, abp:subscribe, etc.) and open the custom filter setup window. "},{"title":"How to install AdGuard on macOS High Sierra and above","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"How to install AdGuard on macOS High Sierra and above During the Installation of AdGuard on macOS High Sierra (or later versions) you may see a message: &quot;System Extension Blocked&quot;. This is a new security mechanism that appeared in High Sierra, it requires you to explicitly allow the installation of a third-party system extension. To complete the installation of AdGuard you have to manually allow loading the extension in System Preferences &gt; Security &amp; Privacy &gt; General. Click the &quot;Allow&quot; button, and after that you will be able to proceed with the installation as normal.","keywords":""},{"title":"iCloud Private Relay and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problem description in a nutshell​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problem-description-in-a-nutshell","content":"By default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard cannot block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. Yet, AdGuard still filters traffic in other browsers. To keep using iCloud Private Relay, consider installing AdGuard for Safari. The same applies to using any VPN apps on Mac: you have to choose between using iCloud Private Relay or a VPN service. "},{"title":"In detail​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard developed &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. On Monterey, iCloud Private Relay got introduced. Privacy features of the Mail app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and the Mail app privacy features: iCloud Private Relay is applied to connections at the library level — before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter in filtered apps because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic — otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#recommended-solution","content":"We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. "},{"title":"Alternative solution​","type":1,"pageTitle":"iCloud Private Relay and AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-solution","content":"You can prevent AdGuard from using the &quot;default route&quot; by disabling the &quot;default route&quot;. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel.  Bear in mind that, in this case, you'll face the issues described above. "},{"title":"Compatibility issues with different macOS versions","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#currently-existing-problems","content":"Every year Apple releases a new version of macOS, introducing innovative solutions and adding new useful features. But some of them, such as Network Extensions API (Big Sur) or iCloud Private Relay (Monterey), cause some problems to many applications, AdGuard not being an exception. In this article we go over the known issues specific to each macOS version and possible ways to solve them. "},{"title":"Monterey 12: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with iCloud Private Relay​ Currently, AdGuard and iCloud Private Relay cannot work at the same time. AdGuard has no ability to block ads because iCloud Private Relay encrypts traffic before AdGuard can filter network connections. When iCloud Private Relay is active, any filtering (including local filtering) becomes impossible. Thus, AdGuard can't filter traffic or perform DNS filtering in Safari. That's why by default, AdGuard uses the &quot;default route&quot; which disables iCloud Private Relay. For a deeper understanding of this problem, read this article. Recommended solution We recommend using AdGuard together with a more traditional VPN service such as AdGuard VPN. Alternative solution You can prevent AdGuard from using the &quot;default route&quot; by disabling it. It can be done via Advanced Settings → network.extension.monterey.force.split.tunnel. Note that enabling this setting will cause the problems described above.  Compatibility with Protect Mail Activity​ Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails. However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. For a deeper understanding of this problem, read this article. Recommended solution At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Monterey 12, Big Sur 11.6 and later: currently existing problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-and-later-currently-existing-problems","content":"These problems aren't fixed by Apple yet, or fixed only partially. Compatibility with Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in Network Extension mode. You have to switch AdGuard to Automatic Proxy mode. To do so, follow this instruction. Compatibility with Flutter​ This problem is solved in Flutter 2.2, released in June 2021. But to fix it for applications developed in Flutter, you need to wait for updates. If you use Flutter alongside AdGuard in &quot;Network Extension&quot; mode (or any other &quot;Transparent Proxy&quot;-type app) in Monterey or Big Sur, you will run into problems: projects won't open and Flutter will be effectively broken. We have already reported this bug to Apple. Meanwhile, you can use these temporary solutions: 1) Use AdGuard in Automatic Proxy mode. 2) Disable SIP and switch AdGuard to Kernel Extension mode as explained here. VPN apps with legacy API​ Despite AdGuard is displayed as a VPN in system settings, it shouldn't cause any conflicts when working alongside other VPN-based apps. However, if you're using a VPN-based app that was downloaded from outside App Store, there's a chance it uses the old VPN API and you have to exclude it from filtering: 1) Open AdGuard's menu. 2) Select Preferences.... 3) Switch to the Network tab. 4) Click the Applications... button. 5) Find the app you want to exclude and uncheck the checkbox next to it.  "},{"title":"Already fixed problems​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#already-fixed-problems","content":"These problems have been fixed by Apple by now but can be encountered in the older versions of macOS Big Sur. "},{"title":"Compatibility with Little Snitch 5​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-little-snitch-5","content":"At this moment, Network Extension mode in AdGuard isn't compatible with Little Snitch 5. When both are running, there's a chance to encounter issues with various apps' behavior, even if they aren't filtered by AdGuard. This problem is directly caused by a bug in Big Sur, and we've already informed Apple about it. This leaves us to believe that this issue will get resolved in one of the next updates. It needs to be said that this problem can't be solved by disabling connections monitoring in Little Snitch, because this action doesn't unload Little Snitch's extension from the system. We recommend to switch to Automatic Proxy filtering mode when running AdGuard alongside with Little Snitch on Big Sur, at least until Apple fixes the bug. "},{"title":"Compatibility with local proxies​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#compatibility-with-local-proxies","content":"Note: now AdGuard can filter local proxies (mostly) without any problems. If you encounter any issues in OS versions 11.1+, or if you're using Big Sur 11.0, remove the local proxy from System settings and configure an upstream proxy in AdGuard by following the instruction below. To configure an upstream proxy in AdGuard for Mac in Big Sur, you need to go to AdGuard menu → Advanced → Advanced Settings.... Click on the Value area of the upstream.proxy setting to configure a proxy.  Enter a string that looks like scheme://user:password@host:port, where scheme is either http, https, socks4 or socks5, depending on your proxy type, If you use socks5 proxy type, set the value of the upstream.proxy.socks5udp setting to true to make AdGuard route UDP traffic to the proxy server. user and password are corresponding username and password of your proxy (if needed). Ignore either or both when not applicable,host is the IP address of your proxy server,port is the desired port number to be used by the proxy server. Example: socks5://localhost:6322 will configure a SOCKS5 local proxy that listens to port 6322 and doesn't require a username or a password. Click Apply to make AdGuard route all traffic that went through it to the configured proxy server. If you run into any problems, please contact our tech support at support@adguard.com. Example 1: Configuring an upstream Shadowsocks proxy​ Here's an example of how to configure an upstream proxy for Shadowsocks. First of all, you need a working server side for your proxy. Most likely, to set it up, you would use a JSON file like this (server and password values were chosen randomly here): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  You can find more information about how to get started on Shadowsocks website. Then you'd have to install Shadowsocks client on your Mac. Make sure that you select 'Manual Mode' or 'Auto Mode' in its settings! The configuration won't work if you select 'Global Mode' (or 'Auto Mode' in Big Sur versions prior to 11.1).  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:1080. Notice that you need to use &quot;local_port&quot; value from the JSON file here. Because Shadowsocks uses SOCKS5, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. Example 2: Configuring an upstream Surge proxy​ In Big Sur v11.1+, there are no known conflicts between AdGuard and Surge proxy. If you are using an older version of Big Sur (prior to 11.1), check that System Proxy in the bottom right corner is disabled. Otherwise, Surge won't work with AdGuard. On the other hand, Enhanced Mode can be enabled without causing a conflict in any Big Sur version.  Now go to AdGuard menu → Advanced → Advanced Settings... and set the Value area of the upstream.proxy setting to socks5://localhost:6153 or http://localhost:6152, depending on which type of proxy you want to use. Notice that you need to use port value that's indicated in the Events area of the Activity tab in your Surge client. If you chose SOCKS5 protocol, you also need to set the value of the upstream.proxy.socks5udp setting in AdGuard Advanced Settings to true to make AdGuard route UDP traffic to the proxy server. "},{"title":"Alternatives to using a Network Extension​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternatives-to-using-a-network-extension","content":"It's impossible to foresee each and every possible problem that can pop up in Big Sur or Monterey, there are countless various hardware/software and settings configurations. If you face any compatibility issues, please contact our support team, but feel free to try one of these workarounds first. "},{"title":"Using \"Automatic proxy\" filtering mode​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"If you face problems in Big Sur or Monterey which can't be resolved by any of the methods above, you can try switching AdGuard to Automatic proxy mode. 1) Open AdGuard's menu. 2) Select Preferences.... 3) Switch to the Network tab. 4) Click the Select Mode... button. 5) Select Automatic Proxy.  Now AdGuard has automatically added a .pac file to your Mac's network settings, so that the system will consider AdGuard a proxy and try to send all traffic through AdGuard. Take into account that some apps may ignore this system setting and their traffic will not be filtered. "},{"title":"Enabling Kernel Extension in Big Sur and Monterey​","type":1,"pageTitle":"Compatibility issues with different macOS versions","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"By default AdGuard uses Network Extension framework in Big Sur and Monterey as the old Kernel Extension framework is disabled there. This can cause some compatibility problems, but to enable Kernel Extension back, you need to disable System Integrity Protection (SIP) first. To disable SIP, follow this instruction: 1) Click the Apple symbol in the Menu bar. 2) Click Restart… 3) Hold down Command-R to reboot into Recovery Mode. 4) Click Utilities. 5) Select Terminal. 6) Type csrutil disable. 7) Press Return or Enter on your keyboard. 8) Click the Apple symbol in the Menu bar. 9) Click Restart… Now that SIP is disabled, this is how you enable Kernel Extension:  1) Open AdGuard's menu. 2) Select Preferences.... 3) Switch to the Network tab. 4) Click the Select Mode... button. 5) Select Kernel Extension. 6) Confirm that you want to switch to Kernel Extension. However, we only recommend using this method if everything else fails, as this may lead to unexpected issues. "},{"title":"Installation problems solving","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"\"Installation failed\" error in macOS Catalina​","type":1,"pageTitle":"Installation problems solving","url":"adguard-for-mac/solving-problems/installation-issues/#installation-failed-error-in-macos-catalina","content":"During the installation you can face an error like this:  Follow this instruction to solve the problem: 1) Restart your Mac 2) As your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Hold the keys until the Apple logo appears to get the computer into Recovery mode. 3) From the top bar select Utilities &gt; Terminal, and execute this command: csrutil disable 4) Restart the Mac and log into Administrator's profile 5) Open the Finder window and select from the top bar Go &gt; Go to Folder and type ~/private/ 6) Create a folder named tmp and type in your password 7) Launch AdGuard installation As the installation is completed, restart your Mac in Recovery mode using the instruction above and execute csrutil enable command in Terminal to enable system protection. "},{"title":"Launch issues on macOS","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"Launch issues on macOS 11 and higher​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-11-and-higher","content":"If you have problems launching AdGuard for Mac on Big Sur and Monterey operating systems, please use this instruction: Reboot Mac and enter recovery mode.Disable SIP (Launch Terminal from the Utilities menu and type csrutil disable).Reboot Mac.Close the AdGuard app, open Terminal and type systemextensionsctl reset.Reboot Mac and enter recovery mode.Enable SIP (Launch Terminal from the Utilities menu and type csrutil enable).Launch the AdGuard app and enable protection. "},{"title":"Launch issues on macOS 10​","type":1,"pageTitle":"Launch issues on macOS","url":"adguard-for-mac/solving-problems/launch-issues/#launch-issues-on-macos-10","content":"If you have problems launching AdGuard for Mac on Sierra, Mojave and Catalina operating systems, please use this instruction: Open Terminal and enter command ls -@lOae /private/var/db/KernelExtensionManagement.Check that the restricted flag is not present (like on the screenshot).  Reboot your Mac in recovery mode.Open Utilities → Terminal.Enter csrutil disable.Enter administrator password.Reboot your Mac.Open Terminal and enter the following command: sudo chflags restricted /private/var/db/KernelExtensionManagement.Reboot your Mac in recovery mode.Open Utilities → Terminal → Enter csrutil enable → Enter administrator password → Reboot your Mac.开启 AdGuard 保护。 "},{"title":"Manual certificate installation","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manual certificate installation AdGuard for Mac needs to install the root certificate into certificate storage to be able to filter HTTPS traffic. This action is performed automatically in most cases as you run the app for the first time, but users of Gecko-based browsers (Firefox, Waterfox etc.) who have a master password set up for their browser may be required to take additional steps (because these browsers use their own certificate storage instead of the system one). They need to either enter the master password when prompted (to grant AdGuard access to the certificate storage) or manually install the certificate. To manually install the certificate into Firefox-like browser: Open &quot;Preferences&quot; Go to &quot;Privacy &amp; Security&quot; — &quot;Certificates&quot; Click on &quot;View Certificates&quot; Navigate to &quot;Authorities&quot; tab and click on &quot;Import...&quot; button Select file /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer or just download it from http://local.adguard.org/cert using a Chromium-based browser (e.g Google Chrome or new Edge) and with a HTTPS-filtering running in AdGuard Exact actions required for different Gecko-based browsers may vary, but the general sequence and the path to AdGuard Personal CA.cer file will be the same. PS: For Setapp application version the file path is the following: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Protect Mail Activity and AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"In a nutshell​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-a-nutshell","content":"Apple's Mail app now uses a proxy to hide a user's IP address when downloading images from emails.  However, it won't work if there's an active VPN connection. As it treats AdGuard as a VPN, it won't preload images automatically. Apple explains this issue here. "},{"title":"In detail​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#in-detail","content":"AdGuard for Mac now uses macOS built-in socket filtering based on the network extensions API. This new and rather buggy mechanism replaced good old Kernel extensions. Over the last 1.5 years, we've reported more than 20(!) bugs to Apple regarding their new filtering method. The network extensions API has a VPN-like configuration with a list of route-like entries. On Big Sur, AdGuard used &quot;split-tunnel&quot; rules to avoid creating the &quot;default route&quot; rule because it causes problems on early Big Sur releases. These problems were solved in Monterey so nothing prevents us from using the &quot;default route&quot; rule. On Monterey, iCloud Private Relay got introduced. Privacy features of Mail.app also use Private Relay servers. As a result, AdGuard can't work together with iCloud Private Relay and Mail.app privacy features: iCloud Private Relay is applied to connections at the library level - before they reach the socket level, where AdGuard operates.iCloud Private Relay uses QUIC, which AdGuard can't filter because HTTP/3 filtering is not yet available.As AdGuard blocks QUIC, including iCloud Private Relay traffic - otherwise, ad blocking is impossible.When you use iCloud Private Relay and switch AdGuard into the &quot;split-tunnel&quot; mode, you can't open websites in Safari.To work around this issue for Monterey, we apply the &quot;default route&quot; rule. When Private Relay sees that rule, it disables itself automatically. So, AdGuard works seamlessly on Monterey, but iCloud Private Relay gets disabled. network.extension.monterey.force.split.tunnel restores the &quot;Big Sur&quot; behavior, but this option may break access to websites due to (3) and (4). We keep searching for a solution to this issue. One of the options is implementing HTTP/3 filtering. "},{"title":"Recommended solution​","type":1,"pageTitle":"Protect Mail Activity and AdGuard","url":"adguard-for-mac/solving-problems/protect-mail-activity/#recommended-solution","content":"At this point, we recommend using a more traditional VPN service, such as AdGuard VPN, instead of the new Apple's privacy features. "},{"title":"Protection cannot be enabled","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Protection cannot be enabled If AdGuard Protection cannot be enabled for some reason, perform the following steps: Click the AdGuard icon at the Menu Bar → go to Advanced → Reset settings... → Quit AdGuard... In the Spotlight Search, type Terminal, enter sudo rm -R /Library/Application\\ Support/com.adguard.adguard and execute. Restart your computer. Open the Terminal again, type ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ and execute. You should receive the following: No such file or directory. Start AdGuard, type in login and password when prompted.","keywords":""},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-safari/overview/","content":"","keywords":""},{"title":"常规​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#general","content":" The first tab is the General screen where you can set up basic things like notifications, update intervals, and launching AdGuard at system startup. You can also choose to display the AdGuard icon in the menu bar. There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#filters","content":" A filter is a list of rules written in a special syntax. Following these rules, content blockers can filter web traffic: block ads or requests to malicious websites. Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. In the Filters tab, you can enable the whole category or separate filters. Changes in the Filters tab are reflected in the Content Blockers section (located in the General tab). "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#contentblockers","content":" A content blocker is a thematic cluster of filters. Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. Content Blockers were designed for two reasons: to structure filters and to conform to Apple’s restrictions. In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. As this number was not enough for an ad blocker to provide a good filtering quality (AdGuard Base Filter alone has 30,000 filtering rules), we divided AdGuard for Safari into six content blockers each containing up to 50,000 rules. In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. Regarding AdGuard for Safari, up to 900,000 rules can be enabled for all six content blockers. Whereas the limit has been increased, the structure of content blockers has remained the same. In the Content blockers tab, you can see which content blockers are enabled, how many rules each of them is using, and which filters are functioning. You can manage enabled filters in the Filters tab. In the Content blockers section, you can only see the list of already enabled filters. "},{"title":"AdGuard General​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_general","content":"AdGuard General is a content blocker that combines the most essential filters for blocking ads. We recommend keeping the AdGuard Base Filter always enabled. "},{"title":"AdGuard Privacy​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_privacy","content":"This content blocker is the main tool against counters and other web analytics tools. The AdGuard Tracking Protection filter is enabled by default. "},{"title":"AdGuard Social​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_social","content":"AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. Other annoyance filters can also be found in this section: filters against pop-ups, mobile app banners, cookie notices, and more. To enable them, find Social Widgets in the Filters tab. "},{"title":"AdGuard Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_security","content":"This content blocker unites several security-related filters. Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive. "},{"title":"AdGuard Other​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_other","content":"AdGuard Other contains filters with various functions. For example, it has a filter that unblocks search ads and self-promo ads. In some cases, it helps find exactly what you are looking for, because these kinds of ads are more relevant and less intrusive than others. Disclaimer: we don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion. "},{"title":"AdGuard Custom​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_custom","content":" If you need more filters, you can add them to AdGuard Custom. To add a custom filter, enter a URL or a local file path in the relevant field. You can find new filters at filterlists.com. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#userrules","content":"User rules can be used to customize ad blocking. They can be added manually, imported, or created automatically when you block an element on the page. To add your own filering rules, use a special syntax. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#about","content":" In the About tab, you can see info about the current version of your product and links to legal documents. There is also a link to our repository on GitHub. You can monitor the product development, create feature requests and report bugs there. Reminder: AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"How to install AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#install","content":"AdGuard for Safari is a free app presented on the App Store. To install it on your device, do the following. Open the App Store and find the needed extension there.  Press Get &gt; Install &gt; Open. To set up AdGuard for Safari, enable the AdGuard extensions in the Safari settings. In a notification, click Fix it. In an opened window, check the boxes next to AdGuard extensions.  Not all extensions are required for AdGuard for Safari to function correctly. For instance, checking the Icon extension enables the icon in the tray menu. However, we recommend to enable all of them.  After you complete steps 1-3, AdGuard for Safari will start functioning. You can now configure its settings. "},{"title":"How to uninstall AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#uninstall","content":"To uninstall AdGuard for Safari, do the following: Quit the app.Open Safari preferences.Choose the Extensions tab. You will see a list of extensions, AdGuard has eight.Uncheck all checkboxes and press Uninstall below any of them.  At this point you will see a notification:  Press Show in Finder and move the application to the bin. AdGuard for Safari will be removed from your device. "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI. "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus Please note, that you must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872Important! Automatic updates are disabled when you install AdGuard for Windows from MSI. If you want to allow updates for a user (which is not recommended because centralized updates will become impossible), set the value of the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key to YES (case insensitive). In this case automatic updates will be allowed, any other value or no value for this parameter disables automatic updates. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"Browser Assistant","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Benefits​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#benefits","content":""},{"title":"Independence​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#independence","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. In other words, it is more autonomous from the main AdGuard app. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Compatibility with the main app​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#compatibility-with-the-main-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Background information: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. The extension and the app worked in conjunction but sometimes the integration would fail. Some websites would stop being protected by the desktop program and be backed up only by the less powerful extension. When using the Browser Assistant, all these problems don’t matter as there can be no conflicts in essence. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate tab in settings​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#separate-tab-in-settings","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing Security, Parental Control and others. There you will find a link to download the extension for your default browser. Besides, there is a checkbox to enable the legacy Assistant.  "},{"title":"Legacy Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#legacy-assistant","content":"Legacy Assistant is the previous version of Assistant, which is a mere userscript, not a browser extension. Basically, there are two cases when you might want to pick it instead of the new Browser Assistant: 1) the new Assistant is not available for your browser; 2) you are used to the green shield icon and want to leave things as they were. "},{"title":"How to install AdGuard Browser Assistant​","type":1,"pageTitle":"Browser Assistant","url":"adguard-for-windows/browser-assistant/#how-to-install-adguard-browser-assistant","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. That’s it! "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-windows/overview/","content":"","keywords":""},{"title":"Home screen​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#home-screen","content":" Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately. "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#settings","content":" Settings is the section that requires the most attention. This is where you can configure the app so that it fully meets your requirements: blocks only what bothers you, uses the DNS server of the trusted provider, removes third-party cookies, and so on. "},{"title":"General settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to understend what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browsing-security","content":"Browsing Security gives strong protection against malicious and fishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and fishing websites database up to date.  In case you want to learn more about Browsing Security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rules syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#parental-control","content":"There are numerous websites access to which should be restricted if the PC is used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browser-assistant","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#extensions","content":"AdGuard can significantly broaden website functionality working as a user script manager. AdGuard Users can add their own scripts, as well as manage existing ones.  Automatically detect userscripts With this option enabled, AdGuard will automatically define browser queries to userscripts and suggest their installation. Otherwise, extensions can be downloaded and installed manually. The following extensions are installed with AdGuard:  AdGuard Assistant AdGuard Assistant is Legacy Assistant that you may use if the new Assistant is not available for your browser. The name of this extension is quite deliberate: it actually assists the user in changing basic AdGuard settings right in the browser, without the need to open the app itself. AdGuard Assistant works with all Microsoft Windows compatible browsers. In addition, the AdGuard Assistant icon will not be displayed on websites listed as exceptions by the user and on certain web pages where there is a risk of incorrect content display. AdGuard Extra This is a custom extension designed to fight the technique of re-inserting blocked ads — the so-called ad blocker circumvention/ad reinjection. Both are advanced anti-ad blocker methods that continue to rise in popularity among advertisers. AdGuard Extra is essentially a mini-program that changes the way pages work,and it does so in such a way that it becomes much more difficult for sites to use the above-mentioned functions to bypass blockers. AdGuard Popup Blocker This extension prevents popup windows from opening when you view web pages. Some pop-ups are considered useful – they may contain settings for site administering or additional reference information demonstrated upon clicking a link. That is why you can turn off the Blocker if needed. This extension doesn’t work on websites added to the AdGuard exceptions list either. It is turned off by default, but you can turn it on in the application settings. You will find more detailed information about this extension in our Knowledge base. Web of Trust Web of Trust lets you see the reputation of each website based on its users’ opinions. The site is rated by a number of specific criteria: trust, security, etc. This extension is turned off by default, but you can turn it on in the application settings. Please, note that AdGuard is not the developer of this extension. "},{"title":"Network​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#network","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. Most websites are now using HTTPS, and the same applies to advertising. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL Certificates offer a stronger safety guarantee; owners of such websites have to pass a thorough and globally standardized identity verification process defined by EV guidelines. Which is the reason why some users trust websites with such certificates and prefer not to filter them. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymousсhanges your IP address to protect your data from trackingencrypts your traffic to make it unreachable to scammerslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Others​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#others","content":"There are other useful AdGuard options that shouldn't go unnoticed in this article, since they add much to user experience. "},{"title":"支持​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#支持","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"许可证​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#许可证","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"关于​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#关于","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese Agreement, Privacy Policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"系统需求​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#系统需求","content":"操作系统： Microsoft Windows 11、10、8.1、8、7、Vista RAM： 至少 512 MB 可用磁盘空间： 150 MB 浏览器： 百度、Microsoft Edge、Microsoft Internet Explorer（所有版本）、Opera、Google Chrome、Yandex.Browser、Mozilla Firefox 和其他浏览器。 "},{"title":"AdGuard 安装过程​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#adguard-安装过程","content":"如您想要在 Microsoft Windows 操作系统的电脑或笔记本上使用 AdGuard ，您要下载安装包并启用安装程序。 请执行以下步骤： 1) 打开您的浏览器并转到 AdGuard 网站。您也可以在地址栏输入 adguard.com 网址。在官网点击「下载」。  2) 下载完成后，请点击显示在下载栏上的「打开」按钮或直接点击 adguardInstaller.exe 的文件名即可。  3) 您会看到用户账户控制（UAC）对话框请求您允许本程序对您的 PC 进行更改。 请点击「是」。  4) 下一步，请您选择安装位置。  如您想更改应用程序默认安装路径，请点击「 浏览」，在浏览文件夹窗口里选择想要安装 AdGuard 的文件夹位置。选择好后，请您点击「确定」。 如您想要将 AdGuard 安装到新建的文件夹位置，请点击「新建文件夹」并输入文件夹名。 如果想要创建 AdGuard 桌面快捷键，查看「创建桌面快捷」的复选框。 点击「安装」以继续安装过程。  5) 请稍等，安装完成后，点击「完成」。  恭喜您！ 您已成功在您的计算机上安装 AdGuard。 您将会看到 AdGuard 的主页。现在，您可以按自己的需求更改设置。 "},{"title":"如何卸载 AdGuard Windows版​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"常规方式​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#常规方式","content":"如您想卸载 AdGuard，请执行下述操作： Microsoft Windows 10&amp;11：点击「开始菜单」并选择「设置」。 在弹出的视窗里点击「应用」。 在「应用程序」窗口中，从左边的列表中选择「应用和功能」。 在已安装的应用程序列表中选择「AdGuard」，并点击「卸载」。 在弹出的对话框确认「卸载」。  Microsoft Windows 8：右键单击任务栏左下角的空白区域并选择「控制面板」。 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。  Microsoft Windows 8.1：右键单击开始按钮并选择「控制面板」。 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。 Microsoft Windows 7：打开开始菜单。 在搜索框键入「控制面板」。 单击「程序」部分中的「卸载程序」，然后从已安装应用程序列表中选择「AdGuard」，然后按位于列表正上方的「卸载」按钮。 在打开的窗口中单击「卸载 AdGuard」。  "},{"title":"卸载的进阶方法​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#advanced","content":"如果由于某些原因您无法通过常规的方式卸载应用程序，您可以尝试使用卸载的进阶方法。 首先，您要通过该链接下载并安装我们开发人员创建的卸载软件。 您可以将压缩包发送到您的电脑上的任何一个文件夹里。解压后，请您开启 Adguard_Uninstall_Utility.exe 文件，并允许应用程序对您的设备进行更改。 然后按照以下说明进行操作： 选择一般卸载（Standard uninstall），删除 AdGuard，并点击卸载（Uninstall）。  请等待卸载完成。卸载成功完成后，在视窗里您将会看到： &quot;[OK] Uninstall finished&quot;（[好的] 卸载完成）  请注意！ 下述的第三四步，只在由于某些原因上述两个步骤无法卸载 AdGuard 的情况下，才可以执行。 即当您执行「一般卸载」后，还是无法重新安装 AdGuard 时。我们强烈推荐执行下述进阶卸载的第三四步前，请您先于技术支持联系。 选择进阶卸载（Advanced uninstall）并点击卸载（Uninstall ）。  请等待卸载完成。卸载成功完成后，在视窗里您将会看到： &quot;[OK] Uninstall finished&quot;（[好的] 卸载完成）  AdGuard 卸载成功完成！ "},{"title":"How to collect AdGuard logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"Trace logs​","type":1,"pageTitle":"How to collect AdGuard logs","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking on the AdGuard icon in the tray menu and choosing Exit AdGuard:  Please don't leave the service running:  Open the console (type cmd in the start panel). Run the app with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace in case if you use 32-bit one. Select Debug logging level.  Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button.  Important: after exporting the logs, set the logging level back to Standard. Debug logging level will slow down the application. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click on Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click on Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking on &quot;No&quot; will cancel he installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click on Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click on Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right click on the drive containing the installation location and select Properties. 2) Go to Security tab and click on Edit. 3) Single click on SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click on OK to go back to Properties dialog. Then click on Advanced. 5) Click on Change Permissions. 6) On Permissions tab, double click on Administrators. 7) Select This folder, subfolders and files for Applies to field and tick all the available Basic permissions. After that hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click on OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. 1) Run AdGuard. 2) Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. You can also open the download page by clicking on the link via the AdGuard app at Settings → Network → HTTPS filtering.  3) Open your browser and then open Settings. 4) Go to Privacy &amp; Security tab. 5) Scroll down to Certificates and click on the View Certificates button.  6) Select Authorities tab. 7) Click Import....  8) Browse the downloaded cert.cer file and click Open. 9) Check the Trust this CA to identify websites box and then lick OK. You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click on the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click on Task ManagerIn the upper menu bar select Details Right-click on the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe)In the drop-down menu click on Create dump fileThe file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. Please note, AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"How to collect AdGuard installation logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"How to collect AdGuard installation logs If any problems occur during the installation of AdGuard, the support team might ask you to collect and send them AdGuard installation logs. In this case you need to: Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"Advanced (low-level) Settings guide","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach Advanced Settings​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#how-to-reach-advanced-settings","content":"To go to Advanced settings, in the main windows click Settings → General Settings and scroll down to Advanced Settings. Alternatively, select Advanced → Advanced settings... in the tray menu. "},{"title":"Advanced Settings​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#advanced-settings","content":"Once you open Advanced Settings, you will be presented with the following options: "},{"title":"Block TCP Fast Open​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-tcp-fast-open","content":"If enabled, AdGuard will block TCP Fast Open in the Edge browser. To apply settings, you need to restart the browser. "},{"title":"Exclude app from filtering by entering the full path​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#exclude-app-from-filtering-by-entering-the-full-path","content":"If you want AdGuard not to filter any specific application, specify the full path to them and the apps will be excluded from filtering. Separate different paths by semicolons. "},{"title":"Enable AdGuard pop-up notifications​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-adguard-pop-up-notifications","content":"Enable this feature to see AdGuard pop-up notifications. They do not appear too often and contain only important information. You can also use the tray menu to recall the last pop-up notification. "},{"title":"Automatically intercept filter subscription URLs​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#automatically-intercept-filter-subscription-urls","content":"Enable this feature if you want AdGuard to automatically intercept filter subscription URLs (i.e. abp:subscribe and alike) and to open a custom filter installation dialog. "},{"title":"Use redirect driver mode​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#use-redirect-driver-mode","content":"If this option is enabled, AdGuard intercepts all the traffic and redirects it to the local proxy server for further filtering. Otherwise, AdGuard will filter all the traffic on the fly, without redirection. In this case, the system will consider AdGuard to be the sole application that connects to the Internet (other applications are routed through it). The downside is that it will make the system Firewall less effective. The upside is that this approach works a little bit faster. "},{"title":"Open main window at system start-up​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#open-main-window-at-system-start-up","content":"Enable this option to make the main AdGuard window open after the system is loaded. Note that it doesn't affect whether the actual filtering service is launched or not, this setting is located in Settings → General Settings "},{"title":"Filter localhost​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-localhost","content":"If you want AdGuard to filter loopback connections, check the box. This option will always be on if you have AdGuard VPN installed, because otherwise it won't be able to work. "},{"title":"Enable HAR writing​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-har-writing","content":"This option should be enabled only for debugging purposes. If you tick the checkmark, AdGuard will create a file that contains information about all filtered HTTP requests in HAR 1.2 format. This file can be analyzed with the Fiddler app. Note that it may slow down your web browsing significantly. "},{"title":"Show QUIC​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#show-quic","content":"Allows displaying the QUIC protocol records in the filtering log. For blocked requests only. "},{"title":"Block Java​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-java","content":"Some websites and web services still support Java Plug-Ins. The API that serves as the basis for Java plug-ins has serious security vulnerabilities. You can disable such plug-ins for security purposes. Nevertheless, even if you decide to use Block Java option, JavaScript will still be enabled. "},{"title":"Action applied to blocked DNS requests​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#action-applied-to-blocked-dns-requests","content":"Here you can select the way AdGuard will respond to DNS queries that should be blocked: Reply with &quot;Refused&quot; errorReply with &quot;NxDomain&quot; errorReply with a custom IP address "},{"title":"Custom IPv4 address​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#custom-ipv4-address","content":"If &quot;Custom IP address&quot; is selected as an action applied to blocked DNS requests, here you should specify the IPv4 address that will be returned in response to blocked &quot;A&quot; requests. If none are specified, AdGuard will reply with the default &quot;Refused&quot; error. "},{"title":"Custom IPv6 address​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#custom-ipv6-address","content":"If &quot;Custom IP address&quot; is selected as an action applied to blocked DNS requests, here you should specify the IPv6 address that will be returned in response to blocked &quot;AAAA&quot; requests. If none are specified, AdGuard will reply with the default &quot;Refused&quot; error. "},{"title":"Fallback servers​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#fallback-servers","content":"Here you can specify an alternate DNS server to which a DNS request will be rerouted if the main server fails to respond within the timeout period specified in the next section. There are three options to choose from: Don’t use fallback servers;Use system default servers;Use custom servers. "},{"title":"DNS server timeout period​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-server-timeout-period","content":"Here you can specify the time in milliseconds that AdGuard will wait for the response from the selected DNS server before resorting to fallback. If you don’t fill in this field or enter an invalid value, the value of 5000 will be used. "},{"title":"List of custom fallback servers​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#list-of-custom-fallback-servers","content":"If you want AdGuard to use custom fallback servers, list them in this section, one per line. "},{"title":"List of custom bootstrap addresses​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#list-of-custom-bootstrap-addresses","content":"A bootstrap is an intermediate DNS server used to get the IP address of the secure DNS server you chose earlier in DNS protection. Such a &quot;middle ground&quot; is needed when using protocols that denote the server address by letters (such as DNS-over-TLS, for example). In this case, the bootstrap acts as a translator, transforming the letters into numbers your system can understand. By default, the system DNS resolver is used, and the initial bootstrap request is made through port 53. If this does not suit you, list here the IP addresses of the DNS servers that will be used to determine the address of the encrypted DNS server in the top-to-bottom order. The specified IP addresses will be applied in the order listed. If you specify invalid addresses, or no addresses at all, the system IPs will be used. "},{"title":"DNS exclusions​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-exclusions","content":"All DNS requests to domains listed here will be redirected to the system default DNS server instead of the DNS server specified in the app’s settings. Also, DNS blocking rules will not be applied to such requests. "},{"title":"Block ECH​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#block-ech","content":"If enabled, AdGuard strips Encrypted Client Hello parameters from responses. "},{"title":"Enable filtering of secure DNS requests​","type":1,"pageTitle":"Advanced (low-level) Settings guide","url":"adguard-for-windows/solving-problems/low-level-settings/#enable-filtering-of-secure-dns-requests","content":"When enabled, AdGuard redirects secure DNS requests to the local DNS proxy, in addition to plain DNS requests. "},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver To filter netwrok traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"How to collect Windows system logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"How to collect Windows system logs To analyse and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. Windows event logs contain records about all errors that occurr with the installed software, including AdGuard. Below is the brief instruction describing the way to get the log files and to send them to our support service if necessary. Press Win + R In the window that appears type in eventvwr and click on OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) -&gt; Windows Logs -&gt; Application. Right-click on the Application and in drop-down menu select Save All Events As... Select a name and where to save, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Open System: Event Viewer (Local) -&gt; Windows Logs -&gt; System. Right-click on System and in the drop-down menu, select Save All Events As... Choose a destination folder, enter the name, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"What can be done in the AdGuard Account","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"Manage account settings​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-account-settings","content":"In the Settings section of your AdGuard account, you can update or reset your password, change your email address, enable two-factor authentication, view the data stored about you by AdGuard and choose the language of your personal account and notifications. In this section, you can also manage your email preferences: receive transactional emails,receive AdGuard’s monthly newsletters,receive emails about AdGuard special offers and promotions,send read receipts to AdGuard when you open emails. "},{"title":"Manage licenses​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-licenses","content":"In the Licenses section, you can manage your licenses and the devices bound to them. AdGuard licenses can be: bound and unbound,extended,upgraded,canceled. You can also update your payment details. The devices bound to your AdGuard Ad Blocker licenses can be unbound or renamed. You can unbind unused devices by clicking the cross icon next to them. "},{"title":"View purchases​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#view-purchases","content":"The Purchase history section displays all the licenses that you have ever purchased using the email account you registered your AdGuard account with. You will also find there information about the date of purchase, order number, payment method and cost of the purchase. "},{"title":"Contact support​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#contact-support","content":"The Support tab contains useful links to help you solve problems or find answers to your questions about AdGuard products. They are divided into six sections: FAQ, Send a bug repot/feature request, Report incorrect blocking, Contact support, Knowledge base and Discuss. "},{"title":"两步验证","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"如何设置 2FA​","type":1,"pageTitle":"两步验证","url":"general/account/2fa/#如何设置-2fa","content":"1) 登录 AdGuard 帐号并前往设置标签，然后向下滚动到密码和安全部分。 2) 点击标题后第一行的「更改」按钮：  3) 使用您手机上的认证软件扫描二维码：  重要信息 请您保存第二个备用密码。该密码是在您的手机丢失或被偷窃的情况下用于恢复您的帐号的必要信息。 如果每个步骤都完成，下次登录个人帐号时，您将看到：  使用手机的认证软件扫码并输入验证码。 登录成功了！ 请注意：如您看到验证错误通知，请您查看手机上的时间设置。 如需要的话，请您更改时间设置。错误的时钟会成为验证错误的原因。 "},{"title":"How to register","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"What an AdGuard account is​","type":1,"pageTitle":"How to register","url":"general/account/register/#what-an-adguard-account-is","content":"AdGuard account is a user account that stores information about your AdGuard licenses and subscriptions, active devices, your purchase history, preferred language, and other preferences. Many AdGuard products offer an option to activate them by entering the credentials for your AdGuard account, provided it contains a valid license. "},{"title":"How to create an account​","type":1,"pageTitle":"How to register","url":"general/account/register/#how-to-create-an-account","content":"To create an account, go to AdGuard's official website and press the My Account button on the top right corner of the screen. Enter your email address and create a password — your account will be registered. If you enter your email address while purchasing a license or receive a license accociated with your email address as a gift, an account will be created automatically. To set a password, you can follow a link from a transactional or gift letter. You can also register with the above method. An account can also be created directly in an AdGuard app. Press the Log in or Activate button (it can be found in the License section or on a separate screen), enter your email and create a password. After the account is created, activate it by following the link in the activation email. "},{"title":"AdGuard 过滤器","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard 过滤器​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#adguard-过滤器","content":"基础过滤器删除英文内容网站的广告。 最初是基于 EasyList 并由我们修改。 查看规则防跟踪保护过滤器 — 各种在线计数器和网络分析工具的综合列表。 用它来隐藏用户在网上的活动，避免跟踪。 查看规则URL 跟踪过滤器从网址中移除跟踪参数加强隐私保护。 当用户选择在隐身模式下拦截跟踪参数时，此过滤器将自动启用。 查看规则社交媒体过滤器此过滤器移除社交媒体小工具「点赞」和「分享」按钮及类似的元素。 查看规则恼人广告过滤器屏蔽网页上的恼人元素。 查看规则 包括以下 AdGuard 过滤器（所有过滤器都可以独立于烦恼过滤器启用）： Cookie 通知在网页上拦截 Cookie 通知。 查看规则弹出窗口拦截各种对网站运行没有必要的弹窗。 查看规则移动拦截程序横幅广告阻止宣传网站移动应用的横幅。 查看规则小工具阻止第三方小工具：在线助手、实时客服支持聊天等 查看规则其他烦恼阻止不属于流行的烦恼类别的元素。 查看规则 解除搜索广告和自我推销过滤器解除可能对用户有用的广告。 在此页上了解更多关于此过滤器的信息。 查看规则俄语过滤器删除俄语网站上的广告。 查看规则德语过滤器删除德语网站上的广告。 最初是基于 EasyList Germany 过滤器，随后我们根据用户的反馈进行修改。 查看规则法语过滤器删除法语网站上的广告。 最初是基于 Liste FR 过滤器，随后我们根据用户的反馈进行修改。 查看规则日语过滤器删除日语网站上的广告。 最初是基于 Fanboy’s Japanese 过滤器，随后我们根据用户的反馈进行修改。 查看规则荷兰语过滤器删除荷兰语网站上的广告。 最初是基于 EasyList Dutch 过滤器，随后我们根据用户的反馈进行修改。 查看规则西班牙语/葡萄牙语过滤器删除西班牙语和葡萄牙语网站上的广告。 最初是基于 Fanboy’s Spanish/Portuguese 过滤器，随后我们根据用户的反馈进行修改。 查看规则土耳其语过滤器删除土耳其语网站上的广告。 由我们根据用户的反馈创建。 查看规则中文过滤器删除中文网站上的广告。 最初是基于 EasyList China 过滤器，随后我们根据用户的反馈进行修改。 查看规则实验性过滤器，此过滤器设计用于在将某些有风险的过滤规则添加到基本过滤器之前对其进行测试。 如果这些规则执行没有任何问题，它们会被添加到主过滤器中。 查看规则移动广告过滤器拦截移动设备上的广告。 包含所有已知的移动广告网络。 查看规则DNS 过滤器 — 此过滤器由其他几个过滤器 (AdGuard 基础过滤器、社交媒体过滤器、防跟踪保护过滤器、移动广告过滤器、EasyList 和 EasyPrivacy) 组成，并经过简化，以便更好地与 DNS 级别的广告拦截兼容。 AdGuard DNS 服务器使用此过滤器来拦截广告和跟踪器。 查看规则 "},{"title":"AdGuard 过滤器政策​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#adguard-过滤器政策","content":"我们的过滤器政策定义在过滤器中添加和删除的规则，以及 AdGuard 过滤器应该拦截和不应该拦截的内容的规则。 阅读全文 AdGuard 过滤政策了解详细信息。 "},{"title":"为 AdGuard 过滤器做贡献​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#为-adguard-过滤器做贡献","content":"我们非常幸运的是，拥有一个不仅热爱 AdGuard，还能回馈社会的社区。 很多人以各种方式做志愿者，让其他用户使用 AdGuard 的体验更好。 您也可以加入他们的行列。 我们也乐于奖励最活跃的社区成员。 那么，您能做什么呢？ "},{"title":"报告问题​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#报告问题","content":"我们依靠社区让我们知道过滤器的问题。 这样我们才能最有效地利用我们的时间，并保持过滤器的不断更新。 要提交报告，请使用网络报告工具。 "},{"title":"建议过滤规则​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#建议过滤规则","content":"您会在 GitHub 过滤器仓库中发现大量未解决的问题。 每个问题都涉及到某个网站的问题 — 遗漏的广告、误报等。 请选择其中一个问题并在评论中提供您自己的规则。 AdGuard 过滤器工程师将审查您的建议，如果证明是正确的，您的规则将被添加到 AdGuard 过滤器中。 这里是 AdGuard 过滤规则语法的官方文档。 在您创建自己的过滤规则之前，请您阅读它。 "},{"title":"其他贡献方式​","type":1,"pageTitle":"AdGuard 过滤器","url":"general/ad-filtering/adguard-filters/#其他贡献方式","content":"我们有专门的页面您可以在其中详细了解如何参与 AdGuard 开发。 "},{"title":"AdGuard filter policy","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"Terminology​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#terminology","content":"Throughout this text, we use the terms first party and third party. A &quot;first party&quot; is a website that a user visits intentionally and knowingly, plus a set of resources on the web operated by the same organization. In practice, we consider resources to belong to the same party if they are part of the same registrable domain: a public suffix plus one additional label. Example: site.example, www.site.example, and s.u.b.site.example belong to the same party because site.example is their common registrable domain. A &quot;third party&quot; is any party that does not fall within the definition of the first party above. Interactions with other parties are considered third-party, even if the user is transiently informed in context (for example, in the form of a redirect). Merely hovering over, muting, pausing, or closing a given piece of content does not constitute an intention to interact. "},{"title":"Common criteria​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#common-criteria","content":"These equally apply to rules in all filters. Rules that often cause problems with the work of some websites will be deleted.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"Ad filters​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#ad-filters","content":"This part describes the AdGuard Base filter, the Mobile Ads filter, and the following language-specific filters: Russian, German, Dutch, Spanish/Portuguese, Japanese, Turkish, Chinese, and French. What shall these filters block? These filters will block ads wherever possible.Ads should be blocked regardless of their reasons and goals.We will block ads caused by malicious apps or extensions that inject ads. Please note that we do it only on the condition that you specify how to install such an app or extension. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to the main filters. Websites’ own ads should not be removed on purpose. On the other hand, they should not be unblocked if it may cause third-party ads to reappear.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors.Anti-adblock scripts will be blocked only if they limit or affect the functionality of a website.Anti-adblock scripts will not be blocked in cases when it is prohibited by law.Rules that often cause problems with the work of some websites will be deleted. "},{"title":"Tracking Protection filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#tracking-protection-filter","content":"What will be blocked with this filter? This filter will block all trackers that collect user personal data. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Tracker is an online script that has tracking as its only purpose, or as one of its purposes. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"AdGuard URL Tracking filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#adguard-url-tracking-filter","content":"What will be blocked with this filter? This filter will strip all tracking parameters from URLs. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that would reduce user security levels will be removed.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"Social Media filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#social-media-filter","content":"What will be blocked with this filter? This filter will block social media widgets (on third-party websites) such as &quot;Like&quot; and &quot;Share&quot; buttons, recommendation widgets, and more. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block widgets that are a part of a website’s functionality, such as &quot;Comments,&quot; &quot;Embedded Post,&quot; &quot;Surveys,&quot; or widgets that require authorization via social networks.Rules that block links to a website’s communities in social networks.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"Annoyances filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#annoyances-filter","content":"What will be blocked with this filter? This filter will block obstructions on the page. These elements are not ads, but they obstruct the view and make it difficult to see the actual content of the website. Such elements include cookie notices, third-party widgets, in-page pop-ups, email subscription forms, banners with special offers, and aggressively placed social media widgets. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block elements that are essential for the website functioning (e.g. authorization forms) will not be blocked even if they satisfy other requirements.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"Filter unblocking search ads and self-promotion​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#filter-unblocking-search-ads-and-self-promotion","content":"Unlike other filters, this one unblocks certain ads. Read more about it in the article on search ads and self-promotion. What will be unblocked with this filter? Search ads (ads that you see among the results when using an online search engine).Website self-promotion (when an ad on a website is promoting this very website or other websites/social media/etc closely related to it). Limitations and Exceptions Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if the website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as social media following. A website’s traffic is considered sufficient when it has 30 thousand monthly visitors. "},{"title":"Quality requirements for filtering rules​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#quality-requirements-for-filtering-rules","content":"The rules should be as efficient as possible in terms of performance.Exception rules should be as specific as possible in order to avoid unnecessary unblocking.CSS and JS injection rules should be used as rarely as possible and only when it is impossible to block ads without them. "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic – some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about our Privacy Policy here. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"Browsing Security","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does a check work?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-does-a-check-work","content":"The scope and methods of checks depend on the product you use. In our browser extensions, AdGuard inspects only the pages you visit. In AdGuard for Windows, Mac, or Android, we offer you the best possible protection by checking both the pages and all objects loaded on them. "},{"title":"AdGuard for Windows, Mac, and Android​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-for-windows-mac-and-android","content":"We use the protocol Safe Browsing API version 2.2 for our work with filters. This protocol allows us to keep your personal data absolutely safe. Our server knows nothing about the websites that you visit. We use hash prefixes for checks, not the opened URLs. The figure below provides a general understanding of how the Browsing Security module works, using AdGuard for Windows as an example.  "},{"title":"AdGuard Browser extensions​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browser-extensions","content":"Browser extensions work differently, using the so-called Lookup API to check the pages you visit. Every time you visit any website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. For those interested in the process at a deeper level, the link above will be helpful. As a result of that exchange, the local client determines if the website belongs to the database of potentially dangerous websites or not. We bring to your attention that we never get any information that could allow us to determine which websites you visit and use that data in any way. An approximate algorithm of the functioning of the Browsing Security module is shown in the picture below.  "},{"title":"AdGuard 过滤器​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-过滤器","content":"We currently maintain two AdGuard filters. One protects against phishing and fraudulent websites. The other protects against malicious websites, visiting which may lead to a virus infection. "},{"title":"Phishing sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#phishing-sites-filter","content":"Phishing is a type of online fraud aimed at gaining access to confidential data of users — username and password. If you are interested in this topic, we suggest that you read this article at Wikipedia. Apart from phishing sites, this filter also covers different fraudulent sites, including all kinds of scams, sales of nonexistent content, and such. "},{"title":"Malicious sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#malicious-sites-filter","content":"This filter contains links to pages that lead to the execution of malicious code. It can initiate leakage or loss of data or harm the device of a user. It can be authorized (for example, when downloading and running the executable file) or unauthorized (for example, when being attacked with spyware). "},{"title":"How do we fill up our filters?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-do-we-fill-up-our-filters","content":"Our filters are constantly filled with new addresses. Since most of the work is automated, you can be sure that new malware and phishing addresses fall into our database as quickly as possible. "},{"title":"AdGuard Browsing Security Community​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browsing-security-community","content":"An important tool for maintaining the highest level of filtering is AdGuard Browsing Security Community. Any user of our products — be it AdGuard for Windows or our browser extension — can become a member of the community and help us in the making of AdGuard filters. In the picture below we described an algorithm of Browsing Security Community work:  "},{"title":"Want to help?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#want-to-help","content":"We will gladly accept any help! If you want to send us a complaint about a phishing or malware site, you can do it via technical support at support@adguard.com or on our forum. "},{"title":"False-positive responses​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites get added to AdGuard's filters. We do our best to reduce the percentage of false positives, but they still occur. If you come across this behavior from AdGuard, please send us a complaint about the false-positive alarm. You can submit such complaints via our technical support at support@adguard.com or on our forum. "},{"title":"如何安装 AdGuard","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"如何安装 AdGuard 根据您想安装的 AdGuard 应用程序或浏览器扩展，请按照以下不同的链接找到相关文章： AdGuard Android版 AdGuard iOS版 AdGuard Windows版 AdGuard Mac版 AdGuard 浏览器扩展 AdGuard Safari版 AdGuard 内容拦截器","keywords":""},{"title":"Known issues","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"Known issues​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#known-issues","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"Inspecting the original certificate​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#inspecting-the-original-certificate","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"Certificate Transparency​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"Have remarks or suggestions?​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#have-remarks-or-suggestions","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"Local.adguard.org 域名","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"技术说明​","type":1,"pageTitle":"Local.adguard.org 域名","url":"general/https-filtering/local-adguard-com-domain/#技术说明","content":"但是，这是怎么回事，为什么要这样做？ 请阅读以下技术说明。 AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. 但是，这样做对于高质量的内容拦截至关重要。为了做到这一点，AdGuard 注入了一个“内容脚本”：&lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;。 这个“内容脚本”会处理修饰符过滤，隐藏或删除网页中的广告内容。AdGuard 在网络级别拦截 local.adguard.org 域名地址的连接并在本地进行处理。 这就是为什么该域名具有多年不变的“静态” IP 地址。 为什么我们需要使用真实的 IP 地址呢？ 我们不能使用 127.0.0.1，因为浏览器不接受它。可以使用私有子网中的一些 IP 地址，但是该解决方案具有两个弊端。 首先，很有可能与现有的内部网络服务冲突并破坏对其的访问。其次，一些 DNS 服务器可能会认为这是 DNS 重新绑定的攻击，并拒绝回应 local.adguard.org。 "},{"title":"验证​","type":1,"pageTitle":"Local.adguard.org 域名","url":"general/https-filtering/local-adguard-com-domain/#验证","content":"这很容易验证。 如果您禁用 AdGuard，您会发现根本无法建立到 local.adguard.org 的连接，因为没有具有该地址的服务器。 只需在 AdGuard 被禁用时尝试在浏览器中打开它。 "},{"title":"What is HTTPS filtering","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"What is HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-https","content":"HTTPS (HyperText Transfer Protocol Secure) is an extension of the HTTP protocol that supports encryption to increase security. This protocol is used to securely transmit valuable information like personal data, credit card details, etc. Using HTTPS is highly advantageous because encrypted traffic is protected against eavesdropping by a third party, and we can only welcome this. HTTPS acceptance has been growing in recent years, mainly because it is encouraged by Google and also due to the emergence of a free certificate authority Let’s Encrypt. The diagram below describes the difference between plain HTTP protocol and secure HTTPS protocol.  "},{"title":"What is a security certificate?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-a-security-certificate","content":"Simply put, HTTPS means data encryption. But there’s still a problem: how can you be sure that you’ve established an encrypted connection with the right website? That’s where security certificates come into play. A certificate serves as proof that the website is really what it tells you it is. If a website doesn’t have such a certificate, or if the certificate contains incorrect information, the browser will not allow you to establish a secure connection. It is important that the certificate a website uses is issued by a certificate authority (CA) trusted by your browser. Such a CA guarantees that the SSL certificate is, indeed, issued to the website’s owner. "},{"title":"Why does AdGuard need to be able to filter HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#why-does-adguard-need-to-be-able-to-filter-https","content":"Most websites are now using HTTPS, and the same applies to advertising. Here are a few popular websites where you can’t remove ads without HTTPS filtering: youtube.com, facebook.com, and twitter.com. "},{"title":"How does HTTPS filtering work?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-does-https-filtering-work","content":"If it were easy, HTTPS wouldn’t be that secure. When a browser attempts to connect to a server, AdGuard establishes two secure connections: one with the browser (or another app) and the other with the server. The browser must trust AdGuard and the connections it creates. For this purpose, AdGuard generates a special (and unique) root certificate and installs it into the system and, when it is required, into some browsers (e.g., Firefox). Thus, AdGuard can see what is happening inside the secure connection and do its job — block ads and trackers. For better understanding we depicted this process:  "},{"title":"Does my traffic remain encrypted and secure?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#does-my-traffic-remain-encrypted-and-secure","content":"Of course! Your connection with a remote server remains encrypted and secure. AdGuard, just like your browser, checks the server’s certificate before deciding whether to filter it or not. However, HTTPS filtering has its drawbacks. The most important one is that it hides from the browser the actual certificate of the website. Instead, the browser sees the certificate issued by AdGuard. Because of this, we have taken additional measures to improve connection security. "},{"title":"Financial websites and websites with sensitive personal data​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#financial-websites-and-websites-with-sensitive-personal-data","content":"By default, AdGuard doesn’t filter any information on websites of banks, payment systems, or websites with valuable personal data. We maintain a list of thousands of exclusions. If you believe some website should be added to this list, please let us know. "},{"title":"Extended Validation (EV) certificates​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#extended-validation-ev-certificates","content":"AdGuard allows you to disable filtering for all websites that use extended validation certificates. An EV certificate offers a higher level of security and provides more guarantees than a regular certificate, proving that the website is not fraudulent or fake. "},{"title":"Problems related to HTTPS filtering​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#problems-related-to-https-filtering","content":"A 2017 study shows that 5 to 10% of HTTPS connections are established by HTTPS-filtering applications. It is usually done by various kinds of antivirus software. The bad news is that 24 out of 26 tested antiviruses reduced, in various ways, the connection security level, while two-thirds created connections prone to hacking. The researchers came to a simple conclusion: the Internet security community should pay close attention to applications that filter secure connections. And the developers of such software must pay serious attention to the quality of filtering implementations. We would like to note that AdGuard was not tested in the above study. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score – A*. However, this score is not perfect. During the study, the researchers identified some issues that were omitted in the final evaluation. Here at AdGuard, we fully agree with those conclusions. Moreover, we would like to be as open with users as possible and talk about the problems we are currently experiencing and the steps we are taking to improve the quality and security of the filtering mechanism. The list of these problems is sorted by priority. Most of the problems discovered in the above study are related to certificate validation mechanisms. This is what we want to focus on first. We are working on a separate certificate validation library. Moreover, we want to make it open source. A separate article lists all the known drawbacks of HTTPS filtering in AdGuard and our plans to fix them. HTTPS filtering issues on Android 7+​ Starting from Android 7, developers have to explicitly indicate that their apps trust user-installed certificates. Not everyone wants to, or bothers with it. What does it mean for AdGuard? AdGuard installs a user certificate to be able to filter HTTPS traffic. If an app doesn't trust this certificate, its HTTPS traffic will not be filtered. What to do? The first thing worth mentioning is that many apps (even modern ones) still trust user certificates. Nothing has changed in this regard. Almost all browsers also trust such certificates. There may be some exotic browsers that do not, but they are a rare exception to common practice. Finally, if your device is rooted, you can move the AdGuard certificate to the system storage. This way, you don't have to worry about any permissions a particular app may or may not have — HTTPS traffic will be filtered for modern apps just as well as for older ones. Please keep in mind that in this case, some additional security restrictions (e.g., HPKP or Expect-CT) apply to AdGuard. "},{"title":"How to manually check HTTPS quality?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-to-manually-check-https-quality","content":"There are several dedicated websites where you can check the quality of your HTTPS connection. These websites check if your browser (or, in our case, your browser plus AdGuard) is susceptible to common vulnerabilities. If you plan to use any program that filters HTTPS, not necessarily AdGuard (e.g., an antivirus), we advise that you check the connection quality on these websites. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"激活许可证的方式","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"如何激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#如何激活许可证","content":"要激活许可证，请打开 AdGuard 软件的「许可证」部分，前往「登录」或「激活」按钮。 使用您的 AdGuard 账号的电子邮件和密码登录。 如果您还没有一个账号，您将被提示创建一个。 注意：要用 AdGuard 账号激活许可证，您需要一个许可证中至少还有一个可连接的设备。 如果您的许可证可连接的设备数量已达上限，您可以升级 ，或者将许可证从一个设备转移到另一个。 您还可以使用许可证密钥激活许可证。 您可以在下方查看每个操作系统的激活说明。 "},{"title":"在 Windows 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-windows-版的-adguard-激活许可证","content":"开启 AdGuard 软件 请鼠标双击桌面上的 AdGuard 图标：  或也可以在通知栏双击 AdGuard 图标：  在应用程序菜单中进入「许可证」标签，并点击「激活许可证」  您将会看到两个激活方式： 输入您的 AdGuard 账号 （或 Facebook、Google 或 Apple 账户）的电子邮件和密码。  输入许可证密钥  "},{"title":"在 Mac 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-mac-版的-adguard-激活许可证","content":"打开 AdGuard 应用程序（在菜单栏点击 AdGuard 图标）  在右上角点击齿轮图标点击许可...  在弹出的窗口中按「激活」按钮  您将会看到两个激活方式： 输入您的 AdGuard 账号 （或 Facebook、Google 或 Apple 账户）的电子邮件和密码。  输入许可证密钥  "},{"title":"在 Android 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-android-版的-adguard-激活许可证","content":"开启 AdGuard 软件在屏幕上的左上角点击菜单图标 (☰)点击「获取高级版」（或点击「许可证状态」）  请点击屏幕右上角的 三点式菜单 (⋮)  按「激活高级版本」后，您有几种激活方式： 输入您的 AdGuard 账号 （或 Facebook、Google 账户）的电子邮件和密码  输入许可证密钥  "},{"title":"在 iOS 版的 AdGuard 激活许可证​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#在-ios-版的-adguard-激活许可证","content":"打开 AdGuard 应用程序，点击屏幕右上角的齿轮图标 点击许可证。 然后点击屏幕右上角的登录  输入您的 AdGuard 账号的电子邮件 和 密码  "},{"title":"如何将许可证转移到另一台设备​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#如何将许可证转移到另一台设备","content":"许可证密钥可以在有限数量的设备上激活。 如果许可证密钥已经在最大数量的设备上被使用，您需要通过您的账号解除设备绑定。 您可以通过三种方式做到这一点： 点击「重置许可」按钮（桌面应用程序），在 AdGuard 软件里退出账号，在 AdGuard 账号里点击设备旁边的十字图标。 在您解绑所需要的设备数量后，您可以在新设备上登录 AdGuard 账号。 该许可证就会绑定到新设备。 "},{"title":"升级许可证的方式​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#升级许可证的方式","content":"为了更方便地使用 AdGuard 软件，您可以升级您的许可证。 要增加 AdGuard 软件的功能，您可以将免费或试用期的许可证升级到完整版。要扩展设备数量，您可以将 AdGuard 广告拦截程序的个人许可证升级到家庭。您也可以 ，将许可证升级为终生许可。 您可以通过以下方式升级许可证： 在 AdGuard 软件的官网上购买另一个许可证，在 AdGuard 账号中点击「升级」按钮。 "},{"title":"取消订阅的方式​","type":1,"pageTitle":"激活许可证的方式","url":"general/license/activation/#取消订阅的方式","content":"用户可以在 AdGuard账 账号中取消订阅。 要取消订阅，请点击卡片或旁边的十字图标，选择「取消订阅」。 被取消的订阅将在其到期日之前有效。 在 App Store 购买的订阅可以在 App Store 账户或设备的设置中进行管理。 "},{"title":"关于旧版许可证的常见问题","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"关于旧版的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#关于旧版的许可证","content":"最开始，我们有以下的许可证用来激活 AdGuard 软件： 标准版 —— 用于 Windows/Mac 的 AdGuard 桌面端应用程序 移动版 —— 用于 Android/iOS 的 AdGuard 移动端应用程序 高级版 —— 同时用于桌面端和移动端的许可证 标准版和移动版可以支付用于1到9台设备。 标准版限制用于桌面端，而移动版只能用于收集和平板电脑。 高级版的许可证可以同时在2-18台设备上使用。 取决于用户购买时选择的所需要的设备数量。用户可以在同等数量的桌面端和移动端设备上激活许可证：2+2、3+3 等等。 比如说，您可能有可用于2+2的高级版许可证，该许可证可以安装在两台电脑和两台手机/平板电脑。 或者，比方说，您购买力9+9（总共18 台设备），那么您可以在9个电脑和9个手机/平板电脑安装该许可证。 所有许可证的类型（标准版、移动版、高级版）有一年和终身的效期。 2019年10月 AdGuard 有新版许可证。用户仍然可以选择两个效期，即一年和终身，但是许可证的类型改变了。现在我们有个人版（可以用于3台设备）和家庭版（可以用于9台设备）。 请注意：新版的许可证密钥可以用于所有设备上，无论是哪一种桌面端或移动端组合。 比如说，个人版的许可证可以安装在3台设备，即 Android、Mac 和 iOS，或是两个 Windows 电脑和一个 Apple iPad 上等等。 "},{"title":"旧版许可证现在怎么用？​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#旧版许可证现在怎么用","content":"标准版的许可证自动换成“通用版”，即可以用于所有设备，无论是桌面端还是移动端。 移动版的许可证未受改变（设备数量保持不变，依然只能用于手机或平板电脑上）。 高级版的许可证也没改变，依然收到设备数量的限制。 虽然高级版的许可证显示在用户的个人账号里（包括总计设备数量）。该许可证现在也可以激活在桌面端+移动端的设备组合。 比如说，以下是1+1许可证密钥的例子：  无论设备的总数（2）许可证密钥仅仅可以在1个桌面端和1个移动端激活。 所有旧版的许可证在 AdGuard 账号里带有「旧版」标记。 当用户续订获省级许可证时，它们自动转换成新版的许可证。 不过，也有一些细微的差别。 让我们看看哪些许可证可以转换成新版，以及如何做到这一点。 "},{"title":"我有旧版许可证密钥。 我有什么续订/升级选择？​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#我有旧版许可证密钥-我有什么续订升级选择","content":"用户可以在续订网页或 AdGuard 账号里查看该消息：  请前往「我的许可证」选项卡，检查每个特定密钥有哪些操作可供执行。 下面我们将用具体的例子给您解释。 "},{"title":"1/2/3台设备的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#123台设备的许可证","content":"用于1、2、3台设备的一年许可证可以转换成个人或家庭：  根据您需要保护的设备数量进行选择。 除了续订，您可以转为终身版：  由于技术限制终身版的许可证只能转换成家庭版（9台设备）：  "},{"title":"4+台设备的许可证（最多可连接到9台设备）​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#4台设备的许可证最多可连接到9台设备","content":"一年的许可证密钥配置仅能转换成家庭版的许可证：  由于技术限制用于4太或更多设备上的终身版许可证无法升级：  "},{"title":"9台设备的许可证​","type":1,"pageTitle":"关于旧版许可证的常见问题","url":"general/license/legacy/#9台设备的许可证","content":"高级版的许可证密钥（5+5 和更多）和您在我们帮助下单独购买的10多个设备的定制密钥。 这些都是比较特殊的情况，所以如果您想把自己的许可证升级为终身制，请联系我们：partners@adguard.com。 我们将根据您的许可证的具体配置，并提供一个不同的价格。 "},{"title":"支付方式","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"支付许可证的方式​","type":1,"pageTitle":"支付方式","url":"general/license/payment-options/#支付许可证的方式","content":"AdGuard 许可证可以在 adguard.com 上购买。 iOS 版 的 AdGuard Pro 可以在 App Store 上购买。 此外，用户也可以通过经销商购买广告拦截程序的许可证。 AdGuard 软件在应用商店和分销商店的购买情况取决于您的位于的位置。 "},{"title":"如何退款​","type":1,"pageTitle":"支付方式","url":"general/license/payment-options/#如何退款","content":"根据我们的销售条款，用户在https://adguard.com 购买 AdGuard 许可证密钥后可以100%退款。 为了申请退款，请联系我们的支持团队：support@adguard.com ，并说明您使用的付款方式。 在以下情况下，退款可能会被拒绝： 超过 60 天前购买了许可证，通过经销商购买了许可证，在 App Store 上购买了许可证，申请了许可证密钥升级或续订的部分价格进行退款。 "},{"title":"什么是 AdGuard 许可密钥","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"什么是 AdGuard 许可证密钥​","type":1,"pageTitle":"什么是 AdGuard 许可密钥","url":"general/license/what-is/#什么是-adguard-许可证密钥","content":"许可证是使用 AdGuard 产品的许可，根据《最终用户许可协议》提供的。 AdGuard 许可证以许可证密钥、激活码和产品卡的形式存在于用户的 AdGuard 账号中。 有些许可证需要支付（如 AdGuard 广告拦截程序个人版），有些是免费的，但有期限限制（如 AdGuard 应用程序的试用许可证）或功能有限（如 AdGuard iOS 版或 AdGuard 浏览器扩展）。 以下是所有类型的 AdGuard 广告拦截程序的许可证的列表。 试用许可证是启用所有功能的免费许可证，具有期限的限制： AdGuard Windows版有14天试用期、 AdGuard Mac版有14天试用期、 AdGuard Android版有7天试用期。免费许可证没有时间限制，但部分功能受限： AdGuard 浏览器扩展、 AdGuard 内容拦截器、 AdGuard iOS版。订阅是每月或每年自动或者 手动更新的付费许可证。 AdGuard 广告拦截程序月度订阅， AdGuard 广告拦截程序一年订阅。通过分销商购买的许可证 ，以及赠送的许可证 ，有时间限制，无法自动更新。 但是，用户可以手动续订它们： AdGuard 广告拦截程序月度许可证， AdGuard 广告拦截程序一年许可证。终身许可证 ，不受时间限制，具有完整的功能： AdGuard 广告拦截程序终身、 AdGuard Pro iOS版。 "},{"title":"用户可以连接多少设备​","type":1,"pageTitle":"什么是 AdGuard 许可密钥","url":"general/license/what-is/#devices","content":"不同许可证可用于不同数量的设备： 个人版：最多支持 3 台设备；家庭版：最多支持 9 台设备；iOS版 AdGuard Pro：支持 1 台设备。 要在设备上使用您的许可证，请登录您的 AdGuard 账号。 要增加设备数量，用户可以升级许可证。 "},{"title":"什么是许可证密钥​","type":1,"pageTitle":"什么是 AdGuard 许可密钥","url":"general/license/what-is/#license-key","content":"许可证密钥是一个独一无二的字符序列，代表 AdGuard 广告拦截程序的许可证。 密钥将自动绑定到用户购买许可证时输入的电子邮箱。 有了许可证密钥，用户可以： 在一些软件里登录 AdGuard 账号（例如 AdGuard Windows版）；如果没有 AdGuard 账号，您可以在软件里激活许可证 ；将您的许可证绑定到 AdGuard 帐账号并解除绑定。 当解除许可证时，请确保您记下许可密钥或以其他（安全的）方式记住它。 您将需要许可证密钥重新绑定您的许可证或将其转移到另一个账号。 "},{"title":"如何恢复许可证密钥​","type":1,"pageTitle":"什么是 AdGuard 许可密钥","url":"general/license/what-is/#如何恢复许可证密钥","content":"用户可以在AdGuard 账号中查看自己的许可证密钥。 许可证密钥通过用户购买 AdGuard 时输入的电子邮件地址绑定到账号。 温馨提示：在许多情况下，仅仅知道自己许可证密钥是不够的。 如用户在另一台计算机上使用它，并且设备数量达到了上限，用户必须在 AdGuard 账号中解除对该设备的绑定，才能再次使用它。 "},{"title":"Stealth Mode","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"常规​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Send Do-Not-Track header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#donottrack","content":"It sends a Do-Not-Track (DNT) HTTP header to queried websites, thus requiring web apps to disable tracking of your activity. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destructing third-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Self-destructing first-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#1p-cookie","content":"We do not recommend enabling this option as it may severely interfere with the work of certain sites. Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Block Java​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"其它​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referrer from third-parties​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#referrer","content":"Referrer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referrer saves the URL of the initial page. The server often has software that parses Referrer and extracts various pieces of information from it. Enabling this option hides the current website from third-party sites by changing the HTTP header. You can also set an arbitrary value for Referrer by entering it into the Custom Referrer field. To use default Referrer, leave the field blank. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. For example: ! This is the comment. Under this line there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":"Blocking by domain name​  This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ Blocking exact address​  This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img Basic rule modifiers​ Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.com. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. Unblocking an address​  This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. Unblocking everything on a website​  This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. Cosmetic rule​  Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions","content":"Trusted filters​ Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the scope of the rule. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page. Response status Browser detects a blocked request as completed with an error. "},{"title":"Basic rules syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. You can also use special characters in the template, their description is below. Note that AdGuard trims URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the scope of the rule and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent &quot;any set of characters&quot;. This can also be an empty string or a string of any length.|| — matching the beginning of an address. With this character you do not have to specify a particular protocol and subdomain in address mask. It means, || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. Visual representation We also recommend to get acquainted with this article, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility with different versions of AdGuard AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility with different versions of AdGuard In AdGuard for Windows, Mac, Android, and AdGuard Browser extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rules examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-modifiers","content":"Basic modifiersContent type modifiersException modifiers Note The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  Basic modifiers​ $domain$to$third-party$popup$match-case$header The following modifiers are the most simple and frequently used. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). To add multiple domains to one rule, use the | character as a separator. Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all of the following is true: 1) The request has document content type. 2) The rule pattern does not match any particular domains. 3) The rule pattern does not contain regular expressions. 4) The $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com. The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4). That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page matches specific domains.||*page$domain=targetdomain.com,cookie will be matched despite the pattern ||*page matches specific domains because it contains $cookie modifier./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. 限制 Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for Safari. Compatibility with different versions of AdGuard Starting with CoreLibs v1.12, the $domain modifier can be alternatively spelled as $from. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Compatibility with other modifiers $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility with different versions of AdGuard $to is available starting with CoreLibs v1.12. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org, from domain.com is a third-party request. To be considered as such, a third-party request should meet one of the following conditions: 1) Its referrer is not a subdomain of the target domain or the other way round. For example, a request to subdomain.example.org from example.org is not a third-party request. 2) Its Sec-Fetch-Site header is set to cross-site. If there is a $third-party modifier, the rule is only applied to third-party requests. Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. A third-party request example: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third-party. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied to domain.com, but not to the other domains. Example of a request that is not a third-party request: http://domain.com/icon.ico. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. It may not work if the popped up page is cached by the browser. It also will not work with some tricky popup methods. In such cases, it is better to use AdGuard Popup Blocker extension. Note Unlike with AdGuard Browser extension, $popup modifier is very unreliable when used with AdGuard for Windows, Mac and Android. In AdGuard for Safari and iOS, $popup rules will simply block the page right away. $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier &quot;:&quot; h_value part may be omitted. In that case the modifier matches the header name only. Compatibility with different versions of AdGuard Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. Examples ||example.com^$header=set-cookie:foo blocks requests which responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests which responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests which responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests which responses have a Set-Cookie header with any value. Restriction by content type​ $document$image$stylesheet$script$object$font$media$subdocument$ping$xmlhttprequest$websocket$other$object-subrequest (deprecated)$webrtc (deprecated) There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility with different versions of AdGuard There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser extension, content type for every request is provided by browser. AdGuard for Windows, Mac, Android use following method: first we try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Content type modifiers examples ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, and $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. @@||example.com^$document,~extension completely disables blocking on any pages at example.com and all subdomains, but continues to run userscripts there. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. Compatibility with different versions of AdGuard Blocking rules with $document modifier are not supported by AdGuard Content Blocker. $image​ The rule corresponds to images requests. $stylesheet​ The rule corresponds to CSS files requests. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility with different versions of AdGuard AdGuard for Windows, Mac, Android often cannot accurately detect navigator.sendBeacon(). For reliable detection, use AdGuard Browser extension. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). Compatibility with different versions of AdGuard AdGuard for Windows, Mac, Android often cannot accurately detect this type and sometimes detects it as $other or $script. For reliable detection, use AdGuard Browser extension. $websocket​ The rule applies only to WebSocket connections. Compatibility with different versions of AdGuard AdGuard for Safari and iOS cannot properly apply rules with websocket modifier due to Safari limitations. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $webrtc (deprecated)​ Deprecation notice This modifier is deprecated and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com for example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. $object-subrequest (deprecated)​ Deprecation notice $object-subrequest modifier is deprecated and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). Exception modifiers​ $elemhide$content$jsinject$urlblock$extension$stealth$specifichideGeneric rules $generichide$generichide Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with this article, for better understanding of how exception rules should be made. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. $content​ Disables HTML filtering and $replace rules on the pages that match the rule. Examples @@||example.com^$content disables all HTML filtering rules and replace rules on pages at example.com and all its subdomains. $jsinject​ Forbids adding of javascript code to the page. You can read about javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. $urlblock​ Disables blocking of all requests sent from the pages matching the rule. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. $extension​ Disables all userscripts on the pages matching this rule. Examples @@||example.com^$extension — userscripts will not work on all pages of the example.com website. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or not contain them at all. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Send Do-Not-Track header option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referrer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. Note Blocking cookies and removing tracking parameters is achieved by using rules with $cookie and $removeparam modifiers. Exception rules with only $stealth modifier will not do those things. If you want to completely disable all Stealth Mode features for a given domain, you need to include all three modifiers: @@||example.org^$stealth,removeparam,cookie Compatibility with different versions of AdGuard Stealth Mode is available in AdGuard for Windows, Mac, Android, and AdGuard Browser extension. All other products will ignore the rules with $stealth modifier.$stealth modifier with specific options is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. Note All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility with different versions of AdGuard Rules with $specifichide modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $generichide​ Disables all generic cosmetic rules on pages that correspond to exception rule. Examples @@||example.com^generichide — disables generic cosmetic rules on any pages at example.com and all subdomains. $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock — disables generic basic rules on any pages at example.com and all subdomains. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-capabilities","content":"$important$badfilter$replace$csp$all$inline-script$inline-font$cookie$network$app$redirect$redirect-rule$denyallow$removeparam$removeheader$hls$jsonprunenoop$empty (deprecated)$mp4 (deprecated) These modifiers are able to completely change the behaviour of basic rules. $important​ The $important modifier applied to a rule increases its priority over any other rule without $important modifier. Even over basic exception rules. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier it will prevail, so no requests will not be blocked ||example.org^$important @@||example.org^$important  ! if a document-level exception rule is applied to the document, the `$important` modifier will be ignored; ! so if a request to `example.org` is sent from the `test.org` domain, the blocking rule will not be applied despite it has the `$important` modifier ||example.org^$important @@||test.org^$document  $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifier.The rule does not have a negated domain ~ in $domain modifier value. In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility with different versions of AdGuard Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc).$replace rules do not apply if the size of the original response is more than 3MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp - (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Compatibility with different versions of AdGuard Rules with $replace modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. Restrictions Rules with $replace modifier can be used only in trusted filters. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, it will not block the matching request. The response headers are going to be modified instead. In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section below). Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. 限制 There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Compatibility with different versions of AdGuard Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, it will not block the matching request. The response headers are going to be modified instead. In order to use this type of rules, it is required to have the basic understanding of the Feature Policy security layer. For the requests matching a $permissions rule, AdGuard strengthens response's feature policy by adding additional feature policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section). Multiple rules matching a single request. In case if multiple $permissions rules match a single request, AdGuard will apply each of them. Syntax $permissions value syntax is similar to the Permissions-Policy (or Feature-Policy) header syntax. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. 限制 Two characters are forbidden in the $permissions value: , and $;$permissions is compatible with the limited list of modifiers: $domain, $important, and $subdocument. Examples ||example.org^$permissions=sync-xhr 'none' disallows synchronous XMLHttpRequest requests across example.org.@@||example.org/page/*$permissions=sync-xhr 'none' disables all rules with the $permissions modifier exactly matching sync-xhr 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permission=oversized-images 'none'; sync-script 'none'; unsized-media 'none'; disallows oversized images, synchronous scripts and unsized media features across example.org and example.com.@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. Compatibility with different versions of AdGuard Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. $all​ $all modifier is made of $document, $popup, $csp modifiers. E.g. rule ||example.org^$all is converting into such set of rules: ||example.org^$document,popup ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem: ||example.org^  $inline-script​ $inline-script modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-script is converting into such a rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ $inline-font modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-font is converting into such a rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes us suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in $cookie rules are not affected by regular exception rules (@@) unless it is a $document exception. In order to disable a $cookie rule, the exception rule should also have a $cookie modifier. How it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression 限制 $cookie rules support a limited list of modifiers: $domain, $~domain, $important, $third-party, $~third-party. Compatibility with different versions of AdGuard Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $network​ This is basically a Firewall-kind of rules allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, e.g. there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article, for better understanding of regular expressions. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $network modifier. $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile where some of the filtering rules must be application-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask, and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule, but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask, and are sent from any app save for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rules syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. $redirect rules' priority is higher than the regular basic blocking rules' priority. This means that if there is a basic blocking rule (even with $important modifier), $redirect rule will prevail over it. If there is an allowlist (@@) rule matching the same URL, it will disable redirecting as well (unless the $redirect rule is also marked as $important). Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Compatibility with different versions of AdGuard Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility with different versions of AdGuard Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Compatibility with different versions of AdGuard Rules with $denyallow modifier are not supported by AdGuard Content Blocker. $removeparam​ $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param — removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed to http://example.com/page?another=2. $removeparam basic syntax is supported starting with v1.7 of CoreLibs and v3.6 of AdGuard Browser Extension. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. $removeparam syntax for regular expressions will be supported starting with v1.8 of CoreLibs and v4.0 of AdGuard Browser Extension. For now, use the simplified version: $removeparam=param. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. Note Regexp-type rules target both name and value of the parameter. In order to minimize the chance of mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb: It is not an options delimiter if all three are true: 1. It looks like $/; 2. There is another slash character / to the left of it; 3. There is another unescaped dollar sign $ to the left of that slash character. Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source — removes utm_source query parameter from all requests. $removeparam=/utm_.*/ — removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ — removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. Compatibility with other modifiers $removeparam rules are compatible with basic modifiers, content type modifiers, and with $important and $app modifiers. The rules which have any other modifiers are considered invalid and will be discarded. Note $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Compatibility with different versions of AdGuard​ Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard browser extensions for Chrome, Firefox, Edge. POST request types are supported only by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. Restrictions Rules with $removeparam modifier can be used only in trusted filters. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. Multiple rules matching a single request In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and content type modifiers, e.g. $script, $stylesheet, etc. The rules which have any other modifiers are considered invalid and will be discarded. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains.||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests.Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Compatibility with different versions of AdGuard Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). Note The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. $hls rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $hls rules are only allowed in trusted filters.$hls rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules.$hls rules do not apply if the size of the original response is more than 3 MB. Note When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text lines.A line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URL.A URL line is called a &quot;segment&quot;.Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist. Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removed.When there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removed.Since there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rules.We do not match tags that apply to the whole playlist, and $hls rules can not be used to remove them, since $hls rules are intended for removing segments. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist. An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Compatibility with different versions of AdGuard Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac and Android, running CoreLibs version 1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supported.The supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key.?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value.?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object. Whitespace outside of double- or single-quoted strings has no meaning.Both double- and single-quoted strings can be used.Expressions ending with .. are not supported.Multiple array slices can be specified in square brackets. There are various online tools for testing JSONPath expressions, e.g. https://jsonpath.herokuapp.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations on this planet have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disable all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $jsonprune rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is more than 3 MB. Note When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Compatibility with different versions of AdGuard Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac and Android, running CoreLibs version 1.10 or later. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android, running CoreLibs version 1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility with different versions of AdGuard Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are converting into $redirect=nooptext now. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility with different versions of AdGuard Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are converting into $redirect=noopmp4-1s,media now. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility with different versions of AdGuard Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. Non-basic rules However, the capabilities of the basic rules may not be sufficient to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":"Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. Note Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with a class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with a class textad at all domains, except example.com and its subdomains. 限制 Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With this rules you can basically add any CSS styles to the page. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility with different versions of AdGuard CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rules syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"限制Pseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (deprecated) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility with different versions of AdGuard Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using a rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. Note Some pseudo-classes do not require selector before it. Still adding a universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. Note Rules with the :has() pseudo-class should use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Deprecation notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be missed for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): - disallow :has() inside the pseudos accepting only compound selectors; - disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope &gt; a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Compatibility with old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. Note The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be missed for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any on these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  Note Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Compatibility with old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be missed for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Restrictions Regexp patterns do not support flags. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Compatibility with other pseudo-classes Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Compatibility with old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows to select an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Restrictions Regexp patterns do not support flags. Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows to select an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). Note Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Restrictions Regexp patterns do not support flags. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers: To check properties of a specific element, do the following: 1. Inspect the page element or select it in Elements tab of browser DevTools. 2. Run console.dir($0) in Console tab. Pseudo-class :xpath()​ The :xpath() pseudo-class allows to select an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, a universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  Note Rules with the remove pseudo-property should use #$?# marker: $ for CSS style rules syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class should use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class should use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (deprecated)​ Deprecation notice The :if-not() pseudo-class is deprecated and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility with different versions of AdGuard HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. Syntax  rule = [domains] &quot;$$&quot; tagName [attributes] domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot;  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rules syntax.attributes — a list of attributes, that limit the elements selection. name — attribute name, value — substring, that is contained in attribute value. Examples HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. Special attributes In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You should use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Nested elements If we are dealing with multiple nested elements and they all fall within the same HTML filtering rule, they all are going to be deleted. wildcard This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You should use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It will check, if the code of element contains two consecutive substrings banner and text. max-length Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. For example: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. min-length Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. For example: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. Restrictions JavaScript rules can be used only in trusted filters. Compatibility with different versions of AdGuard JavaScript rules are not supported by AdGuard Content Blocker. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. Restrictions Trusted scriptlets rules can be used only in trusted filters. Note AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility with different versions of AdGuard Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. Note Trusted scriptlets are not compatible with other ad blockers except AdGuard Compatibility with different versions of AdGuard Trusted scriptlets rules are now supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10.141 or later. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#modifiers-for-non-basic-type-of-rules","content":"$app$domain$path$url Each rule can be modified using the modifiers described in the following paragraphs. Syntax rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values of the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. $app​ $app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility with different versions of AdGuard Such rules with $app modifier are supported by AdGuard for Windows, Mac and Android. $domain​ $domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with a class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. Please note that there are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be rejected. Compatibility with different versions of AdGuard Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. $path​ $path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with a class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with a class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with a class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with a class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with a class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility with different versions of AdGuard Rules with $path modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. url​ $url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/ads/*]##.textad hides a div with a class textad at addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility with different versions of AdGuard Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari Note Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the User Rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. When an adblocker encounters an !#if directive, followed eventually by an !#endif directive, it will compile the code inside of the directives block only if the specified condition is true. Condition supports all the basic logical operators. A conditional directive beginning with an !#if directive must explicitly be terminated with an !#endif directive. Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  where: !#if (conditions) — start of the blockconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Ad blocker authors define on their own what exact constants do they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser extension for Firefoxadguard_ext_edge — AdGuard Browser extension for Edge Legacyadguard_ext_opera — AdGuard Browser extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistry rules_list — list of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  Safari affinity​ Safari is notoriously known for its harsh 150k max limit for filtering rules in content blockers. But in AdGuard for Safari and AdGuard for iOS max rule count is raised to 300k by splitting them into several content blockers. Generally, several filters categories are more or less independent, so there is such content blockers with such categories included: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and Allowlist are added to every content blocker. The main issue with using multiple content blockers is that rules inside these content blockers cannot influence each other. This may lead to different unexpected issues. So filters maintainers may use !#safari_cb_affinity to define Safari content blockers affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_ff — AdGuard Browser extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  This rule will be available for every platform except AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows you will find it inside Ad Blocker tab or via the tray menu;In AdGuard for Mac it is under Settings &gt; Advanced &gt; Filtering log;In AdGuard for Android it is a separate item in the side menu, also filtering log for a specific app or website is accessible from the Assistant.In AdGuard Browser extension it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs. In AdGuard for iOS and in AdGuard for Safari Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements we removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Good luck with creating filters!​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#good-luck-with-creating-filters","content":"We wish you luck with creating you own ad filters. If you need an advice on how to create your own filters properly, our forum has a special section dedicated to writing your own filtering rules. "},{"title":"用户脚本","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Supported apps​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#supported-apps","content":"AdGuard can significantly broaden website functionality by acting as a userscript manager. You can add your custom scripts or manage the existing ones in our three products: AdGuard for Windows, AdGuard for Android and AdGuard for Mac. "},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. Remember: whenever you download a userscript from an unknown source, you expose yourself to risk, as some scripts may be harmful to your computer. Get new scripts only from the sources you trust 100%. Furthermore, here are some examples of popular sites with scripts. AdGuard Extra. An extension that blocks advertising in difficult cases when the usual filter-based approach is not enough. AdGuard Popup Blocker. The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. AdGuard Assistant (legacy version). This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). Note that this version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. But legacy Assistant might be of help if there is no Browser Assistant extension for your browser. Disable AMP. A script, pre-installed only in AdGuard for Android, that disables AMP (Accelerated Mobile Pages) on the Google search results page. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#more-userscripts","content":"As userscripts are created mainly by enthusiasts, you should be cautious when installing them. Yet, there is a great variety of interesting scripts that can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#development","content":""},{"title":"Request License​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta-license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ Note that all listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"用户脚本","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"恶意广告软件和病毒","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"免费的防病毒软件​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#free-antivirus","content":"实用程序不可枚举，您可以使用任何自己喜欢的，比如： Dr.Web CureIt! 如果防病毒实用程序的检查没有发现任何问题，但计算机仍然运行可疑。请您尝试对设备进行广告软件检测，查看计算机上是否有恶意广告软件。 "},{"title":"如何清除在系统上的恶意广告软件​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#adware","content":"在互联网上可以找到许多用于解决此问题的应用程序。 您可以使用任何自己喜欢的实用程序。 但我们强烈建议使用 Malwarebytes 的 AdwareCleaner、Avast 的 Avast One，或 Adaware。 这些广告软件扫描器非常易于使用，自行处理也一般不会遇到任何问题。 让我们以 AdwareCleaner 为例。 结束下载应用程序并成功安装后，请执行以下步骤： 1) 启动应用程序。单击立即扫描。  2) 扫描完成之后，您需要将可疑对象发送到隔离区。  3) 将选项被移至隔离区后，您将能够清除系统中不必要的选项。 4) 在某些情况下，清洁完成后，您可能需要重新启动系统。  5) 重新启动系统后，清洁就完成了。 如有必要，您可以阅读该软件的运行报告。  如果没有效果，请根据此说明暂时禁用浏览器中的所有扩展程序，以及其他一些设置。 如果禁用设置和扩展也无济于事，请您尝试重新创建浏览器的快捷键。 在此页接下来的内容中，我们会介绍如何删除一些最常见的广告附加信息。 "},{"title":"如何在浏览器中禁用设置和扩展​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#instructions","content":"以下是有关如何针对最流行的浏览器禁用设置和扩展的说明： Google Chrome 浏览器 火狐浏览器 Opera 浏览器 "},{"title":"如何为浏览器重新创建快捷键​","type":1,"pageTitle":"恶意广告软件和病毒","url":"guides/adware/#shortcuts","content":"恶意软件和广告软件程序通常以非常简单的方式安装其首页。它们替代浏览器的桌面快捷键，任务栏和开始菜单项。 在这种情况下，最简单的解决方式是手动删除所有快捷键，然后自己重新创建它们。 "},{"title":"代理证书安装","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"如何下载并安装证书​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#如何下载并安装证书","content":"根据您设备的类型 (Windows/Mac/Android/iOS)，请遵守以下说明中的一条： "},{"title":"Windows 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#windows","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 请确保 AdGuard 保护已启用。 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 在装有 AdGuard 的同一台设备上，通过浏览器打开此链接： http://local.adguard.org/cert 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 在该设备上，按 Win 按钮，输入 管理计算机证书 ，按 Enter。 在「证书」-「本地计算机」页面，找到「受信任根证书」→「证书」文件夹。 右键单击「证书」文件夹，并单击「所有任务」→「导入」。 在「证书导入向导」页面，单击「下一步」。 点击「浏览」，导入证书。 导航到 cert.cer 证书文件，选择它，然后点击「打开」。 单击「下一步」。 选择「将所有证书放置在以下存储区中」复选框。 确保「证书存储」字段显示「受信任的根证书颁发机构」，然后点击「下一步」。 单击「完成」。 按 Win 键，然后打开「设置」。 选择「网络&amp;Internet 」→「代理」。 关闭「自动检测设置」。 在「使用代理服务器」中，点击「设置」。 打开开关。 对于「代理 IP 地址」，输入在第一步记下的台式计算机的 IP 地址。 对于端口，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 单击「保存」。 "},{"title":"Mac 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#mac","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 请确保 AdGuard 保护已启用。 然后转到 「设置」→「网络」→「HTTP 代理」并选中「AdGuard 用作 HTTP 代理」复选框。 在装有 AdGuard 的同一台计算机上，通过浏览器打开此链接： http://local.adguard.org/cert 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 双击下载的证书文件。 输入管理员密码，然后点击「修改钥匙串」。 Go to Spotlight (the search icon in the top right corner), type in &quot;Keychain Access&quot;, and then select Keychain Access from the search results. 在「系统」中，突出显示您添加的证书。 右键单击它并从上下文菜单中选择「查看信息」。 展开「信任」以显示该证书的信任政策。 在「安全套接层（SSL）」，选择「始终信任」。 打开「系统偏好」→「网络」，选择上层活动连接。 点击「更多信息... ，并转到「代理」。 勾选两个复选框。「网络代理（HTTP）」和「安全网络代理（HTTPS）」。 在「代理」，请输入在第一步记下的您的计算机的 IP 地址。 在「端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"安卓系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#android","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 请确保 AdGuard 保护已启用。 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 在装有 AdGuard 的同一台计算机上，通过浏览器打开此链接： http://local.adguard.org/cert 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 找到并点击先前下载的 cert.cer 证书以打开文件。 在某些手机上，可能会要求您输入设备密码。 然后再按确定。 证书安装成功。 打开连接的 Wi-Fi 网络的高级设置。 将代理类型切换为手动。 对于「代理主机名」，请输入在第一步记下的 IP 地址。 对于「代理端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"iOS 系统​","type":1,"pageTitle":"代理证书安装","url":"guides/proxy-certificate/#ios","content":"记下装有 AdGuard 的台式计算机的 IP 地址。 请确保 AdGuard 保护已启用。 然后在设置的「网络」中勾选「将 AdGuard 用作 HTTP 代理」。 在装有 AdGuard 的同一台计算机上，通过浏览器打开此链接： http://local.adguard.org/cert 单击下载按钮。 将下载的 cert.cer 文件传输到您想通过 AdGuard 路由流量的设备 打开「设置」→「安全」→「加密&amp;凭证」→「安装证书」。 安卓设备默认不信任证书，所以当您选择「CA证书」，您会收到警告。 点击「继续安装」。 打开「设置」→「配置文件下载」，然后点击右上角的「安装」。 输入密码并确认安装。 点击完成。 转到「设置」→ 「常规」→ 「关于」→ 「证书信任设置」。 启用「Adguard Personal CA」旁边的开关。 证书安装成功。 在该设备上，打开连接的 Wi-Fi 网络的高级设置。 将代理类型切换为手动。 对于「代理主机名」，请输入在第一步记下的您的计算机的 IP 地址。 对于「代理端口」，输入在桌面 AdGuard 应用程序的网络设置中选择的端口。 "},{"title":"收集 HAR 文件的方式","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"创建 HAR 文件​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#har","content":"HAR 文件可帮助我们的技术支持团队解决复杂的问题。 为了创建这种文件，我们建议使用 Chrome 或火狐浏览器。 不过， IE 11、Edge 和 Safari 也支持 .har 文件的生成和导出功能。 "},{"title":"Chrome 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#chrome","content":"如要在 Chrome 中创建 HAR 文件请执行以下操作： 前往出现问题的 URL。 暂时不要重复导致问题的操作。 打开开发者工具： 从菜单中找到：「菜单」&gt;「更多工具」&gt;「开发者工具」。键盘：Ctrl + Shift + C，或 Ctrl + Alt + I，或⌥+⌘+ I（使用于 Mac）。 单击 「Network」（网络）标签。 找到 Network 标签中的左上角的圆形按钮，并确认它处于红色录音模式。 如果是灰色的，请您单击使其变为红色的，并开始录音。 使用「clear」（清除）按钮（记录按钮旁边带有一条线的圆圈按钮）以清除所有之前的活动。 选择 Network 标签中的「Preserve log」（保留日志）复选框。 勾选「Disable cache」（禁用缓存）复选框。  重复导致问题的步骤。 通过右键单击网格并选择「Save as HAR with content」（另存为带内容的 HAR），将内容另存为 .har 文件。 发送至 AdGuard 支持团队（support@adguard.com），并详细描述问题。 屏幕截图也会有所帮助。 "},{"title":"Edge 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#edge","content":"前往出现问题的 URL。 暂时不要重复导致问题的操作。 打开 Developer Tools（开发者工具）： 从菜单中找到：「菜单」&gt;「更多工具」&gt;「开发者工具」。键盘：Ctrl + Shift + C，或 Ctrl + Alt + I，或⌥+⌘+ I（使用于 Mac）。 单击 「Network」（网络）标签。 找到 Network 标签中的左上角的圆形按钮，并确认它处于红色录音模式。 如果是灰色的，请您单击使其变为红色的，并开始录音。 使用「clear」（清除）按钮（记录按钮旁边带有一条线的圆圈按钮）以清除所有之前的活动。 选择 Network 标签中的「Preserve log」（保留日志）复选框。 勾选「Disable cache」（禁用缓存）复选框。  重复导致问题的步骤。 通过右键单击网格并选择「Save as HAR with content」（另存为带内容的 HAR），将内容另存为 .har 文件。 发送至 AdGuard 支持团队（support@adguard.com），并详细描述问题。 屏幕截图也会有所帮助。 "},{"title":"Firefox 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#firefox","content":"如要在火狐浏览器中创建 HAR 文件请执行以下操作： 前往出现问题的 URL。 暂时不要重复导致问题的操作。 在「Network」（网络）模式下打开开发者工具： 从菜单中找到：「菜单」&gt;「Web 开发者」&gt;「网络」。键盘：Ctrl + Shift + C 或 ⌥+⌘+ E（使用于 Mac）。 注意：网络标签左上方的继续/暂停按钮。 按钮应处于继续记录模式。 如果当前在网格中显示任何信息，请单击继续/暂停按钮旁边的删除垃圾箱按钮进行清除。 选中网络标签上的「Persist Logs」（继续记录）复选框。 勾选「Disable cache」（禁用缓存）复选框。  重复导致问题的步骤。 通过右键单击网格并选择「Save as HAR」（另存为 HAR），将内容另存为 .har 文件。 发送至 AdGuard 支持团队（support@adguard.com），并详细描述问题。 屏幕截图也会有所帮助。 "},{"title":"Internet Explorer11 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#ie11","content":"要在 Internet Explorer 11 中创建 HAR 文件： 前往出现问题的 URL。 暂时不要重复导致问题的操作。 在「Network」（网络）模式下打开开发者工具： 从工具齿轮菜单中找到：「开发者工具」&gt;「网络」标签。键盘：F12 &gt; 「网络」标签 请注意网络标签左上方的开始分析会话「Play」（继续）按钮和停止分析的「Stop」（停止）按钮。 录音时继续按钮将变为灰色，停止按钮为红色。 置于「 Play」（继续）模式。 使用网络标签上的「Clear session」（清除会话）按钮以清除显示在下部网格中的所有会话信息。 将鼠标悬停在图标上可以查看名称。 「Clear session 」（清除会话）按钮是一个三行图标，上面带有一个「X」。 勾选「Disable cache」（禁用缓存）复选框。 重复导致问题的步骤。 单击网络标签上的「Save disk」（保存磁盘） 按钮（导出为 HAR）将会话内容另存为 .har 文件。 发送至 AdGuard 支持团队（support@adguard.com），并详细描述问题。 屏幕截图也会有所帮助。 "},{"title":"Safari 浏览器​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#safari","content":"如要在 Safari 中创建 HAR 文件请执行以下操作： 查看屏幕顶部的 Safari 菜单栏是否有「Develop」（开发）菜单。 选菜单栏中的「Show Develop menu in menu bar」（显示开发菜单）和底部的复选框。 如果没有，请转到 Safari &gt;「Preferences 」（首选项）&gt;「Advanced」（高级）将其启用。 前往出现问题的 URL。 暂时不要重复导致问题的操作。 在 Web Inspector（Web 检查器）中打开「Network」（网络）标签： 从菜单中找到：「开发」&gt;「显示 Web 检查器」&gt;「网络」。键盘：⌥+⌘+ I &gt; 网络 选网络标签右侧的「Preserve Log」（保留日志）复选框。 单击「Network」最右侧的「delete Trash」（删除垃圾箱）图标，清除当前的网络项目。 勾选「Disable cache」（禁用缓存）复选框。 重复导致问题的步骤。 单击「Preserve Log」旁边的「Export」（导出）图标，将会话内容另存为 .har 文件。 发送至 AdGuard 支持团队（support@adguard.com），并详细描述问题。 屏幕截图也会有所帮助。 "},{"title":"安卓系统​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#android","content":"要获取 HAR 文件，请执行以下步骤： 打开 AdGuard 并转到「设置」 在菜单中选择「高级」 选择「低级设置」 激活 pref.har.capture（您必须重新启动保护） 重试导致问题的操作：打开应用程序，执行必要的操作以使广告出现。 现在再次关闭 pref.har.capture。 返回，然后点击「导出日志和系统信息」→「保存」。 "},{"title":"Windows 系统​","type":1,"pageTitle":"收集 HAR 文件的方式","url":"guides/collect-har-file/#windows","content":"打开「设置」→「一般设置」→ 「高级设置」并向下滚动。 勾选「Enable HAR writing」（启用 HAR 写入）复选框。 重复导致问题的步骤。 前往「General settings」（常规设置）→ 点击「Export logs」（导出日志）→「Save」（保存）。 通过取消勾选相应的方框禁止 HAR 写入。 "},{"title":"报告网站","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"报告网站​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#report","content":"注意：当您通过应用或AdGuard 浏览器助手发送投诉时，所有信息都会自动填写。 除了屏幕截图，您还必须自己制作并附加它们。 如果您使用的是此链接，则需要手动输入数据。 要报告广告已重新插入或网站显示不正确，您需要： "},{"title":"浏览器扩展​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#extension","content":"点击相应图标打开浏览器扩展设置；点击报告问题：  填写举报表格后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"Windows 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#windows","content":"打开 AdGuard 浏览器助手，点击「报告问题」：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"安卓系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#android","content":"打开 AdGuard 设置；选择「支持」，然后点击「发送反馈」 → 「漏拦截的广告或跟踪器」/「拦截错误」：  填写举报表格后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"Mac 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#mac","content":"打开 AdGuard 浏览器助手，点击「报告问题」：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"iOS 系统​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#ios","content":"打开 AdGuard 设置；选择支持，然后点击报告错误拦截：  填写举报表格；完成后，将自动在 GitHub 上创建一个问题。 也将有一个链接让用户监视解决问题的进度。 "},{"title":"填写表格​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#form","content":"注意：当您通过应用或 AdGuard 助手发送投诉时，所有信息都会自动填写。 除了屏幕截图，您还必须自己制作并附加它们。 如果您使用的是此链接，则需要手动输入数据。 填写表格始于详细说明软件的类型和版本；  指定问题的类型以及有关使用第三方软件（防病毒，VPN）的其他信息；  输入您遇到问题的页面的地址和您使用的浏览器（如果是应用程序，则输入下载链接）；  必须指定应用程序配置： 您使用的过滤器；隐身模式设置（如果启用了此功能）。  提供屏幕截图捕获了问题的实质； 重要：隐藏您的个人信息（电子邮件，电话号码等），因为屏幕截图将公开显示。  提供额外的信息，以帮助过滤器开发人员了解情况； 此外，如果有的话，请输入您的 GitHub 账户（这对开发者来说是必要的，因为他们需要一些额外的细节，才能联系您）。  在发送表格之前检查每一步；  将为您提供一个链接，以跟踪您的任务进度。  "},{"title":"问题诊断​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#issue","content":"此选项适用于那些不怕困难并且不介意自行寻找问题的人。 这不需要任何特殊技能或对 HTML 和 CSS 的深入了解。 例如，您可能遇到无法打开您喜欢的网站，授权被破坏或某些页面元素显示不正确的情况。 原因可能是使用特定的过滤器/扩展/隐身模式设置。 要诊断这些问题，您需要执行以下操作： "},{"title":"过滤器​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#过滤器","content":"禁用广告拦截程序；如果解决了问题，请重新启用模块并逐个禁用过滤器。 这样做是为了识别“破坏”页面的过滤器。如果您设法找出哪个过滤器“破坏了”页面，则在填写表格时应通知开发人员（请参见上文）。 在这种情况下，希望返回到初始设置；如果关闭所有过滤器均未产生任何结果，则应用规则 @@||example.com^$document,extension； 其中 example.com 是一个示例网站名称，需要用您自己的选项替换；如果发生故障（问题未解决），请转到「隐身模式」一节。 "},{"title":"隐身模式​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#隐身模式","content":"禁用隐身模式；如果这解决了问题，请依次打开模块并关闭「隐身模式」选项。 这样做是为了检测哪些设置正在“破坏”页面；如果您设法检测到哪个设置“破坏了”页面，则应在填写表单时通知开发人员（请参见上文）。 在这种情况下，希望返回到初始设置；如果出现故障（问题未解决），请转到「扩展」一节。 "},{"title":"浏览器扩展​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#浏览器扩展","content":"禁用扩展；如果这解决了问题，请打开模块并逐个关闭扩展设置。 这样做是为了找出哪个设置“破坏了”页面；如果您设法检测到哪个设置会“破坏”页面，请在填写表单时通知开发人员（请参见上文）。 在这种情况下，希望返回到初始设置。 "},{"title":"第三方拦截器​","type":1,"pageTitle":"报告网站","url":"guides/report-website/#第三方拦截器","content":"某些浏览器和防病毒程序（例如 Yandex 浏览器，卡巴斯基等）具有内置的广告拦截器。 它们可能会影响站点的运行并引起问题。 如果您使用此类程序，请确保问题出在 AdGuard 一边：禁用 AdGuard 过滤，然后尝试重复该问题。 如果仍然存在，则表示问题是由其他应用程序或浏览器引起的。 如果问题是由 AdGuard 引起的，请按照前面段落中描述的步骤进行操作。 "},{"title":"How to report bugs","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"Before you start​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#before-you-start","content":""},{"title":"When to report bugs​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#when-to-report-bugs","content":"Check that you have the most up-to-date version, and if not, upgrade: the bug might have already been resolved in the new version. Check if the bug hasn’t been reported before. We advise paying attention to both open and closed issues.  "},{"title":"How to describe a problem​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#how-to-describe-a-problem","content":"Try to provide as many details as possible — that'll make it easier for us to reproduce the bug and figure out how to fix it. Here’s what we’re expecting to see in a bug report: Your app versionYour OS versionWhen you noticed the problemWhat you were doing or what happened to the app before you noticed the problem. Steps to reproduce itWhether it recurred and with what frequencyWhether you have a VPN or an antivirus software "},{"title":"How to collect logs​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#how-to-collect-logs","content":"Read about collecting logs in dedicated articles for each platform. "},{"title":"How to vote for bug reports or feature requests​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#how-to-vote-for-bug-reports-or-feature-requests","content":"If you want to support the implementation of a new feature or bugfix, you can vote for it on GitHub. To vote, just react with some emoji.   You can find reactions in the upper right corner or at the bottom of an issue. "},{"title":"Instructions for all platforms​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#instructions-for-all-platforms","content":""},{"title":"AdGuard Windows版​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-windows版","content":"Check out the Windows repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues and select Bug report. Fill out the form. If possible, attach screenshots or a screen recording.  "},{"title":"AdGuard Mac版​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-mac版","content":"Check out the Mac repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues. Fill out the form. If possible, attach screenshots or a screen recording. "},{"title":"AdGuard Android版​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-android版","content":"Check out the Android repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues and select Bug report. Fill out the form. If possible, attach screenshots or a screen recording. "},{"title":"AdGuard iOS版​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-ios版","content":"Check out the iOS repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues, select Bug report. Fill out the form. If possible, attach screenshots or a screen recording. "},{"title":"AdGuard Browser Extension​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-browser-extension","content":"Check out the Browser Extension repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues and select Bug report. Fill out the form. If possible, attach screenshots or a screen recording. "},{"title":"AdGuard Safari版​","type":1,"pageTitle":"How to report bugs","url":"guides/report-bugs/#adguard-safari版","content":"Check out the Safari repo to make sure the issue hasn’t been reported yet. Open a page for creating new issues and select Bug report. Fill out the form. If possible, attach screenshots or a screen recording. "},{"title":"如何截取屏幕截图","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"安卓系统​","type":1,"pageTitle":"如何截取屏幕截图","url":"guides/take-screenshot/#android","content":"有多种方式可以在安卓设备上截屏，具体取决于设备型号及其制造商。 一般来说，您应该在安卓系统使用以下按钮组合： 同时按住音量和电源键按钮 1-2 秒 您的安卓设备将捕获整个屏幕并将其保存为照片。 您可以在「相册」的「截屏」文件夹中找到该屏幕快照。 但是，正如上述所言，在一些特定的设备上可能会存在差异。 让我们来看看其他可能的组合： 同时按住主页和电源键 1-2 秒；同时按住返回和主页按钮 在安卓 8 及更高级版本上，也可以通过将手沿手机的左侧或右侧垂直放置。然后用手触摸屏幕从该边缘向内滑动来拍摄屏幕截图（三星设备），或者您也可以用三个手指向下滑动（OnePlus 设备）等等。 在设备的设置中了解其他的截图方式。 此外，您可以使用任何特殊的应用程序在设备上拍摄屏幕截图，例如，轻松截屏、终极截图、Screenshot Snap 等。 "},{"title":"iOS 系统​","type":1,"pageTitle":"如何截取屏幕截图","url":"guides/take-screenshot/#ios","content":"任何 iOS 设备（旧的设备除外）都可让您使用标准工具截屏。 要在 iOS 设备上截图，请使用以下组合： 同时按下睡眠/唤醒（侧）按钮和主页按钮，然后快速松开它们 而下面的方法适用于 iPhone X 或更高版本： 同时按下睡眠/唤醒按钮和增大音量按钮，然后迅速松开它们 您的 iOS 设备将捕获整个屏幕，并将其另存为照片。 您可以在照片应用中找到它。 "},{"title":"Windows 系统​","type":1,"pageTitle":"如何截取屏幕截图","url":"guides/take-screenshot/#windows","content":"要在 Windows 上截图，请按 PrtScn 按钮 在某些笔记本电脑上，您要按住 Fn，然后再按 PrtScn。 请注意，各种键盘上的 PrtScn（打印屏幕）存在不同的缩写方式，比如 PrntScrn，PrtScn，PrtScr 或 PrtSc 等。 Windows 捕获整个屏幕并将其复制到剪贴板。 要获取活动窗口的屏幕截图，请使用以下组合： 同时按住 Alt 和 PrtScn (或在某些笔记本电脑上按 Fn + Alt + PrtScn ) 要截取特定区域的屏幕快照，应使用以下组合： 按住 Win（Windows 按钮）和 Shift，然后按 S** 截屏后，它将保存在剪贴板中。 在大多数情况下，您可以使用 Ctrl + V 按钮组合将其粘贴到当前正在编辑的文档中。 另外，如果您需要将屏幕截图保存到文件中，则应打开标准的 Paint 程序（或任何其他可以处理图像的应用程序）。 使用相同的按钮组合或单击「粘贴」按钮（通常在屏幕的左上角）将您的屏幕截图粘贴到那里，然后将其保存。 Windows 8 和 10 使您可以通过 Win + PrtScn 组合快速捕获屏幕截图。 按下这些按钮后，屏幕快照将自动作为文件保存到图片 → 屏幕截图文件夹中。 还有一个专用的屏幕截图程序，称为 Snipping Tool (自带截图工具) ，可通过开始菜单在计算机的标准程序中找到。 该截图工具使您可以捕获桌面的任何区域或整个屏幕。 使用此程序拍摄屏幕快照后，您可以编辑图片并将其保存到计算机上的任何文件夹中。 此外，您还可以尝试使用其他应用在计算机上截图，例如 PicPick、Nimbus Screenshot、Screenshot Captor、Snipaste、Monosnap 等。 "},{"title":"macOS 系统​","type":1,"pageTitle":"如何截取屏幕截图","url":"guides/take-screenshot/#mac","content":"要在 Mac 上截图，请使用以下按钮组合： 同时按住 ⌘Cmd + Shift + 3** Mac 会捕获整个屏幕，并将其另存为在桌面上的文件。 要获取活动窗口的屏幕截图，请使用以下组合： 同时按住 ⌘Cmd + Shift + 4 + 空格键。 指针将变为相机图标。 单击窗口以捕获它。 按 Esc 按钮取消截屏 要截取特定区域的屏幕快照，应使用以下组合： 同时按住 ⌘Cmd + Shift + 4**。 拖动十字准线以选择所需的区域。 释放鼠标或触控板以截取屏幕截图。然后按 Esc 按钮将其取消。 要获取 Touch Bar（MacBook Pro）的截图，请使用以下组合： 按住 ⌘Cmd + Shift + 6** 您的 Mac 会捕获整个 Touch Bar，并在桌面上另存为文件。 若您想将屏幕截图复制到剪贴板而不是保存到剪贴板，请同时按住 Ctrl 和上面的任意组合。 然后，您可以使用 Cmd + V 组合将屏幕截图（来自剪贴板）粘贴到当前正在编辑的文档或图像中。 您还可以通过使用预览并选择截图（获取所选区域，窗口或整个屏幕的）来截屏。 使用预览时，您可以将屏幕截图保存为 JPG、TIFF、PDF 等文件格式。 "},{"title":"AdGuard beta testing","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"How to become a beta tester​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#intro","content":"Our requirements are easy: use AdGuard, upgrade to the beta version when it becomes available, and report any bugs you notice. However, you will need either a forum or a GitHub account (or both) to become our beta tester, so you may want to get that out of the way first. In any case, every single thing you need to know is gathered on a dedicated page. If you want to skip the description part and get straight to the action, you can apply here. Your application will be reviewed within 1-3 working days, and you'll get a reply via email. "},{"title":"How to report a bug​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"If you spotted a bug or just want to share your suggestion, let us know in any of the possible ways: Go to forum.adguard.com and post there a new thread (or find an existing one) in the beta forum category. Make sure to read forum rules; Go to GitHub and find a suitable repository. Create a new issue there and describe the bug/feature request in detail. The above two methods are the most preferred, but you can use others if necessary: Find us on various social media platforms, like Facebook, Reddit, etc. However, this is not the most convenient way to discuss technical matters. Email our support team from the Support tab in the app or write directly to support@adguard.com. "},{"title":"How to activate the beta key in the iOS application​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#ios","content":"If you have already received a beta key and it is listed in your adguard.com account, go to the app and open the license section (Get Premium). Once there, enter the credentials from your AdGuard account. After that, the premium features will become available automatically. "},{"title":"What else?​","type":1,"pageTitle":"AdGuard beta testing","url":"miscellaneous/contribute/beta-testing/#what-else","content":"There is not much more to add. You don't have to go out of your way to find bugs. You can continue using AdGuard as usual. However, if you encounter a bug, please report it. Of course, we appreciate any additional effort and/or extra forum activity, etc. Occasionally, you will receive our newsletters, keeping you informed of the latest changes in the beta (in case you missed them) and other important news. You can unsubscribe from it at any time. "},{"title":"致谢","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"第三方软件​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#software","content":"帮我们开发 AdGuard 软件的文库、开源软件和其他资源的列表： "},{"title":"AdGuard Windows版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#win","content":"SQLLite 数据库引擎： https://sqlite.orgSQLite 的 ADO.NET 提供程序： https://system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — .NET 的高性能 JSON 框架： https://www.newtonsoft.com/jsonAvalonEdit — 基于 WPF 的文本编辑器组件： https://avalonedit.net "},{"title":"AdGuard Mac版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#mac","content":"用于 RSVerticallyCenteredTextFieldCell 组件的 Red Sweater Software, LLC： http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo 用于 ITProgressIndicator 组件： https://github.com/iluuu1994/ITProgressIndicatorSparkle.framework 组件的 Sparkle 项目： http://sparkle-project.orgGCDAsyncSocket 组件的 Robbie Hanson： https://github.com/robbiehanson/CocoaAsyncSocket可达性组件的 Tony Million： https://github.com/tonymillion/ReachabilityAugust «Gus» Mueller 用于 Fmdb 组件： https://github.com/ccgus/fmdbSFBCrashReporter 项目的 Stephen F. Booth： https://github.com/sbooth/SFBCrashReporter用于 Acextract 组件的 Bartosz Janda： https://github.com/bartoszj/acextractFLOPageViewController： https://github.com/floschliep/FLOPageViewController "},{"title":"AdGuard 安卓版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#android","content":"Tony19 的 Logback-android： https://tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoStericson 的 RootTools 库： https://github.com/Stericson/RootToolsSupratim Chakraborty 的 MaterialDateRangePicker： https://github.com/borax12/MaterialDateRangePickerLeszek Wach 的 HelloCharts： https://github.com/lecho/hellocharts-android "},{"title":"AdGuard iOS版​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#ios","content":"Tony Million 的可达性组件： https://github.com/tonymillion/ReachabilityAugust &quot;Gus&quot; Mueller 的 Fmdb 组件： https://github.com/ccgus/fmdbNate Weaver 的 NSStringPunycodeAdditions 组件： https://github.com/Wevah/Punycode-CocoaNathan Moinvaziri 的 Minizip-ng 库： https://github.com/zlib-ng/minizip-ngBrandon Withrow 的 Lottie for iOS 库： https://github.com/airbnb/lottie-ios "},{"title":"AdGuard 广告拦截扩展​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#extension","content":"moment: https://github.com/moment/momentsimply-deferred: https://github.com/sudhirj/simply-deferredSHA256: https://github.com/AndersLindman/SHA256D3: https://github.com/d3/d3c3: https://github.com/c3js/c3nanobar: https://github.com/jacoborus/nanobarcrypto-js: https://github.com/brix/crypto-jsace: https://github.com/ajaxorg/ace "},{"title":"适用于 Safari 的 AdGuard 应用​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#safari","content":"ace: https://github.com/ajaxorg/aceadm-zip: https://github.com/cthackers/adm-zipconfig: https://github.com/lorenwest/node-configelectron-debug: https://github.com/sindresorhus/electron-debugelectron-log: https://github.com/megahertz/electron-logelectron-remote: https://github.com/electron-userland/electron-remoteelectron-simple-updater: https://github.com/megahertz/electron-simple-updaterelectron-store: https://github.com/sindresorhus/electron-storeelectron-updater: https://github.com/electron-userland/electron-builderi18n: https://github.com/mashpie/i18n-noderequest-promise: https://github.com/request/request-promisexmlhttprequest: https://github.com/driverdan/node-XMLHttpRequestaxios: https://github.com/axios/axiosdevtron: https://github.com/electron-userland/devtronelectron: https://github.com/electron/electronelectron-osx-sign: https://github.com/electron/electron-osx-signelectron-rebuild: https://github.com/electron/electron-rebuildfind-in-files: https://github.com/kaesetoast/find-in-filesgulp: https://github.com/gulpjs/gulpgulp-hash-creator: https://github.com/wahaha2012/gulp-hash-creatorrequest: https://github.com/request/requestrequire-dir: https://github.com/aseemk/requireDir "},{"title":"AdGuard 浏览器助手​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#assistant","content":"React：https://github.com/facebook/react/webextension-polyfill: https://github.com/mozilla/webextension-polyfillreact-intl: https://github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: https://github.com/mobxjs/mobxmobx-react: https://github.com/mobxjs/mobx-reactlodash: https://github.com/lodash/lodashnanoid: https://github.com/ai/nanoidreact-modal: https://github.com/reactjs/react-modalclassnames: https://github.com/JedWatson/classnamesbabel: https://github.com/babel/babelaxios: https://github.com/axios/axioscrx: https://github.com/oncletom/crxeslint: https://github.com/eslint/eslintjest: https://github.com/facebook/jestpostcss: https://github.com/postcss/postcssweb-ext: https://github.com/mozilla/web-extwebpack: https://github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: https://github.com/google/boringssl/blob/master/LICENSEbrotli: https://github.com/google/brotli/blob/master/LICENSEChromium: https://github.com/chromium/chromium/blob/master/LICENSEDetours: https://github.com/microsoft/Detours/blob/master/LICENSEeDistantObject: https://github.com/google/eDistantObject/blob/master/LICENSESimon Zolin 的 FF/FFOS libs: https://github.com/stsaz/ff/blob/master/READMEGoogle test: https://github.com/google/googletest/blob/master/LICENSEhttp-parser: https://github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: https://github.com/zserge/jsmn/blob/master/LICENSEklib: https://github.com/attractivechaos/klib/blob/master/khash.hlibevent: https://github.com/libevent/libevent/blob/master/LICENSELibreSSL: https://github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: https://lwip.wikia.com/wiki/Licenseminiz: https://github.com/richgel999/miniz/blob/master/LICENSEnghttp2: https://github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: https://www.pcre.org/licence.txtSQLite: https://www.sqlite.org/copyright.htmlzlib: https://zlib.net/zlib_license.html "},{"title":"特别感谢​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#testers","content":"热烈感谢所有 beta 测试人员和其他参与的用户，TA 们在查找/解决所有错误、翻译 AdGuard 和管理我们的社区方面的帮助是无价的。 特别感谢： ag_bug_finder — Windows版 AdGuard 的测试者Aikatsui — AdGuard Home 的积极贡献者Andy Kleinert (AndyKl) — Crowdin 的德语翻译和 ProofreaderBigDargon — 将 hostsVN 项目作为一个来源贡献给了 AdGuard DNS 列表Blaz — 最初是过滤器贡献者，现在在 AdGuard 工作Boo Berry — 论坛和 Telegram 群版主buuuuuuu190 — beta 测试员，活跃的 AdGuard 论坛成员clarke — beta 测试员，活跃的 AdGuard 论坛成员dartrax — beta 测试员，活跃的 AdGuard 论坛成员dja2k — beta 测试员，活跃的 AdGuard 论坛成员Eduardo Addad de Oliveira (eduardoaddad) — 在 Crowdin 上葡萄牙语和巴西葡萄牙语的翻译和审核员fabjazz — beta 测试员，活跃的 AdGuard 论坛成员Görkem Emrah Güler (gork7777) — Crowdin 的土耳其语翻译和审核员hanschke — beta 测试员，活跃的 AdGuard 论坛成员iDjay — AdGuard iOS版的优秀 beta 测试人员Imre Kristoffer Eilertsen (DandelionSprout) — 包含在所有 AdGuard 工具中的 &quot;Dandelion Sprout’s Nordic Filters&quot; 的创造者IONIL — Crowdin 上的希伯来语翻译和审核员itabmedia — beta 测试员，活跃的 AdGuard 论坛成员kirasam — beta 测试员，活跃的 AdGuard 论坛成员krystian3w — 非常活跃的过滤器贡献者lancelot.moon — Crowdin 繁体中文的翻译和审核员，beta 测试员Lord Ami — beta 测试员，活跃的 AdGuard 论坛成员Lukas Novotny (novas78) — translator and proofreader to Czech in Crowdinmalware1 — beta 测试员，活跃的 AdGuard 论坛成员milder — beta 测试员，活跃的 AdGuard 论坛成员Nicos18 — beta 测试员，活跃的 AdGuard 论坛成员Oizaro — Crowdin 的意大利语翻译和审核员Oleg Chashko — AdGuard Safari版的非常活跃 beta 测试人员Oskari Lavinto (olavinto) — Crowdin 的芬兰语翻译和审核员ouzbed — beta 测试员，活跃的 AdGuard 论坛成员PentagramTr — 过滤器贡献者，即他为土耳其过滤器带来了很多改进Peter Hubinsky (hubak) — Crowdin 的斯洛伐克语翻译和审核员PiQuark6046 — 过滤器贡献者rickyoh — beta 测试员，活跃的 AdGuard 论坛成员Ronin427 — beta 测试员，活跃的 AdGuard 论坛成员Sanjay Nand — beta 测试员，活跃的 AdGuard 论坛成员saturnotaku — beta 测试员，活跃的 AdGuard 论坛成员steve1209 — beta 测试员，活跃的 AdGuard 论坛成员streetwolf — beta 测试员，活跃的 AdGuard 论坛成员superlex — 帮助我们测试 Safari 的小脚本、过滤器和 AdGuardTayTayTheKiller — beta 测试员，活跃的 AdGuard 论坛成员TPS — 错误测试者、过滤器贡献者Yuki2718 — 积极为 AdGuard 过滤器做出贡献zznosar — 活跃的 beta 测试人员，专注于 iOS 的 AdGuardSergey Zozulya (sviperz) — 我们 Telegram 群的活跃成员，beta 测试员  除此之外，我们想感谢 xda-developers 的用户。 非常感谢您向我们发送反馈意见！ 我们总是很感谢收到用户的反馈意见，特别是建设性的。 大家能随时随地与我们联系，请求改善 AdGuard、新增功能，以及提交错误报告。 加入我们的 AdGuard 论坛、Subreddit、Xda-developers Forum 或访问我们的 GitHub。 "},{"title":"对 AdGuard 过滤器做出贡献","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"过滤规则​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#filtering-rules","content":"可能众所周知，AdGuard 使用过滤规则拦截广告。这些规则被组合成不同主题的拦截过滤器，例如，AdGuard 基础过滤器，移动广告过滤器等等。本知识库的文章内容包括更多关于，如何拦截广告的信息。 许多网站会不断更改插入广告的方式。为了过滤器保持有效，我们要持续更新过滤器以及添加新规则。 过滤器工程师一直都在努力创建新规则，但是我们也非常愿意接受一些外界的帮助。 "},{"title":"如何开始​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#how-to-start","content":"当然，改进并创建拦截过滤器需要有特定的技能。 如果您已经了解如何创建规则，请直接访问我们在 GitHub 上的 AdGuard 过滤器存储库。 在那里，您可发现很多待解决的问题。每个问题都涉及某个网站上的问题，包括广告漏洞，错误报告等等。 选择任何一个问题并在注释中建议您个人的规则， AdGuard 过滤器工程师将审核您的建议。 如果正确，则您的规则会被添加到 AdGuard 过滤器中。 如果您还不太熟悉或者需要复习我们的过滤规则语法，则可以在我们的知识库中找到有关语法的基础知识。 当然，在网上还可以找到更多高级指南。如果有任何疑问，请您访问我们的论坛。 "},{"title":"奖励​","type":1,"pageTitle":"对 AdGuard 过滤器做出贡献","url":"miscellaneous/contribute/filters/#rewards","content":"假设您已经提出了一些过滤规则，且其中一些还被批准通过了，您可以获取奖励了。 使用您的 GitHub 账号向 st@adguard.com 上给我们发送消息，即可获取免费的 AdGuard 许可密钥。 我们并没有硬性规定，至少需要获得多少个规则批准才能获得免费许可。 不过考虑到这个任务的难度系数，大约五个被批准的规则就足够了。 "},{"title":"如何成为翻译员/审核员","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"如何成为审核员​","type":1,"pageTitle":"如何成为翻译员/审核员","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"每一个语言都有审核员（Proofreaders），之前叫版主（Moderator）。 每个活跃的翻译人员都可以成为一名审核员。 TA 们负责什么？ 审核员： 审核并留下高质量的翻译，拒绝不好的翻译； 注意翻译的关联性； 参加注释中的讨论。 每年最优秀的审核员都会收到 AdGuard 的礼物。 积极的翻译者也不会没有回报。 阅读更多关于我们的奖励机制。 "},{"title":"复数形式","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"复数形式是什么意思？​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"不同语言的名词可以有几种复数形式。 它们的用法取决于单词前面的特定数字，以指示该单词表示的数目。 例如，当谈论不同数量时，英语单词有两种单词形式。例如 'one star' 或 'two stars'。 无论您说的是五颗星，二十六颗星还是五百三十二颗星，结尾 's' 都将保持不变。 但是有些语言只有一种形式，反之，有些语言也可以有更多种复数形式。 与英语相比，波兰语里的名词具有三种复数形式。 在说单数形式时使用一种形式，复数形式时以 2-4 数字为结尾的名词（不包括 12-14）使用另一种形式。但还有第三种形式，前面带有其他数字的单词。 我们来看看这张图片。 在这里，可以看到一组数字。按这些数字要选择数字后面的单词形式。  在此处查找其他示例。 我们来在英语和波兰语之间做个小比较，以便更好理解：  英文版： 波兰语等效： 1. 形式 - It takes one hour. 1. 形式 - Zajmuje to godzinę. 2. 形式 - It takes two hours. 2. 形式 - Zajmuje to dwie godziny. 3. 形式 - It takes five hours. 3. 形式 - Zajmuje to pięć godzin.  现在很明显的是，波兰语 'godzinę'（小时）具有三种不同的形式，而英语单词仅更改两次单词形式。 除波兰语之外，世界上还有许多其他具有三种复数形式的语言，包括俄语，塞尔维亚语，斯洛伐克语，捷克语等语言。 但并非所有语言都遵循相同语法规则。 这就是了解您的语言包含多少种复数形式以及如何应用它们如此重要的原因。 "},{"title":"在哪里可以了解复数形式的变体数量？​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"当您需要使用复数形式的翻译时，您很可能无法立即意识到某些语言的单词形式的数量。 以下是您可以使用的一些信息来源。 本地化指南 包含广泛的语言列表。 不同语言复数形式的数量以这种方式显示： 'nplurals=2', 'nplurals=4' ，依此类推。 '=' 等号后的数字表示相应语言的形式数量。 此外，您还可以在 Unicode 通用语言环境数据存储库（CLDR）中获取有关复数形式的相关信息。 CLDR 复数规则，即指十进制数字（1.5; 2.3; 100.1…）的其他词形式。但在 AdGuard 翻译中我们不使用它们。 "},{"title":"AdGuard 翻译中的复数形式​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"首先，您得明白并非每个 AdGuard 译文都需要使用复数形式。 当前，我们在 Crowdin 上有四种使用复数形式字符串的类型。 我们来仔细看看它们。 "},{"title":"1. 带有 .singular、.dual、.plural 作为结尾的字符串键的短语​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" 其中大多数属于 AdGuard for Windows 项目中，仅包含一两个单词： days；extensions；hours 请注意字符串键，在 &quot;Context&quot; 字段中您会看到一些关于复数形式的重要注解。 字符串键可能包含 Singular、 Dual、 Plural 单词（例如FormatDayDeclensionDual）。 在这种情况下，您应该保留键中指定的适当复数形式。 "},{"title":"2. 单数和复数名词字符串以逗号分隔​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"这种字符串主要在 AdGuard for Android 项目中。 请看示例：  如果您的语言名词具有三种复数形式（正如波兰语)，请用逗号分隔每一个复数形式。 hour, hours — godzinę, godziny, godzin 如果一个名词只有两种形式，则无需重复写同一形式（通常仅适用于这种带有复数形式的字符串！）。 但是，如果您把同一个形式重写两次也不会出错。 "},{"title":"3. 使用 Crowdin 发展模式的字符串​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"这是进行复数字符串翻译的最佳用户友好的方案。 Crowdin 为用户提供翻译一定数量具有不同复数形式的短语的功能。 如果您的语言仅有一种复数形式，则您只会看到一个要翻译的短语。 如果语言具有三种形式，Crowdin 将为您提供被分出另外两到三部分的字符串进行翻译。 例如：  在翻译和批准这些字符串时，请注意一下， 如果您不知道 “Other” 字段的含义，则只需粘贴与 “ Many” 字段中相同的表单即可。 “Many” 和 “Other” 字段的内容可以相同。 "},{"title":"4. 带有用竖线分隔模板的字符串​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"这是最复杂的 AdGuard 字符串类型，通常在 AdGuard Websites 项目中使用。 请密切注意句子与原始短语中的 %count% 占位符之间的竖线符号。这将帮助您识别需要使用复数形式短语的翻译。  现在，我们来想象一下。您将面临这样的短语：&quot;Standard license for %count% computer | Standard license for %count% computers&quot;。 您应该知道哪些信息才能正确翻译它？ 这些用竖线符号的句子称为“ templates”，因为它们被用作具有不同数字的短语的模板。 回到示例，由于英语仅包含两种复数形式，因此应分别有两个模板： Standard license for *%count%* computer | Standard license for *%count%* computers 其中模板 （template）1 – ％count％ 台计算机（computer）的标准许可， 和模板（template）2 – ％count％ 台计算机（computers）的标准许可 您应注意的另一重要事项是 ％count％ 占位符，通常在其定义的单词前出现。 根据选择的模板，此处将显示不同的数字，而不是 ％count％ 。 在另一种语言具有三种复数形式的情况下，应该有三个模板，即两个竖线符号。 例如，当我们将上面提到的短语翻译成斯洛伐克语时，根据 Localization Guide 的规则，它具有三种词形，正确的翻译应该是这样的： **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  在这种情况下，我们看到三个模板，其中包含斯洛伐克语中单词 &quot;počítač&quot; （计算机）的三种形式。 如果我们忽略其中一种形式，而只为斯洛伐克语使用两个，而不是三个模板，则系统将无法为某些数字采用适当的模板。结果是，句子中将出现语法错误，例如英语：Standard license for 5 computer（正确应是：Standard license for 5 computers）。 即使单词本身的单词形式较少，也要始终使用尽可能多的形式。 例如，塞尔维亚单词 'računar'（计算机（computer））只有两种形式。 但是塞尔维亚语有 3 种复数形式。  因此，英语翻译成塞尔维亚语是： **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** 尽管很明显，最后两个模板没有区别，但保持规则非常重要：模板的数量应反映相应语言的复数形式 (通常针对这种带复数的字符串)。 "},{"title":"简短的摘要​","type":1,"pageTitle":"复数形式","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"在翻译 AdGuard 项目时，请密切注意需要使用复数形式的短语。 尽管前三种类型的字符串或多或少容易执行，但第四类要求更高的警惕性。 重申一次：如果您遇到包含两个重要元素的原始词组：竖线符号和 ％count％ 占位符，请执行以下操作： 指翻译成一种语言的复数规则； 即使在某些单词本身具有较少形式的情况下，模板的数量也应与语言所包含的复数形式的数量相一致。 两种复数形式对应翻译中的两个模板；五个复数形式对应五个模板等。 不要忘记在模板之间使用竖线符号； 请勿翻译，填写或删除 ％count％ 占位符。 通过遵循这些简单的规则，您将会帮助 AdGuard 开发人员避免翻译过程中发生的许多不必要的复杂问题。 "},{"title":"指导与建议","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"指导与建议 在您开始翻译前，我们想要让您了解一些内容。 这样您不仅可以节省您的时间与精力，而且也能保证您翻译的句子与我们的本意更相近。 一旦您在 Crowdin 上打开我们的页面，选择您需要的任何项目并选择您的语言。 即使在打开某一个软件文件夹后，您也能切换语言。 选择任何可用的软件文件夹并选择一个文件，现在您可以开始翻译了。 请注意：用户也可以通过点击页面右上角的「Settings」图标改变 Crowdin 的界面语言。 在打开的窗口中向下滚动到「UI language」标签。 打开它，选择一种语言，然后点击「Change」。 以下指南将帮助您多了解翻译的过程。 您可以单击此按钮并选择任何提供的选项来筛选翻译项目。 在项目的文件之间轻松移动。 请注意在源短语用虚线突出的词语。 这些一般是专有名词（比如，商标名称），因此无需翻译。 在 AdGuard Glossary 项目里，您可以为能翻译的语言推荐您自己的翻译。 Crowdin 上的短语有时包含实用的提示，它们会帮助您更好地了解并翻译短语。 在「Context」字段您可以找到短语的解释。 请注意，一般在源短语「Context」字段下显示的图片。 它们会帮助您了解短语的使用背景、用法以表达短语的准确意义。 请注意您也可以按「REQUEST」按钮以要求我们为您提供具体的内容。 除了翻译以外，志愿者也可以为某一个短语留下注释。 使用注释以此提示我们或其他翻译者存在的错误、留下一些建议或问问题。 有时您会看到一些其他人留下的注释，别忘了去看一眼。 在首页还有 Discussions（讨论）标签。「Discussions」标签允许您查看某一个项目中所有的特定语言的注释。 Crowdin 平台具有一款好用便捷的工具叫 Translation Memory（翻译库）。 使用它，您可以查找同一个单词与短语以前做过的翻译。 在首页点击「Join」（加入）按钮加入项目后，您可以看到「Tasks」（任务）标签。这是专门为特定项目创建的任务。 请注意这些任务。在大部分情况下，它们具有更高的优先权。 有时候您会见到具有复数形式的短语。 由于中文的复数形式与英文不同，在这种情况下您只需要翻译一次。 您可以在这里阅读如何翻译复数形式。 如果您不清楚正确的量词，请在注释留下您的问题。 请不要直接与项目信息（Project info）里列入的项目管理员（project manager）或审核员（proofreader）联系。 如您有任何关于翻译的问题，请通过注释问审核员或管理员。 您还可以向我们发邮件：translate@adguard.com 或在 Telegram 群 问问题。 群主会尽快回复您。","keywords":""},{"title":"AdGuard 翻译","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard 翻译 免责声明：欢迎您通过给我们发邮件的方式：translate@adguard.com 询问任何与 AdGuard 翻译相关的问题，或您也可以加入我们的 Telegram 群。 说到翻译，我们 AdGuard 非常依赖志愿者们的无私奉献。 现在我们使用 Crowdin 平台来管理我们产品的翻译。 所以，所有想通过翻译任何喜欢的产品对 AdGuard 做贡献的志愿者们请移步 Crowdin 平台。 如您想加入 AdGuard 的翻译员大家族，请阅读信息以了解更多关于如何成为 AdGuard 翻译员，以及我们双方合作方式的详情。","keywords":""},{"title":"Reward system","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"Reward system As any honest and well-performed effort should be rewarded, active translators on Crowdin can request a free AdGuard license key and a VPN subscription. To request a one-year AdGuard license key or a one-year AdGuard VPN subscription, you must translate at least 500 and 2,500 words respectively. To check your translation progress, open a project you have worked on, click the Reports tab and select My Contribution. You can sum up the number of words translated in different projects to get a license. Here’s how our reward system works For the first one-year AdGuard license, you need to translate 500 words. For the second license, you need 1,000 words, i.e. 1,500 words altogether. All subsequent licenses require an additional 1,500 words per license. For the first one-year AdGuard VPN subscription, you need to translate 2,500 words. All subsequent subscriptions or renewals require an additional 2,500 words per subscription. Just send us a request to translate@adguard.com and you’ll get the license as a token of our gratitude. Besides, the most active translators may receive proofreader status in the future, should they express such an intention, and that promises even more good stuff. Every year we present gifts with the AdGuard logo to our active proofreaders. If you want to become one of them, please write to translate@adguard.com.","keywords":""},{"title":"How to prioritize the translations of Crowdin files","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"How to prioritize the translations of Crowdin files There are five major AdGuard projects on Crowdin — AdGuard Applications, AdGuard Websites, AdGuard Ad Blocker Knowledge base, AdGuard VPN Knowledge Base, and AdGuard DNS Knowledge Base. We do not have clear guidelines on which files or products of the AdGuard Applications project to start with. Just choose any product you like. There are just a couple of things we want to mention: You can see the app only in those languages for which all translations are completed in Crowdin;We recommend translating the descriptions for app stores in the second place, because without the translation of products themselves, the descriptions won't be needed. The situation is different in the AdGuard Websites project. Languages can be added to the site even if a full set of translations is not available. However, this depends on which files have already been translated. That's why we recommend that you start with the most important files — they are listed below: AdGuard Ad Blocker website critical.resxauth.resxwelcome.resx AdGuard VPN website critical.resxauth.resx AdGuard DNS website critical.resxauth.resx Adding new strings as well as updating existing ones in these files requires special attention from the project translators and proofreaders. In addition to websites, there is a file for translating transactional emails in the AdGuard Websites project. Newly added strings in this file also have a high translation priority.","keywords":""},{"title":"更新知识库","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"如何建议更改或写新文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"您可以使用上述 GitHub 的功能建议对当前文章进行更改并将新文章添加到知识库。 如果您不熟悉该平台的使用方法，请先阅读 GitHub 的文档。 准备就绪后，在知识库处理。 我们知识库中的所有文本都是用 Markdown 标记语言编写的。 在编辑或撰写文章时，请牢记这一点。 点击链接了解关于 Markdown 语法的更多信息。 知识库网站是用 Docusaurus 2 建立的，这是一个现代静态网站生成器。 在提出修改或补充建议时，要考虑到所有文件必须符合平台的规则。 用户可以在 Docusaurus 指南了解它们。 您可以把这个知识库部署在您的电脑上，以概述您建议的变化。 有关执行此操作的详细说明，可以在此知识库的 GitHub 页面上的 README 文件中找到。 "},{"title":"翻译文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"知识库现有文章的翻译是在 Crowdin 平台上进行的。 有关翻译和使用 Crowdin 的所有详细信息，都可以在 AdGuard 广告拦截程序知识库的专用文章中找到。 在撰写 AdGuard 知识库文章时，您可能会遇到包含复数形式的字符串，您应该格外注意翻译。 在另一篇文章中，我们详细描述了翻译具有复数形式的字符串时可能出现的困难，并就如何在 Crowdin 平台上处理这些问题给出了大量说明。 "},{"title":"处理未解决的问题​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/contribute/updating-knowledge-base/#处理未解决的问题","content":"有时存在与更新知识库相关的未完成任务。 您可以帮助我们以加速完成就像您对这个知识库提出任何其他修改建议一样。 选择您认为有吸引力的任何问题并开始处理它。 如果您有任何问题，您可以在对该问题的评论中直接提问。 "},{"title":"Writing about AdGuard","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"Writing about AdGuard If you like AdGuard and want to spread your impressions of the product(s) over the internet — in social media, personal blogs and/or on websites — then this article can be useful for you. Once you share your experience online, send us a link to pr@adguard.com and we'll thank you with a free license key. It does not really matter if your website's audience is ten people or a thousand, we respect every effort. The only note to keep in mind is that your review should be roughly about 300 to 500 words. If you want to make a video or to do something else, let us know in advance, just to avoid misunderstandings in the future. The same applies if your plan includes the use of AdGuard logo, banners or other visual elements. The contact email remains the same: pr@adguard.com.","keywords":""}]